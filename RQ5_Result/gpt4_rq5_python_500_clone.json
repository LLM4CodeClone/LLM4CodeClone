[
 {
  "f1": "a, b, c = map(int, input().split())\n\ntemp = c\nc = b\nb = a\na = temp\nprint(a, b, c)",
  "f2": "a,b,c=map(int,input().split())\ntemp=a\na=b\nb=temp\ntemp=a\na=c\nc=temp\nprint(a,b,c)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02717/s999196604.py",
  "f2_idx": "./Project_CodeNet_Python800/p02717/s574419510.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import defaultdict\n\nn = int(input())\nal = list(map(int, input().split()))\n\ndp = defaultdict(lambda: -10**18)\ndp[(0,0,False)] = 0\n\nfor i in range(n):\nfor j in range(i//2-1,i//2+2):\ndp[(i+1,j,False)] = max(\ndp[(i,j,False)],\ndp[(i,j,True)]\n)\ndp[(i+1,j,True)] = dp[(i,j-1,False)] + al[i]\n\nprint(max(\ndp[(n,n//2,False)],\ndp[(n,n//2,True)]\n))",
  "f2": "from collections import defaultdict\n\nn = int(input())\nal = list(map(int, input().split()))\n\ndp = defaultdict(lambda: -10**18)\ndp[(0,0,False)] = 0\n\nfor i in range(n):\nfor j in range(i//2-1,i//2+2):\ndp[(i+1,j,False)] = max(\ndp[(i,j,False)],\ndp[(i,j,True)]\n)\ndp[(i+1,j,True)] = dp[(i,j-1,False)] + al[i]\n\nprint(max(\ndp[(n,n//2,False)],\ndp[(n,n//2,True)]\n))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02716/s580240264.py",
  "f2_idx": "./Project_CodeNet_Python800/p02716/s580240264.py",
  "response": "Yes"
 },
 {
  "f1": "R = int(input())\n\nprint('ABC' if 1200 > R else 'ARC' if 2800 > R else 'AGC')",
  "f2": "R = int(input())\n\nprint('ABC' if 1200 > R else 'ARC' if 2800 > R else 'AGC')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03288/s864600873.py",
  "f2_idx": "./Project_CodeNet_Python800/p03288/s864600873.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\nmod=2019\nL,R=MI()\n\nif R-L>=2019:\nprint(0)\nexit()\na=L%mod\nb=R%mod\nif b<=a:\nprint(0)\nexit()\n\nans=mod\nfor i in range(a,b+1):\nfor j in range(i+1,b+1):\ntemp=(i*j)%mod\nans=min(ans,temp)\n\nprint(ans)\n\n\nmain()",
  "f2": "import sys\ninput = sys.stdin.readline\n\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\ndef main():\nmod=2019\nL,R=MI()\n\nif R-L>=2019:\nprint(0)\nexit()\na=L%mod\nb=R%mod\nif b<=a:\nprint(0)\nexit()\n\nans=mod\nfor i in range(a,b+1):\nfor j in range(i+1,b+1):\ntemp=(i*j)%mod\nans=min(ans,temp)\n\nprint(ans)\n\n\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02983/s781817485.py",
  "f2_idx": "./Project_CodeNet_Python800/p02983/s781817485.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nd = {}\nfor i in range(N):\ns = input()\nif s in d.keys():\nd[s] += 1\nelse:\nd[s] = 1\nmx = 0\nfor i in d.values():\nmx = max(mx, i)\nfor i in sorted(d.items()):\nif i[1] == mx:\nprint(i[0])",
  "f2": "N = int(input())\nd = {}\nfor i in range(N):\ns = input()\nif s in d.keys():\nd[s] += 1\nelse:\nd[s] = 1\nmx = 0\nfor i in d.values():\nmx = max(mx, i)\nfor i in sorted(d.items()):\nif i[1] == mx:\nprint(i[0])",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02773/s318798632.py",
  "f2_idx": "./Project_CodeNet_Python800/p02773/s318798632.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\na[i+1] = min(b[i],b[i+1])\n\nprint(sum(a))",
  "f2": "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\na[i+1] = min(b[i],b[i+1])\n\nprint(sum(a))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02917/s653861550.py",
  "f2_idx": "./Project_CodeNet_Python800/p02917/s653861550.py",
  "response": "Yes"
 },
 {
  "f1": "# https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_d\n\nfrom itertools import combinations\n\nn = int(input())\nk = -1\nfor i in range(10**3):\nif i*i - i - 2 * n == 0:\nk = i\n\nif k == -1:\nprint('No')\nexit()\n\n# print('Yes')\n# print(k)\n\nnum = 0\nV = [[] for _ in range(k)]\nfor cmb in combinations(range(k), r=2):\nnum += 1\na, b = cmb\nV[a].append(num)\nV[b].append(num)\nprint('Yes')\nprint(k)\nfor v in V:\nprint(len(v), end=\" \")\nprint(*v)",
  "f2": "# https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_d\n\nfrom itertools import combinations\n\nn = int(input())\nk = -1\nfor i in range(10**3):\nif i*i - i - 2 * n == 0:\nk = i\n\nif k == -1:\nprint('No')\nexit()\n\n# print('Yes')\n# print(k)\n\nnum = 0\nV = [[] for _ in range(k)]\nfor cmb in combinations(range(k), r=2):\nnum += 1\na, b = cmb\nV[a].append(num)\nV[b].append(num)\nprint('Yes')\nprint(k)\nfor v in V:\nprint(len(v), end=\" \")\nprint(*v)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03230/s366576461.py",
  "f2_idx": "./Project_CodeNet_Python800/p03230/s366576461.py",
  "response": "Yes"
 },
 {
  "f1": "S = input()\nw = int(input())\nprint(''.join([s for s in S[::w]]))",
  "f2": "S = input()\nw = int(input())\nprint(''.join([s for s in S[::w]]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03303/s024293951.py",
  "f2_idx": "./Project_CodeNet_Python800/p03303/s024293951.py",
  "response": "Yes"
 },
 {
  "f1": "N, A, B, C, D = list(map(int, input().split()))\nS = input()\n\nA -= 1\nB -= 1\nC -= 1\nD -= 1\n\nright_end = max(C, D)\nS = S[A:right_end+1]\n\nans = True\nif A < B < C < D:\nif S.count('##'):\nans = False\nelif A < C < B < D:\nif S[A:C+1].count('##') or S[B:D+1].count('##'):\nans = False\nelse:\nif S.count('##'):\nans = False\nelif S[B:D+2].count('...'):\npass\nelif S[B-1:B+2] == '...':\npass\nelse:\nans = False\n\nif ans:\nprint('Yes')\nelse:\nprint('No')\n\n# print(S)\n# print(iwaiwa)\n# print(S[B-1:B+2])",
  "f2": "N, A, B, C, D = list(map(int, input().split()))\nS = input()\n\nA -= 1\nB -= 1\nC -= 1\nD -= 1\n\nright_end = max(C, D)\nS = S[A:right_end+1]\n\nans = True\nif A < B < C < D:\nif S.count('##'):\nans = False\nelif A < C < B < D:\nif S[A:C+1].count('##') or S[B:D+1].count('##'):\nans = False\nelse:\nif S.count('##'):\nans = False\nelif S[B:D+2].count('...'):\npass\nelif S[B-1:B+2] == '...':\npass\nelse:\nans = False\n\nif ans:\nprint('Yes')\nelse:\nprint('No')\n\n# print(S)\n# print(iwaiwa)\n# print(S[B-1:B+2])",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03017/s922223606.py",
  "f2_idx": "./Project_CodeNet_Python800/p03017/s922223606.py",
  "response": "Yes"
 },
 {
  "f1": "x = int(input())\nres = (x // 11) * 2\nif 1 <= x % 11 <= 6:\nres += 1\nelif 7 <= x % 11 <= 10:\nres += 2\nprint(res)",
  "f2": "x = int(input())\nres = (x // 11) * 2\nif 1 <= x % 11 <= 6:\nres += 1\nelif 7 <= x % 11 <= 10:\nres += 2\nprint(res)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03815/s478903035.py",
  "f2_idx": "./Project_CodeNet_Python800/p03815/s478903035.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = list(map(int, input().split()))\nd = {}\nfor a in A:\nfor i in range(a - 1, a + 2):\nd[i] = d.get(i, 0) + 1\nx = sorted(d.values())\nprint(max(x))",
  "f2": "N = int(input())\nA = list(map(int, input().split()))\nd = {}\nfor a in A:\nfor i in range(a - 1, a + 2):\nd[i] = d.get(i, 0) + 1\nx = sorted(d.values())\nprint(max(x))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03611/s017544986.py",
  "f2_idx": "./Project_CodeNet_Python800/p03611/s017544986.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nif len(s) < 4:\nprint('No')\nelif s[:4] == 'YAKI':\nprint('Yes')\nelse:\nprint('No')",
  "f2": "s = input()\nif len(s) < 4:\nprint('No')\nelif s[:4] == 'YAKI':\nprint('Yes')\nelse:\nprint('No')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03591/s683167726.py",
  "f2_idx": "./Project_CodeNet_Python800/p03591/s683167726.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c = list(map(int,input().split()))\nd = [a,b,c]\nd.sort()\nprint('Yes' if d[0]+d[1]==d[2] else 'No')",
  "f2": "a,b,c = list(map(int,input().split()))\nd = [a,b,c]\nd.sort()\nprint('Yes' if d[0]+d[1]==d[2] else 'No')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03943/s100494410.py",
  "f2_idx": "./Project_CodeNet_Python800/p03943/s100494410.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nx, y = map(int, input().split())\nlist = [1, 3, 5, 7, 8, 10, 12]\nlists = [4, 6, 9, 11]\nprint(\"Yes\" if (list.count(x) == 1 and list.count(y)) or (lists.count(x) == 1 and lists.count(y)) else \"No\")\nresolve()",
  "f2": "def resolve():\nx, y = map(int, input().split())\nlist = [1, 3, 5, 7, 8, 10, 12]\nlists = [4, 6, 9, 11]\nprint(\"Yes\" if (list.count(x) == 1 and list.count(y)) or (lists.count(x) == 1 and lists.count(y)) else \"No\")\nresolve()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03711/s123078982.py",
  "f2_idx": "./Project_CodeNet_Python800/p03711/s123078982.py",
  "response": "Yes"
 },
 {
  "f1": "A,B,C,K=list(map(str,input().split()))\nif K[-1]=='0' or K[-1]=='2' or K[-1]=='4' or K[-1]=='6' or K[-1]=='8':\nans=int(A)-int(B)\nif len(str(ans))>18:\nprint('unfair')\nelse:\nprint(ans)\nelse:\nans=int(B)-int(A)\nif len(str(ans))>18:\nprint('unfair')\nelse:\nprint(ans)",
  "f2": "A,B,C,K=list(map(str,input().split()))\nif K[-1]=='0' or K[-1]=='2' or K[-1]=='4' or K[-1]=='6' or K[-1]=='8':\nans=int(A)-int(B)\nif len(str(ans))>18:\nprint('unfair')\nelse:\nprint(ans)\nelse:\nans=int(B)-int(A)\nif len(str(ans))>18:\nprint('unfair')\nelse:\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03345/s198564236.py",
  "f2_idx": "./Project_CodeNet_Python800/p03345/s198564236.py",
  "response": "Yes"
 },
 {
  "f1": "n,m,l=map(int,input().split())\nA=[list(map(int,input().split())) for i in range(n)]\nB=[list(map(int,input().split())) for i in range(m)]\n#print(A)\n#print(B)\n\nfor i in range(n):\nfor j in range(l):\nyouso=0\nfor k in range(m):\nyouso+=A[i][k]*B[k][j]\nif j==0:\nprint(youso,end=\"\")\nelse:\nprint(\"\",youso,end=\"\")\nprint(\"\")",
  "f2": "n,m,l=map(int,input().split())\nA=[list(map(int,input().split())) for i in range(n)]\nB=[list(map(int,input().split())) for i in range(m)]\n#print(A)\n#print(B)\n\nfor i in range(n):\nfor j in range(l):\nyouso=0\nfor k in range(m):\nyouso+=A[i][k]*B[k][j]\nif j==0:\nprint(youso,end=\"\")\nelse:\nprint(\"\",youso,end=\"\")\nprint(\"\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02414/s651500007.py",
  "f2_idx": "./Project_CodeNet_Python800/p02414/s651500007.py",
  "response": "Yes"
 },
 {
  "f1": "[print(i) for i in (sorted([int(input()) for _ in range(10)])[:6:-1])]",
  "f2": "[print(i) for i in (sorted([int(input()) for _ in range(10)])[:6:-1])]",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p00001/s257016339.py",
  "f2_idx": "./Project_CodeNet_Python800/p00001/s257016339.py",
  "response": "Yes"
 },
 {
  "f1": "#!usr/bin/env python3\n\nimport sys\n\n\nclass Die:\ndef __init__(self, pips):\nself.pips = pips\n\ndef move_die(self, direction):\ntmp = int()\nif direction == 'N':\ntmp = self.pips[0]\nself.pips[0] = self.pips[1]\nself.pips[1] = self.pips[5]\nself.pips[5] = self.pips[4]\nself.pips[4] = tmp\ndel tmp\nelif direction == 'S':\ntmp = self.pips[0]\nself.pips[0] = self.pips[4]\nself.pips[4] = self.pips[5]\nself.pips[5] = self.pips[1]\nself.pips[1] = tmp\ndel tmp\nelif direction == 'E':\ntmp = self.pips[0]\nself.pips[0] = self.pips[3]\nself.pips[3] = self.pips[5]\nself.pips[5] = self.pips[2]\nself.pips[2] = tmp\ndel tmp\nelif direction == 'W':\ntmp = self.pips[0]\nself.pips[0] = self.pips[2]\nself.pips[2] = self.pips[5]\nself.pips[5] = self.pips[3]\nself.pips[3] = tmp\ndel tmp\n\ndef spin_die_clockwise(self):\ntmp = self.pips[1]\nself.pips[1] = self.pips[2]\nself.pips[2] = self.pips[4]\nself.pips[4] = self.pips[3]\nself.pips[3] = tmp\ndel tmp\n\ndef get_upside(self):\nreturn self.pips[0]\n\ndef get_frontside(self):\nreturn self.pips[1]\n\ndef get_rightside(self):\nreturn self.pips[2]\n\n\ndef init_die():\npips = [int(pip) for pip in sys.stdin.readline().strip('\\n').split()]\ndie = Die(pips)\nreturn die\n\n\ndef roll_die(die):\ndirections = list(sys.stdin.readline().strip('\\n'))\n\nfor direction in directions:\ndie.move_die(direction)\n\nreturn die\n\n\ndef main():\ndie = init_die()\nq = int(sys.stdin.readline().strip('\\n'))\n\nfor question in range(q):\nq_pips = [int(pip) for pip in sys.stdin.readline().strip('\\n').split()]\n\nif q_pips[0] == die.pips[0]:\npass\nelif q_pips[0] == die.pips[1]:\ndie.move_die('N')\nelif q_pips[0] == die.pips[2]:\ndie.move_die('W')\nelif q_pips[0] == die.pips[3]:\ndie.move_die('E')\nelif q_pips[0] == die.pips[4]:\ndie.move_die('S')\nelif q_pips[0] == die.pips[5]:\ndie.move_die('N')\ndie.move_die('N')\n\nwhile die.get_frontside() != q_pips[1]:\ndie.spin_die_clockwise()\n\nprint(die.get_rightside())\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "#!usr/bin/env python3\n\nimport sys\n\n\nclass Die:\ndef __init__(self, pips):\nself.pips = pips\n\ndef move_die(self, direction):\ntmp = int()\nif direction == 'N':\ntmp = self.pips[0]\nself.pips[0] = self.pips[1]\nself.pips[1] = self.pips[5]\nself.pips[5] = self.pips[4]\nself.pips[4] = tmp\ndel tmp\nelif direction == 'S':\ntmp = self.pips[0]\nself.pips[0] = self.pips[4]\nself.pips[4] = self.pips[5]\nself.pips[5] = self.pips[1]\nself.pips[1] = tmp\ndel tmp\nelif direction == 'E':\ntmp = self.pips[0]\nself.pips[0] = self.pips[3]\nself.pips[3] = self.pips[5]\nself.pips[5] = self.pips[2]\nself.pips[2] = tmp\ndel tmp\nelif direction == 'W':\ntmp = self.pips[0]\nself.pips[0] = self.pips[2]\nself.pips[2] = self.pips[5]\nself.pips[5] = self.pips[3]\nself.pips[3] = tmp\ndel tmp\n\ndef spin_die_clockwise(self):\ntmp = self.pips[1]\nself.pips[1] = self.pips[2]\nself.pips[2] = self.pips[4]\nself.pips[4] = self.pips[3]\nself.pips[3] = tmp\ndel tmp\n\ndef get_upside(self):\nreturn self.pips[0]\n\ndef get_frontside(self):\nreturn self.pips[1]\n\ndef get_rightside(self):\nreturn self.pips[2]\n\n\ndef init_die():\npips = [int(pip) for pip in sys.stdin.readline().strip('\\n').split()]\ndie = Die(pips)\nreturn die\n\n\ndef roll_die(die):\ndirections = list(sys.stdin.readline().strip('\\n'))\n\nfor direction in directions:\ndie.move_die(direction)\n\nreturn die\n\n\ndef main():\ndie = init_die()\nq = int(sys.stdin.readline().strip('\\n'))\n\nfor question in range(q):\nq_pips = [int(pip) for pip in sys.stdin.readline().strip('\\n').split()]\n\nif q_pips[0] == die.pips[0]:\npass\nelif q_pips[0] == die.pips[1]:\ndie.move_die('N')\nelif q_pips[0] == die.pips[2]:\ndie.move_die('W')\nelif q_pips[0] == die.pips[3]:\ndie.move_die('E')\nelif q_pips[0] == die.pips[4]:\ndie.move_die('S')\nelif q_pips[0] == die.pips[5]:\ndie.move_die('N')\ndie.move_die('N')\n\nwhile die.get_frontside() != q_pips[1]:\ndie.spin_die_clockwise()\n\nprint(die.get_rightside())\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02384/s062576039.py",
  "f2_idx": "./Project_CodeNet_Python800/p02384/s062576039.py",
  "response": "Yes"
 },
 {
  "f1": "s=str(input())\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)",
  "f2": "s=str(input())\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03636/s160287748.py",
  "f2_idx": "./Project_CodeNet_Python800/p03636/s160287748.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = [int(x) for x in input().split()]\nans = 'No'\nfor i in range(n):\nif a[i] % 4 == 0:\na[i] = 4\nelif a[i] % 2 == 0:\na[i] = 2\nelse:\na[i] = 1\n\nif a.count(2) != 0:\nif a.count(4) >= a.count(1):\nans = 'Yes'\nelse:\nif a.count(4) + 1 >= a.count(1):\nans = 'Yes'\nprint(ans)",
  "f2": "n = int(input())\na = [int(x) for x in input().split()]\nans = 'No'\nfor i in range(n):\nif a[i] % 4 == 0:\na[i] = 4\nelif a[i] % 2 == 0:\na[i] = 2\nelse:\na[i] = 1\n\nif a.count(2) != 0:\nif a.count(4) >= a.count(1):\nans = 'Yes'\nelse:\nif a.count(4) + 1 >= a.count(1):\nans = 'Yes'\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03637/s421943253.py",
  "f2_idx": "./Project_CodeNet_Python800/p03637/s421943253.py",
  "response": "Yes"
 },
 {
  "f1": "#!/usr/bin/env pypy\n\nimport sys\nfrom typing import Any, Callable, Deque, Dict, List, Mapping, Optional, Sequence, Set, Tuple, TypeVar, Union\n# import time\n# import math\n# import numpy as np\n# import scipy.sparse.csgraph as cs            # csgraph_from_dense(ndarray, null_value=inf), bellman_ford(G, return_predecessors=True), dijkstra, floyd_warshall\n# import random                                # random, uniform, randint, randrange, shuffle, sample\n# import string                                # ascii_lowercase, ascii_uppercase, ascii_letters, digits, hexdigits\n# import re                                    # re.compile(pattern) => ptn obj; p.search(s), p.match(s), p.finditer(s) => match obj; p.sub(after, s)\n# from bisect import bisect_left, bisect_right # bisect_left(a, x, lo=0, hi=len(a)) returns i such that all(val<x for val in a[lo:i]) and all(val>-=x for val in a[i:hi]).\n# from collections import deque                # deque class. deque(L): dq.append(x), dq.appendleft(x), dq.pop(), dq.popleft(), dq.rotate()\n# from collections import defaultdict          # subclass of dict. defaultdict(facroty)\n# from collections import Counter              # subclass of dict. Counter(iter): c.elements(), c.most_common(n), c.subtract(iter)\n# from datetime import date, datetime          # date.today(), date(year,month,day) => date obj; datetime.now(), datetime(year,month,day,hour,second,microsecond) => datetime obj; subtraction => timedelta obj\n# from datetime.datetime import strptime       # strptime('2019/01/01 10:05:20', '%Y/%m/%d/ %H:%M:%S') returns datetime obj\n# from datetime import timedelta               # td.days, td.seconds, td.microseconds, td.total_seconds(). abs function is also available.\n# from copy import copy, deepcopy              # use deepcopy to copy multi-dimentional matrix without reference\n# from functools import reduce                 # reduce(f, iter[, init])\n# from functools import lru_cache              # @lrucache ...arguments of functions should be able to be keys of dict (e.g. list is not allowed)\n# from heapq import heapify, heappush, heappop # built-in list. heapify(L) changes list in-place to min-heap in O(n), heappush(heapL, x) and heappop(heapL) in O(lgn).\n# from heapq import nlargest, nsmallest        # nlargest(n, iter[, key]) returns k-largest-list in O(n+klgn).\n# from itertools import count, cycle, repeat   # count(start[,step]), cycle(iter), repeat(elm[,n])\n# from itertools import groupby                # [(k, list(g)) for k, g in groupby('000112')] returns [('0',['0','0','0']), ('1',['1','1']), ('2',['2'])]\n# from itertools import starmap                # starmap(pow, [[2,5], [3,2]]) returns [32, 9]\n# from itertools import product, permutations  # product(iter, repeat=n), permutations(iter[,r])\n# from itertools import combinations, combinations_with_replacement\n# from itertools import accumulate             # accumulate(iter[, f])\n# from operator import itemgetter              # itemgetter(1), itemgetter('key')\n# from fractions import Fraction               # Fraction(a, b) => a / b ∈ Q. note: Fraction(0.1) do not returns Fraciton(1, 10). Fraction('0.1') returns Fraction(1, 10)\n\n\n\ndef main():\nNum = Union[int, float]\nmod = 1000000007                # 10^9+7\ninf = float('inf')              # sys.float_info.max = 1.79e+308\n# inf = 2 ** 63 - 1             # (for fast JIT compile in PyPy) 9.22e+18\nsys.setrecursionlimit(10**6)    # 1000 -> 1000000\ndef input(): return sys.stdin.readline().rstrip()\ndef ii():    return int(input())\ndef isp():   return input().split()\ndef mi():    return map(int, input().split())\ndef mi_0():  return map(lambda x: int(x)-1, input().split())\ndef lmi():   return list(map(int, input().split()))\ndef lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\ndef li():    return list(input())\n\n\ndef check(n, m, k):\nfor i in range(n + 1):\nfor j in range(m + 1):\nif i * j + (n - i) * (m - j) == k:\nreturn True\nreturn False\n\n\nn, m, k = mi()\nprint('Yes') if check(n, m, k) else print('No')\n\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "#!/usr/bin/env pypy\n\nimport sys\nfrom typing import Any, Callable, Deque, Dict, List, Mapping, Optional, Sequence, Set, Tuple, TypeVar, Union\n# import time\n# import math\n# import numpy as np\n# import scipy.sparse.csgraph as cs            # csgraph_from_dense(ndarray, null_value=inf), bellman_ford(G, return_predecessors=True), dijkstra, floyd_warshall\n# import random                                # random, uniform, randint, randrange, shuffle, sample\n# import string                                # ascii_lowercase, ascii_uppercase, ascii_letters, digits, hexdigits\n# import re                                    # re.compile(pattern) => ptn obj; p.search(s), p.match(s), p.finditer(s) => match obj; p.sub(after, s)\n# from bisect import bisect_left, bisect_right # bisect_left(a, x, lo=0, hi=len(a)) returns i such that all(val<x for val in a[lo:i]) and all(val>-=x for val in a[i:hi]).\n# from collections import deque                # deque class. deque(L): dq.append(x), dq.appendleft(x), dq.pop(), dq.popleft(), dq.rotate()\n# from collections import defaultdict          # subclass of dict. defaultdict(facroty)\n# from collections import Counter              # subclass of dict. Counter(iter): c.elements(), c.most_common(n), c.subtract(iter)\n# from datetime import date, datetime          # date.today(), date(year,month,day) => date obj; datetime.now(), datetime(year,month,day,hour,second,microsecond) => datetime obj; subtraction => timedelta obj\n# from datetime.datetime import strptime       # strptime('2019/01/01 10:05:20', '%Y/%m/%d/ %H:%M:%S') returns datetime obj\n# from datetime import timedelta               # td.days, td.seconds, td.microseconds, td.total_seconds(). abs function is also available.\n# from copy import copy, deepcopy              # use deepcopy to copy multi-dimentional matrix without reference\n# from functools import reduce                 # reduce(f, iter[, init])\n# from functools import lru_cache              # @lrucache ...arguments of functions should be able to be keys of dict (e.g. list is not allowed)\n# from heapq import heapify, heappush, heappop # built-in list. heapify(L) changes list in-place to min-heap in O(n), heappush(heapL, x) and heappop(heapL) in O(lgn).\n# from heapq import nlargest, nsmallest        # nlargest(n, iter[, key]) returns k-largest-list in O(n+klgn).\n# from itertools import count, cycle, repeat   # count(start[,step]), cycle(iter), repeat(elm[,n])\n# from itertools import groupby                # [(k, list(g)) for k, g in groupby('000112')] returns [('0',['0','0','0']), ('1',['1','1']), ('2',['2'])]\n# from itertools import starmap                # starmap(pow, [[2,5], [3,2]]) returns [32, 9]\n# from itertools import product, permutations  # product(iter, repeat=n), permutations(iter[,r])\n# from itertools import combinations, combinations_with_replacement\n# from itertools import accumulate             # accumulate(iter[, f])\n# from operator import itemgetter              # itemgetter(1), itemgetter('key')\n# from fractions import Fraction               # Fraction(a, b) => a / b ∈ Q. note: Fraction(0.1) do not returns Fraciton(1, 10). Fraction('0.1') returns Fraction(1, 10)\n\n\n\ndef main():\nNum = Union[int, float]\nmod = 1000000007                # 10^9+7\ninf = float('inf')              # sys.float_info.max = 1.79e+308\n# inf = 2 ** 63 - 1             # (for fast JIT compile in PyPy) 9.22e+18\nsys.setrecursionlimit(10**6)    # 1000 -> 1000000\ndef input(): return sys.stdin.readline().rstrip()\ndef ii():    return int(input())\ndef isp():   return input().split()\ndef mi():    return map(int, input().split())\ndef mi_0():  return map(lambda x: int(x)-1, input().split())\ndef lmi():   return list(map(int, input().split()))\ndef lmi_0(): return list(map(lambda x: int(x)-1, input().split()))\ndef li():    return list(input())\n\n\ndef check(n, m, k):\nfor i in range(n + 1):\nfor j in range(m + 1):\nif i * j + (n - i) * (m - j) == k:\nreturn True\nreturn False\n\n\nn, m, k = mi()\nprint('Yes') if check(n, m, k) else print('No')\n\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03592/s894514161.py",
  "f2_idx": "./Project_CodeNet_Python800/p03592/s894514161.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\na = [input() for _ in range(n)]\nb = [input() for _ in range(m)]\nfor i in range(n-m+1):\nfor j in range(n-m+1):\nif b[0][0] == a[i][j]:\ncnt = 0\nfor x in range(m):\nflag = True\nif flag == False:\nbreak\nfor y in range(m):\nif b[x][y] == a[i+x][j+y]:\ncnt += 1\npass\nelse:\nflag = False\nbreak\nif cnt == m**2:\nprint(\"Yes\")\nexit()\nprint(\"No\")",
  "f2": "n, m = map(int, input().split())\na = [input() for _ in range(n)]\nb = [input() for _ in range(m)]\nfor i in range(n-m+1):\nfor j in range(n-m+1):\nif b[0][0] == a[i][j]:\ncnt = 0\nfor x in range(m):\nflag = True\nif flag == False:\nbreak\nfor y in range(m):\nif b[x][y] == a[i+x][j+y]:\ncnt += 1\npass\nelse:\nflag = False\nbreak\nif cnt == m**2:\nprint(\"Yes\")\nexit()\nprint(\"No\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03804/s575654012.py",
  "f2_idx": "./Project_CodeNet_Python800/p03804/s575654012.py",
  "response": "Yes"
 },
 {
  "f1": "H,W = map(int,input().split())\nA = [input() for i in range(H)]\nfrom collections import Counter\nctr = Counter()\nfor row in A:\nctr.update(row)\n\nif H%2==0 and W%2==0:\nprint('Yes' if all(v%4==0 for v in ctr.values()) else 'No')\nexit()\n\nif H%2==0 or W%2==0:\nif H%2: H,W = W,H\nif any(v%2 for v in ctr.values()):\nprint('No')\nexit()\npair = 0\nfor v in ctr.values():\nif v%4==2:\npair += 1\nprint('Yes' if pair*2 <= H else 'No')\n\nelse:\nodd = 0\nfor k in ctr.keys():\nif ctr[k]%2:\nodd += 1\nctr[k] -= 1\nif odd != 1:\nprint('No')\nexit()\npair = 0\nfor v in ctr.values():\nif v%4==2:\npair += 1\nprint('Yes' if pair*2 <= H+W-2 else 'No')",
  "f2": "H,W = map(int,input().split())\nA = [input() for i in range(H)]\nfrom collections import Counter\nctr = Counter()\nfor row in A:\nctr.update(row)\n\nif H%2==0 and W%2==0:\nprint('Yes' if all(v%4==0 for v in ctr.values()) else 'No')\nexit()\n\nif H%2==0 or W%2==0:\nif H%2: H,W = W,H\nif any(v%2 for v in ctr.values()):\nprint('No')\nexit()\npair = 0\nfor v in ctr.values():\nif v%4==2:\npair += 1\nprint('Yes' if pair*2 <= H else 'No')\n\nelse:\nodd = 0\nfor k in ctr.keys():\nif ctr[k]%2:\nodd += 1\nctr[k] -= 1\nif odd != 1:\nprint('No')\nexit()\npair = 0\nfor v in ctr.values():\nif v%4==2:\npair += 1\nprint('Yes' if pair*2 <= H+W-2 else 'No')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03593/s065097494.py",
  "f2_idx": "./Project_CodeNet_Python800/p03593/s065097494.py",
  "response": "Yes"
 },
 {
  "f1": "A = list(map(int,input().split()))\nX = abs(A[0]-A[1])\nY = abs(A[1]-A[2])\nZ = abs(A[2]-A[0])\nprint(X+Y+Z-max(X,Y,Z))",
  "f2": "A = list(map(int,input().split()))\nX = abs(A[0]-A[1])\nY = abs(A[1]-A[2])\nZ = abs(A[2]-A[0])\nprint(X+Y+Z-max(X,Y,Z))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03292/s222631243.py",
  "f2_idx": "./Project_CodeNet_Python800/p03292/s222631243.py",
  "response": "Yes"
 },
 {
  "f1": "h,w,k=map(int,input().split())\nans=[[0]*w for i in range(h)]\n\nnum=0\nfor i in range(h):\ns=input()\n\nif '#' not in s:\nif i==0 or ans[i-1]==[0]*w:\ncontinue\nelse:\nans[i]=ans[i-1]\n\nelse:\nfor j in range(w):\nif s[j]=='#':\nnum+=1\nans[i][j]=num\nelse:\nif j>=1 and ans[i][j-1]!=0:\nans[i][j]=ans[i][j-1]\n\nif ans[0]==[0]*w:\ni=0\nwhile ans[i]==[0]*w:\ni+=1\nfor j in range(i):\nans[j]=ans[i]\n\nfor i in range(h):\nif ans[i][0]==0:\nj=0\nwhile ans[i][j]==0:\nj+=1\nfor k in range(j):\nans[i][k]=ans[i][j]\n\nfor i in range(h):\nprint(*ans[i])",
  "f2": "h,w,k=map(int,input().split())\nans=[[0]*w for i in range(h)]\n\nnum=0\nfor i in range(h):\ns=input()\n\nif '#' not in s:\nif i==0 or ans[i-1]==[0]*w:\ncontinue\nelse:\nans[i]=ans[i-1]\n\nelse:\nfor j in range(w):\nif s[j]=='#':\nnum+=1\nans[i][j]=num\nelse:\nif j>=1 and ans[i][j-1]!=0:\nans[i][j]=ans[i][j-1]\n\nif ans[0]==[0]*w:\ni=0\nwhile ans[i]==[0]*w:\ni+=1\nfor j in range(i):\nans[j]=ans[i]\n\nfor i in range(h):\nif ans[i][0]==0:\nj=0\nwhile ans[i][j]==0:\nj+=1\nfor k in range(j):\nans[i][k]=ans[i][j]\n\nfor i in range(h):\nprint(*ans[i])",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02855/s568594582.py",
  "f2_idx": "./Project_CodeNet_Python800/p02855/s568594582.py",
  "response": "Yes"
 },
 {
  "f1": "n,m = map(int,input().split())\nedge = []\nfor _ in range(m):\na,b,c = map(int,input().split())\nedge.append((a,b,-c))\ndis = [float(\"inf\")]*(n+1)\ndis[1] = 0\nf = 0\nfor i in range(n):\nfor a,b,c in edge:\nif dis[b] > dis[a] + c:\ndis[b] = dis[a] + c\nif i == n-1:\nf = 1\nans = dis[n]\nif f:\nfor _ in range(n):\nfor a,b,c in edge:\nif dis[b] > dis[a] + c:\ndis[b] = dis[a] + c\nif b == n:\nprint(\"inf\")\nexit(0)\nprint(-ans)",
  "f2": "n,m = map(int,input().split())\nedge = []\nfor _ in range(m):\na,b,c = map(int,input().split())\nedge.append((a,b,-c))\ndis = [float(\"inf\")]*(n+1)\ndis[1] = 0\nf = 0\nfor i in range(n):\nfor a,b,c in edge:\nif dis[b] > dis[a] + c:\ndis[b] = dis[a] + c\nif i == n-1:\nf = 1\nans = dis[n]\nif f:\nfor _ in range(n):\nfor a,b,c in edge:\nif dis[b] > dis[a] + c:\ndis[b] = dis[a] + c\nif b == n:\nprint(\"inf\")\nexit(0)\nprint(-ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03722/s217133703.py",
  "f2_idx": "./Project_CodeNet_Python800/p03722/s217133703.py",
  "response": "Yes"
 },
 {
  "f1": "# vim: fileencoding=utf-8\n\n\ndef main():\nn = int(input())\nli = [0] * 102\nfor i in range(n):\nd = int(input())\nli[d] = 1\nans = 0\nfor i in range(102):\nif li[i] == 1:\nans += 1\nprint(ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "# vim: fileencoding=utf-8\n\n\ndef main():\nn = int(input())\nli = [0] * 102\nfor i in range(n):\nd = int(input())\nli[d] = 1\nans = 0\nfor i in range(102):\nif li[i] == 1:\nans += 1\nprint(ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03470/s086516728.py",
  "f2_idx": "./Project_CodeNet_Python800/p03470/s086516728.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split(\",\")\nprint(' '.join(s))",
  "f2": "s = input().split(\",\")\nprint(' '.join(s))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nH = list(map(int, input().split()))\n\nbefore = H[0]\n\nfor h in H:\nif before > h:\nprint(\"No\")\nbreak\nif before < h:\nbefore = h - 1\nif before == h:\nbefore = h\nelse:\nprint(\"Yes\")",
  "f2": "N = int(input())\nH = list(map(int, input().split()))\n\nbefore = H[0]\n\nfor h in H:\nif before > h:\nprint(\"No\")\nbreak\nif before < h:\nbefore = h - 1\nif before == h:\nbefore = h\nelse:\nprint(\"Yes\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02953/s136836954.py",
  "f2_idx": "./Project_CodeNet_Python800/p02953/s136836954.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nr = float(input())\n\nS = r * r * math.pi\nC = r * 2 * math.pi\nprint(\"{0:02.6f}\".format(S), end =\" \")\nprint(\"{0:02.6f}\".format(C))",
  "f2": "import math\nr = float(input())\n\nS = r * r * math.pi\nC = r * 2 * math.pi\nprint(\"{0:02.6f}\".format(S), end =\" \")\nprint(\"{0:02.6f}\".format(C))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02400/s819713986.py",
  "f2_idx": "./Project_CodeNet_Python800/p02400/s819713986.py",
  "response": "Yes"
 },
 {
  "f1": "x,y=map(int,input().split())\nif x%2==0:\nprint(\"Even\")\nelif y%2==1:\nprint(\"Odd\")\nelse:\nprint(\"Even\")",
  "f2": "x,y=map(int,input().split())\nif x%2==0:\nprint(\"Even\")\nelif y%2==1:\nprint(\"Odd\")\nelse:\nprint(\"Even\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03455/s655652616.py",
  "f2_idx": "./Project_CodeNet_Python800/p03455/s655652616.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na, b = map(int, input().split())\nans = math.ceil((a + b) / 2)\nprint(ans)",
  "f2": "import math\na, b = map(int, input().split())\nans = math.ceil((a + b) / 2)\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03485/s493416360.py",
  "f2_idx": "./Project_CodeNet_Python800/p03485/s493416360.py",
  "response": "Yes"
 },
 {
  "f1": "N, M = map(int,input().split())\ndef make_divisors(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn lower_divisors + upper_divisors[::-1]\nD = sorted(make_divisors(M))[::-1]\n\nfor e in D:\nif N*e <= M:\nprint(e)\nexit(0)",
  "f2": "N, M = map(int,input().split())\ndef make_divisors(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn lower_divisors + upper_divisors[::-1]\nD = sorted(make_divisors(M))[::-1]\n\nfor e in D:\nif N*e <= M:\nprint(e)\nexit(0)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03241/s970336140.py",
  "f2_idx": "./Project_CodeNet_Python800/p03241/s970336140.py",
  "response": "Yes"
 },
 {
  "f1": "a = list(map(int,input().split()))\nprint(-(-a[0]//(2*a[1]+1)))",
  "f2": "a = list(map(int,input().split()))\nprint(-(-a[0]//(2*a[1]+1)))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02970/s670787418.py",
  "f2_idx": "./Project_CodeNet_Python800/p02970/s670787418.py",
  "response": "Yes"
 },
 {
  "f1": "print('YES' if input() in '753' else 'NO')",
  "f2": "print('YES' if input() in '753' else 'NO')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03210/s627335690.py",
  "f2_idx": "./Project_CodeNet_Python800/p03210/s627335690.py",
  "response": "Yes"
 },
 {
  "f1": "from math import*\nn,*a=map(int,open(0).read().split())\nb=[0]\nfor i in a:b+=gcd(b[-1],i),\nw=m=0\nfor i in range(n):m=max(m,gcd(w,b[-i-2]));w=gcd(w,a[~i])\nprint(m)",
  "f2": "from math import*\nn,*a=map(int,open(0).read().split())\nb=[0]\nfor i in a:b+=gcd(b[-1],i),\nw=m=0\nfor i in range(n):m=max(m,gcd(w,b[-i-2]));w=gcd(w,a[~i])\nprint(m)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03061/s064481518.py",
  "f2_idx": "./Project_CodeNet_Python800/p03061/s064481518.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\ntemp = [0 for x in range(N+1)]\n\n#既に昇順に並んでいる最も長い部分列を考えて、残りの部分を動かす\n#ex.[5,6,1,2,3,4]→4 [1,3,2,4]→2(12 or 34) [6,3,1,2,7,4,8,5]→3(678)\n\n#tempに各数値を基準にした昇順の部分列をリストにし、MAX（最も長い部分列）を取る\n\nfor i in range(N):\nX=int(input())\ntemp[X]=temp[X-1]+1\n\nprint(N-max(temp))",
  "f2": "N = int(input())\ntemp = [0 for x in range(N+1)]\n\n#既に昇順に並んでいる最も長い部分列を考えて、残りの部分を動かす\n#ex.[5,6,1,2,3,4]→4 [1,3,2,4]→2(12 or 34) [6,3,1,2,7,4,8,5]→3(678)\n\n#tempに各数値を基準にした昇順の部分列をリストにし、MAX（最も長い部分列）を取る\n\nfor i in range(N):\nX=int(input())\ntemp[X]=temp[X-1]+1\n\nprint(N-max(temp))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03346/s667451022.py",
  "f2_idx": "./Project_CodeNet_Python800/p03346/s667451022.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nn,k=map(int,input().split());print(math.ceil((n-1)/(k-1)))",
  "f2": "import math\nn,k=map(int,input().split());print(math.ceil((n-1)/(k-1)))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03317/s386569862.py",
  "f2_idx": "./Project_CodeNet_Python800/p03317/s386569862.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import defaultdict\n\ndef main():\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nacca = [0]\nfor _a in a:\nacca.append(acca[-1] + _a)\n\nans = 0\ncnt = defaultdict(lambda : 0)\nfor i, ac in enumerate(acca):\nans += cnt[(ac - i) % k]\ncnt[(ac - i) % k] += 1\nif i >= k - 1:\ncnt[(acca[i - k + 1] - (i - k + 1)) % k] -= 1\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "from collections import defaultdict\n\ndef main():\nn, k = map(int, input().split())\na = list(map(int, input().split()))\nacca = [0]\nfor _a in a:\nacca.append(acca[-1] + _a)\n\nans = 0\ncnt = defaultdict(lambda : 0)\nfor i, ac in enumerate(acca):\nans += cnt[(ac - i) % k]\ncnt[(ac - i) % k] += 1\nif i >= k - 1:\ncnt[(acca[i - k + 1] - (i - k + 1)) % k] -= 1\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02851/s837218713.py",
  "f2_idx": "./Project_CodeNet_Python800/p02851/s837218713.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=list(map(int,input().split()))\n\ndic={}\nfor i in range(n):\nif dic.get(a[i])==None:\ndic[a[i]]=1\nelse:\ndic[a[i]]+=1\n\nans=0\nfor key,number in dic.items():\nif number<key:\nans+=number\nelse:\nans+=number-key\nprint(ans)",
  "f2": "n=int(input())\na=list(map(int,input().split()))\n\ndic={}\nfor i in range(n):\nif dic.get(a[i])==None:\ndic[a[i]]=1\nelse:\ndic[a[i]]+=1\n\nans=0\nfor key,number in dic.items():\nif number<key:\nans+=number\nelse:\nans+=number-key\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03487/s592781633.py",
  "f2_idx": "./Project_CodeNet_Python800/p03487/s592781633.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nfrom collections import Counter\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip() # input string\nni = lambda: int(readline().rstrip()) # input int\nnm = lambda: map(int, readline().split()) # input multiple int\nnl = lambda: list(map(int, readline().split())) # input multiple int to list\n\nn = ni()\nv = nl()\nodd = Counter(v[0::2])\neven = Counter(v[1::2])\nodd[\"$\"] = 0\neven[\"#\"] = 0\nans = 0\nif odd.most_common()[0][0] == even.most_common()[0][0]:\nif odd.most_common()[1][1] > even.most_common()[1][1]:\nans = n - odd.most_common()[1][1] - even.most_common()[0][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[1][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[0][1]\n\"\"\"if len(odd) == 1:\npass\nelse:\nfor v in odd.values():\nmax_odd = max(max_odd, v)\nans += len(odd) - max_odd\n\nif len(even) == 1:\npass\nelse:\nfor v in even.values():\nmax_even = max(max_even, v)\nans += len(even) - max_even\"\"\"\n\nprint(ans)",
  "f2": "import sys\nfrom collections import Counter\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip() # input string\nni = lambda: int(readline().rstrip()) # input int\nnm = lambda: map(int, readline().split()) # input multiple int\nnl = lambda: list(map(int, readline().split())) # input multiple int to list\n\nn = ni()\nv = nl()\nodd = Counter(v[0::2])\neven = Counter(v[1::2])\nodd[\"$\"] = 0\neven[\"#\"] = 0\nans = 0\nif odd.most_common()[0][0] == even.most_common()[0][0]:\nif odd.most_common()[1][1] > even.most_common()[1][1]:\nans = n - odd.most_common()[1][1] - even.most_common()[0][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[1][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[0][1]\n\"\"\"if len(odd) == 1:\npass\nelse:\nfor v in odd.values():\nmax_odd = max(max_odd, v)\nans += len(odd) - max_odd\n\nif len(even) == 1:\npass\nelse:\nfor v in even.values():\nmax_even = max(max_even, v)\nans += len(even) - max_even\"\"\"\n\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03244/s317758416.py",
  "f2_idx": "./Project_CodeNet_Python800/p03244/s317758416.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na=int(input())\nb=100000\nfor i in range(a):\nb=b*1.05\nb=b/1000\nb=math.ceil(b)\nb=b*1000\nprint(b)",
  "f2": "import math\na=int(input())\nb=100000\nfor i in range(a):\nb=b*1.05\nb=b/1000\nb=math.ceil(b)\nb=b*1000\nprint(b)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p00007/s204871313.py",
  "f2_idx": "./Project_CodeNet_Python800/p00007/s204871313.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nf = False\nfor i in range(len(s)):\nfor j in range(i,len(s)):\nif s[:i]+s[j:] == \"keyence\":\nf = True\nprint(\"YES\" if f else \"NO\")",
  "f2": "s = input()\nf = False\nfor i in range(len(s)):\nfor j in range(i,len(s)):\nif s[:i]+s[j:] == \"keyence\":\nf = True\nprint(\"YES\" if f else \"NO\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03150/s477275876.py",
  "f2_idx": "./Project_CodeNet_Python800/p03150/s477275876.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nn = int(input())\nnumbers = list(map(int, input().split()))\ncount_odd = 0\nfor num in numbers:\nif num % 2:\ncount_odd += 1\nprint(\"YES\" if count_odd % 2 == 0 else \"NO\")\n\n\nif __name__ == '__main__':\nmain()\n",
  "f2": "def main():\nn = int(input())\nnumbers = list(map(int, input().split()))\ncount_odd = 0\nfor num in numbers:\nif num % 2:\ncount_odd += 1\nprint(\"YES\" if count_odd % 2 == 0 else \"NO\")\n\n\nif __name__ == '__main__':\nmain()\n",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03807/s114495562.py",
  "f2_idx": "./Project_CodeNet_Python800/p03807/s114495562.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nn = int(input())\na = list(map(int,input().split()))\nres = 0.0\nfor i in a:\nres += 1/i\nprint(1/res)\n\nif __name__ == '__main__':\nmain()",
  "f2": "def main():\nn = int(input())\na = list(map(int,input().split()))\nres = 0.0\nfor i in a:\nres += 1/i\nprint(1/res)\n\nif __name__ == '__main__':\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02934/s544772141.py",
  "f2_idx": "./Project_CodeNet_Python800/p02934/s544772141.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nimport collections\ninput = sys.stdin.readline\n\ns, t = map(str,input().split())\na, b = map(int, input().split())\nu = input().strip()\nif u == s:\nprint(a - 1, b)\nelse:\nprint(a, b - 1)",
  "f2": "import sys\nimport collections\ninput = sys.stdin.readline\n\ns, t = map(str,input().split())\na, b = map(int, input().split())\nu = input().strip()\nif u == s:\nprint(a - 1, b)\nelse:\nprint(a, b - 1)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02777/s132728841.py",
  "f2_idx": "./Project_CodeNet_Python800/p02777/s132728841.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\nA, B, H, M = map(int, input().split())\n\n\nangle_h = 1./ 12.*(H + M/60.) * 2*np.pi\n\nangle_m = M/60. * 2 * np.pi\n\nhour = (A*np.sin(angle_h), A*np.cos(angle_h))\nminute = (B*np.sin(angle_m), B*np.cos(angle_m))\n\ndist = np.sqrt((hour[0] - minute[0])**2 + (hour[1] - minute[1])**2)\n\nprint(dist)",
  "f2": "import numpy as np\n\nA, B, H, M = map(int, input().split())\n\n\nangle_h = 1./ 12.*(H + M/60.) * 2*np.pi\n\nangle_m = M/60. * 2 * np.pi\n\nhour = (A*np.sin(angle_h), A*np.cos(angle_h))\nminute = (B*np.sin(angle_m), B*np.cos(angle_m))\n\ndist = np.sqrt((hour[0] - minute[0])**2 + (hour[1] - minute[1])**2)\n\nprint(dist)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02677/s004335660.py",
  "f2_idx": "./Project_CodeNet_Python800/p02677/s004335660.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\ndef transfer(state, x, y):\nstate[x][0] -= 1\nstate[y][0] += 1\nif state[x][0] == 0:\nif state[x][1] == 1:\nstate[x][1] = 0\nstate[y][1] = 1\nelse:\nif state[x][1] == 1:\nstate[y][1] = 1\n\nn, m = map(int, input().split())\n\nstate = [[1, 0] for _ in range(n)]\nstate[0][1] = 1\nfor i in range(m):\nx, y = map(lambda x: int(x) - 1, input().split())\ntransfer(state, x, y)\n\nprint(np.sum(state, axis=0)[1])",
  "f2": "import numpy as np\n\ndef transfer(state, x, y):\nstate[x][0] -= 1\nstate[y][0] += 1\nif state[x][0] == 0:\nif state[x][1] == 1:\nstate[x][1] = 0\nstate[y][1] = 1\nelse:\nif state[x][1] == 1:\nstate[y][1] = 1\n\nn, m = map(int, input().split())\n\nstate = [[1, 0] for _ in range(n)]\nstate[0][1] = 1\nfor i in range(m):\nx, y = map(lambda x: int(x) - 1, input().split())\ntransfer(state, x, y)\n\nprint(np.sum(state, axis=0)[1])",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p04034/s836428667.py",
  "f2_idx": "./Project_CodeNet_Python800/p04034/s836428667.py",
  "response": "Yes"
 },
 {
  "f1": "# dp\n# N円を作るのに最も小さい操作回数\n\nimport sys\nreadline = sys.stdin.readline\n\nN = int(readline())\n\ndp = [i for i in range(N + 1)]\n\nfor i in range(len(dp)):\nn = 6\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 6\nn = 9\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 9\nprint(dp[N])",
  "f2": "# dp\n# N円を作るのに最も小さい操作回数\n\nimport sys\nreadline = sys.stdin.readline\n\nN = int(readline())\n\ndp = [i for i in range(N + 1)]\n\nfor i in range(len(dp)):\nn = 6\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 6\nn = 9\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 9\nprint(dp[N])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03329/s200815646.py",
  "f2_idx": "./Project_CodeNet_Python800/p03329/s200815646.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split()\n\nh = int(s[0])\nw = int(s[1])\n\nstrings = []\n\nfor i in range(h):\np = input()\nstrings.append(p)\n\nfor i in range(w + 2):\nprint('#', end='')\n\nprint('')\n\n\nfor i in range(h):\nprint('#', end='')\nprint(strings[i], end='')\nprint('#')\n\nfor i in range(w + 2):\nprint('#', end='')\n\nprint('')",
  "f2": "s = input().split()\n\nh = int(s[0])\nw = int(s[1])\n\nstrings = []\n\nfor i in range(h):\np = input()\nstrings.append(p)\n\nfor i in range(w + 2):\nprint('#', end='')\n\nprint('')\n\n\nfor i in range(h):\nprint('#', end='')\nprint(strings[i], end='')\nprint('#')\n\nfor i in range(w + 2):\nprint('#', end='')\n\nprint('')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03712/s493259149.py",
  "f2_idx": "./Project_CodeNet_Python800/p03712/s493259149.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nfrom math import gcd\nINF = float(\"inf\")\n\nimport sys\ninput=sys.stdin.readline\nimport itertools\nfrom collections import Counter\n\ndef main():\nn = int(input())\ns = [sorted(list(input().rstrip())) for _ in range(n)]\ns.sort()\n\nans = 0\ntrial = s[0]\ntri_num = 0\nfor i in s[1:]:\nif trial == i:\ntri_num += 1\nelse:\nans += tri_num*(tri_num+1)//2\ntri_num = 0\ntrial = i\nif tri_num != 0:\nans += tri_num*(tri_num+1)//2\nprint(ans)\n\nif __name__==\"__main__\":\nmain()",
  "f2": "import math\nfrom math import gcd\nINF = float(\"inf\")\n\nimport sys\ninput=sys.stdin.readline\nimport itertools\nfrom collections import Counter\n\ndef main():\nn = int(input())\ns = [sorted(list(input().rstrip())) for _ in range(n)]\ns.sort()\n\nans = 0\ntrial = s[0]\ntri_num = 0\nfor i in s[1:]:\nif trial == i:\ntri_num += 1\nelse:\nans += tri_num*(tri_num+1)//2\ntri_num = 0\ntrial = i\nif tri_num != 0:\nans += tri_num*(tri_num+1)//2\nprint(ans)\n\nif __name__==\"__main__\":\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02947/s881663853.py",
  "f2_idx": "./Project_CodeNet_Python800/p02947/s881663853.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\ndef dp3(ini, i, j, k): return [[[ini]*i for _ in range(j)] for _ in range(k)]\n#import bisect #bisect.bisect_left(B, a)\nfrom collections import defaultdict #d = defaultdict(int) d[key] += 1\n#from itertools import accumulate #list(accumulate(A))\n\nN = ii()\nA = li()\n\nd = defaultdict(int)\nfor num in A:\nd[num] += 1\n\nflag = 0\ncnt = 0\nfor key, value in d.items():\nif value > 1:\nflag = (flag + value - 1) % 2\ncnt += 1\n\nprint(cnt-flag)",
  "f2": "import sys\nsys.setrecursionlimit(10**8)\ndef ii(): return int(sys.stdin.readline())\ndef mi(): return map(int, sys.stdin.readline().split())\ndef li(): return list(map(int, sys.stdin.readline().split()))\ndef li2(N): return [list(map(int, sys.stdin.readline().split())) for _ in range(N)]\ndef dp2(ini, i, j): return [[ini]*i for _ in range(j)]\ndef dp3(ini, i, j, k): return [[[ini]*i for _ in range(j)] for _ in range(k)]\n#import bisect #bisect.bisect_left(B, a)\nfrom collections import defaultdict #d = defaultdict(int) d[key] += 1\n#from itertools import accumulate #list(accumulate(A))\n\nN = ii()\nA = li()\n\nd = defaultdict(int)\nfor num in A:\nd[num] += 1\n\nflag = 0\ncnt = 0\nfor key, value in d.items():\nif value > 1:\nflag = (flag + value - 1) % 2\ncnt += 1\n\nprint(cnt-flag)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03816/s871216656.py",
  "f2_idx": "./Project_CodeNet_Python800/p03816/s871216656.py",
  "response": "Yes"
 },
 {
  "f1": "# 第2回全国統一プログラミング王決定戦予選-A\nif False:\nN=int(input())\nif N%2==0: print(N//2-1)\nelse: print(N//2)\n\n# 第1回同じ-A\nM,D=map(int,input().split())\nans=0\nfor m in range(1,M+1):\nfor d in range(1,D+1):\nif len(str(d))==2:\nx,y=int(str(d)[0]),int(str(d)[1])\nif x>=2 and y>=2 and x*y==m:\nans+=1\nprint(ans)",
  "f2": "# 第2回全国統一プログラミング王決定戦予選-A\nif False:\nN=int(input())\nif N%2==0: print(N//2-1)\nelse: print(N//2)\n\n# 第1回同じ-A\nM,D=map(int,input().split())\nans=0\nfor m in range(1,M+1):\nfor d in range(1,D+1):\nif len(str(d))==2:\nx,y=int(str(d)[0]),int(str(d)[1])\nif x>=2 and y>=2 and x*y==m:\nans+=1\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02927/s764810290.py",
  "f2_idx": "./Project_CodeNet_Python800/p02927/s764810290.py",
  "response": "Yes"
 },
 {
  "f1": "string = input()\n\ns = []\ntotal = 0\ns2 = []\nfor i in range(len(string)):\nif string[i] == '\\\\':\ns.append(i)\nelif string[i] == '/' and len(s) > 0:\nj = s.pop() # j: 対応する '\\' の位置\narea = i - j # 面積\ntotal += area\nwhile len(s2) > 0 and s2[-1][0] > j: # s2[-1][0] == s2.pop()[0]\narea += s2[-1][1]\ns2.pop()\ns2.append([j, area]) # j: 水たまりの左端 / tmp: その水たまりの面積\n\nans = []\nfor i in range(len(s2)):\nans.append(str(s2[i][1]))\n\nprint(total)\nif len(ans) == 0:\nprint(len(ans))\nelse:\nprint(len(ans), end = ' ')\nprint(' '.join(ans))",
  "f2": "string = input()\n\ns = []\ntotal = 0\ns2 = []\nfor i in range(len(string)):\nif string[i] == '\\\\':\ns.append(i)\nelif string[i] == '/' and len(s) > 0:\nj = s.pop() # j: 対応する '\\' の位置\narea = i - j # 面積\ntotal += area\nwhile len(s2) > 0 and s2[-1][0] > j: # s2[-1][0] == s2.pop()[0]\narea += s2[-1][1]\ns2.pop()\ns2.append([j, area]) # j: 水たまりの左端 / tmp: その水たまりの面積\n\nans = []\nfor i in range(len(s2)):\nans.append(str(s2[i][1]))\n\nprint(total)\nif len(ans) == 0:\nprint(len(ans))\nelse:\nprint(len(ans), end = ' ')\nprint(' '.join(ans))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02266/s020206081.py",
  "f2_idx": "./Project_CodeNet_Python800/p02266/s020206081.py",
  "response": "Yes"
 },
 {
  "f1": "X=int(input())\ns=set(pow(i,j) for i in range(40) for j in range(2,10) if pow(i,j)<=X)\nprint(max(s))",
  "f2": "X=int(input())\ns=set(pow(i,j) for i in range(40) for j in range(2,10) if pow(i,j)<=X)\nprint(max(s))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03352/s332871539.py",
  "f2_idx": "./Project_CodeNet_Python800/p03352/s332871539.py",
  "response": "Yes"
 },
 {
  "f1": "print(\"2018/01/\"+input()[-2:])",
  "f2": "print(\"2018/01/\"+input()[-2:])",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03469/s858005518.py",
  "f2_idx": "./Project_CodeNet_Python800/p03469/s858005518.py",
  "response": "Yes"
 },
 {
  "f1": "#coding:utf-8\n\nN = int(input())\ntaro = 0\nhanako = 0\nfor i in range(N):\nstrs = input().split()\nif strs[0] > strs[1]:\ntaro += 3\nelif strs[0] < strs[1]:\nhanako += 3\nelse:\ntaro+=1\nhanako+=1\n\nprint(str(taro) + \" \" + str(hanako))",
  "f2": "#coding:utf-8\n\nN = int(input())\ntaro = 0\nhanako = 0\nfor i in range(N):\nstrs = input().split()\nif strs[0] > strs[1]:\ntaro += 3\nelif strs[0] < strs[1]:\nhanako += 3\nelse:\ntaro+=1\nhanako+=1\n\nprint(str(taro) + \" \" + str(hanako))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02421/s437905553.py",
  "f2_idx": "./Project_CodeNet_Python800/p02421/s437905553.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(raw_input())\n\nfor i in range(n):\na = map(int,raw_input().split())\na.sort()\nif (a[0]**2 + a[1]**2) == a[2]**2:\nprint \"YES\"\nelse:\nprint \"NO\"",
  "f2": "n = int(raw_input())\na = [0,0,0]\n\nfor i in range(n):\na[0],a[1],a[2] = map(int,raw_input().split())\na.sort()\nif a[0]**2 + a[1]**2 == a[2]**2:\nprint(\"YES\")\nelse:\nprint(\"NO\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p00003/s297657178.py",
  "f2_idx": "./Project_CodeNet_Python800/p00003/s918053780.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nn = int(input())\nh = [int(i) for i in input().split()]\n\nd1 = { }\nd2 = { }\nfor j in range(n):\ndif = j - h[j]\ntot = j + h[j]\nif dif not in d1:\nd1[dif] = 0\nif tot not in d2:\nd2[tot] = 0\n\nd1[dif] += 1\nd2[tot] += 1\n\nnpairs = 0\n# print(d1)\n# print(d2)\nfor i in range(n):\ndif = i - h[i]\ntot = i + h[i]\nif tot in d1:\nnpairs += d1[tot]\nif dif in d2:\nnpairs += d2[dif]\n\nprint(npairs // 2)\n\nmain()",
  "f2": "def main():\nn = int(input())\nh = [int(i) for i in input().split()]\n\nd1 = { }\nd2 = { }\nfor j in range(n):\ndif = j - h[j]\ntot = j + h[j]\nif dif not in d1:\nd1[dif] = 0\nif tot not in d2:\nd2[tot] = 0\n\nd1[dif] += 1\nd2[tot] += 1\n\nnpairs = 0\n# print(d1)\n# print(d2)\nfor i in range(n):\ndif = i - h[i]\ntot = i + h[i]\nif tot in d1:\nnpairs += d1[tot]\nif dif in d2:\nnpairs += d2[dif]\n\nprint(npairs // 2)\n\nmain()",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02691/s724254169.py",
  "f2_idx": "./Project_CodeNet_Python800/p02691/s724254169.py",
  "response": "Yes"
 },
 {
  "f1": "class Combination:\n\ndef __init__(self, n, MOD):\nself.fact = [1]\nfor i in range(1, n + 1):\nself.fact.append(self.fact[-1] * i % MOD)\nself.inv_fact = [pow(self.fact[i] ,MOD - 2 ,MOD) for i in range(n + 1)]\nself.MOD = MOD\n\ndef factorial(self, k):\n'''k!を求める'''\nreturn self.fact[k]\n\ndef inverse_factorial(self, k):\n'''k!の逆元を求める'''\nreturn self.inv_fact[k]\n\ndef combination(self, k, r):\n'''kCrを求める'''\nreturn (self.fact[k] * self.inv_fact[k - r] * self.inv_fact[r]) % self.MOD\n\nh, w, k = map(int, input().split())\nMOD = 10**9 + 7\ncomb = Combination(h*w, MOD)\n\nkumi = comb.combination(h*w - 2, k - 2)\nans = 0\n\nfor d in range(0, h):\nans += d * (h - d) * kumi * w * w\nans %= MOD\n\nfor d in range(0, w):\nans += d * (w - d) * kumi * h * h\nans %= MOD\n\nprint(ans)",
  "f2": "class Combination:\n\ndef __init__(self, n, MOD):\nself.fact = [1]\nfor i in range(1, n + 1):\nself.fact.append(self.fact[-1] * i % MOD)\nself.inv_fact = [pow(self.fact[i] ,MOD - 2 ,MOD) for i in range(n + 1)]\nself.MOD = MOD\n\ndef factorial(self, k):\n'''k!を求める'''\nreturn self.fact[k]\n\ndef inverse_factorial(self, k):\n'''k!の逆元を求める'''\nreturn self.inv_fact[k]\n\ndef combination(self, k, r):\n'''kCrを求める'''\nreturn (self.fact[k] * self.inv_fact[k - r] * self.inv_fact[r]) % self.MOD\n\nh, w, k = map(int, input().split())\nMOD = 10**9 + 7\ncomb = Combination(h*w, MOD)\n\nkumi = comb.combination(h*w - 2, k - 2)\nans = 0\n\nfor d in range(0, h):\nans += d * (h - d) * kumi * w * w\nans %= MOD\n\nfor d in range(0, w):\nans += d * (w - d) * kumi * h * h\nans %= MOD\n\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03039/s906480442.py",
  "f2_idx": "./Project_CodeNet_Python800/p03039/s906480442.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ncnt = 0\nbeforeKill = 0\nfor i in range(n):\nkill1 = min(A[i] - beforeKill, B[i])\nkill2 = min(A[i+1], B[i] - kill1)\ncnt += kill1 + kill2\nbeforeKill = kill2\nprint(cnt)",
  "f2": "n = int(input())\nA = list(map(int, input().split()))\nB = list(map(int, input().split()))\ncnt = 0\nbeforeKill = 0\nfor i in range(n):\nkill1 = min(A[i] - beforeKill, B[i])\nkill2 = min(A[i+1], B[i] - kill1)\ncnt += kill1 + kill2\nbeforeKill = kill2\nprint(cnt)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02959/s951975085.py",
  "f2_idx": "./Project_CodeNet_Python800/p02959/s951975085.py",
  "response": "Yes"
 },
 {
  "f1": "H,W = map(int,input().split())\nA = [None for _ in range(H)]\nfor i in range(H):\nA[i] = input()\n\ncount = 0\n\nfor i in range(H):\nfor j in range(W):\nif A[i][j] == '#':\ncount += 1\n\nif count == H+W-1:\nprint('Possible')\nelse:\nprint('Impossible')",
  "f2": "H,W = map(int,input().split())\nA = [None for _ in range(H)]\nfor i in range(H):\nA[i] = input()\n\ncount = 0\n\nfor i in range(H):\nfor j in range(W):\nif A[i][j] == '#':\ncount += 1\n\nif count == H+W-1:\nprint('Possible')\nelse:\nprint('Impossible')",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03937/s523655257.py",
  "f2_idx": "./Project_CodeNet_Python800/p03937/s523655257.py",
  "response": "Yes"
 },
 {
  "f1": "def insertionSort(A, n, g):\ncnt = 0\nfor i in range(g, n):\nv = A[i]\nj = i - g\nwhile j >= 0 and A[j] > v:\nA[j+g] = A[j]\nj = j - g\ncnt = cnt + 1\nA[j+g] = v\nreturn cnt\n\nn = int(input())\na = []\ng = []\nfor i in range(n):\nx = int(input())\na.append(x)\ncount = 0\nm = 1;\nwhile m<= n:\ng.append(m)\nm = (m*3) + 1\nl = len(g)\nprint(str(l))\nl = l-1\nwhile l>0:\nprint(str(g[l]) + \" \", end = '')\ncount += insertionSort(a, n, g[l])\nl = l-1\nprint(str(g[l]))\ncount += insertionSort(a, n, g[l])\nprint(str(count))\nfor i in a:\nprint(str(i))\n",
  "f2": "def insertionSort(A, n, g):\ncnt = 0\nfor i in range(g, n):\nv = A[i]\nj = i - g\nwhile j >= 0 and A[j] > v:\nA[j+g] = A[j]\nj = j - g\ncnt = cnt + 1\nA[j+g] = v\nreturn cnt\n\nn = int(input())\na = []\ng = []\nfor i in range(n):\nx = int(input())\na.append(x)\ncount = 0\nm = 1;\nwhile m<= n:\ng.append(m)\nm = (m*3) + 1\nl = len(g)\nprint(str(l))\nl = l-1\nwhile l>0:\nprint(str(g[l]) + \" \", end = '')\ncount += insertionSort(a, n, g[l])\nl = l-1\nprint(str(g[l]))\ncount += insertionSort(a, n, g[l])\nprint(str(count))\nfor i in a:\nprint(str(i))\n",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02262/s033743274.py",
  "f2_idx": "./Project_CodeNet_Python800/p02262/s033743274.py",
  "response": "Yes"
 },
 {
  "f1": "class UnionFind():\ndef __init__(self, n):\nself.n = n\nself.parents = [-1] * n\ndef find(self, x):\nif self.parents[x] < 0:\nreturn x\nelse:\nself.parents[x] = self.find(self.parents[x])\nreturn self.parents[x]\ndef union(self, x, y):\nx = self.find(x)\ny = self.find(y)\nif x == y:\nreturn 0\nif self.parents[x] > self.parents[y]:\nx, y = y, x\nself.parents[x] += self.parents[y]\nself.parents[y] = x\n\nN,M,*f = map(int, open(0).read().split())\np = f[:N]\nxy = [f[N+2*i:N+2*i+2] for i in range(M)]\nuf = UnionFind(N+1)\nfor x, y in xy:\nuf.union(x,y)\nans = 0\nfor i in range(1,N+1):\nif p[i-1] == i:\nans += 1\nelse:\nif uf.find(p[i-1]) == uf.find(i):\nans += 1\nelif uf.find(i) < 0:\nif uf.find(p[i-1]) == i:\nans += 1\nelif uf.find(p[i-1]) < 0:\nif uf.find(i) == p(i-1):\nans += 1\nprint(ans)",
  "f2": "class UnionFind():\ndef __init__(self, n):\nself.n = n\nself.parents = [-1] * n\ndef find(self, x):\nif self.parents[x] < 0:\nreturn x\nelse:\nself.parents[x] = self.find(self.parents[x])\nreturn self.parents[x]\ndef union(self, x, y):\nx = self.find(x)\ny = self.find(y)\nif x == y:\nreturn 0\nif self.parents[x] > self.parents[y]:\nx, y = y, x\nself.parents[x] += self.parents[y]\nself.parents[y] = x\n\nN,M,*f = map(int, open(0).read().split())\np = f[:N]\nxy = [f[N+2*i:N+2*i+2] for i in range(M)]\nuf = UnionFind(N+1)\nfor x, y in xy:\nuf.union(x,y)\nans = 0\nfor i in range(1,N+1):\nif p[i-1] == i:\nans += 1\nelse:\nif uf.find(p[i-1]) == uf.find(i):\nans += 1\nelif uf.find(i) < 0:\nif uf.find(p[i-1]) == i:\nans += 1\nelif uf.find(p[i-1]) < 0:\nif uf.find(i) == p(i-1):\nans += 1\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03354/s669025868.py",
  "f2_idx": "./Project_CodeNet_Python800/p03354/s669025868.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nN, M, L = mapint()\ndist = [[10**18]*N for _ in range(N)]\nfor _ in range(M):\na, b, c = mapint()\ndist[a-1][b-1] = c\ndist[b-1][a-1] = c\n\nfor k in range(N):\nfor i in range(N):\nfor j in range(N):\ndist[i][j]=min(dist[i][j], dist[i][k]+dist[k][j])\n\noil = [[10**18]*N for _ in range(N)]\nfor i in range(N-1):\nfor j in range(i+1, N):\nif dist[i][j]<=L:\noil[i][j] = 1\noil[j][i] = 1\n\nfor k in range(N):\nfor i in range(N):\nfor j in range(N):\noil[i][j]=min(oil[i][j], oil[i][k]+oil[k][j])\n\nQ = int(input())\nfor _ in range(Q):\ns, t = mapint()\nif oil[s-1][t-1]>=10**17:\nprint(-1)\nelse:\nprint(oil[s-1][t-1]-1)",
  "f2": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nN, M, L = mapint()\ndist = [[10**18]*N for _ in range(N)]\nfor _ in range(M):\na, b, c = mapint()\ndist[a-1][b-1] = c\ndist[b-1][a-1] = c\n\nfor k in range(N):\nfor i in range(N):\nfor j in range(N):\ndist[i][j]=min(dist[i][j], dist[i][k]+dist[k][j])\n\noil = [[10**18]*N for _ in range(N)]\nfor i in range(N-1):\nfor j in range(i+1, N):\nif dist[i][j]<=L:\noil[i][j] = 1\noil[j][i] = 1\n\nfor k in range(N):\nfor i in range(N):\nfor j in range(N):\noil[i][j]=min(oil[i][j], oil[i][k]+oil[k][j])\n\nQ = int(input())\nfor _ in range(Q):\ns, t = mapint()\nif oil[s-1][t-1]>=10**17:\nprint(-1)\nelse:\nprint(oil[s-1][t-1]-1)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02889/s683191233.py",
  "f2_idx": "./Project_CodeNet_Python800/p02889/s683191233.py",
  "response": "Yes"
 },
 {
  "f1": "seen = set()\n\nN = int(input())\n\nprev = \"\"\nfor i in range(N):\nw = input()\nif w in seen:\nprint(\"No\")\nexit()\nseen.add(w)\nif i == 0:\nprev = w[-1]\ncontinue\nif prev != w[0]:\nprint(\"No\")\nexit()\nprev = w[-1]\nprint(\"Yes\")",
  "f2": "seen = set()\n\nN = int(input())\n\nprev = \"\"\nfor i in range(N):\nw = input()\nif w in seen:\nprint(\"No\")\nexit()\nseen.add(w)\nif i == 0:\nprev = w[-1]\ncontinue\nif prev != w[0]:\nprint(\"No\")\nexit()\nprev = w[-1]\nprint(\"Yes\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03261/s539318423.py",
  "f2_idx": "./Project_CodeNet_Python800/p03261/s539318423.py",
  "response": "Yes"
 },
 {
  "f1": "d = int(input())\nif d == 22:print(\"Christmas Eve Eve Eve\")\nelif d == 23:print(\"Christmas Eve Eve\")\nelif d == 24:print(\"Christmas Eve\")\nelif d == 25:print(\"Christmas\")",
  "f2": "d=int(input())\nif d==22:\nprint(\"Christmas Eve Eve Eve\")\nelif d==23:\nprint(\"Christmas Eve Eve\")\nelif d==24:\nprint(\"Christmas Eve\")\nelif d==25:\nprint(\"Christmas\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03206/s703928071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03206/s574790066.py",
  "response": "Yes"
 },
 {
  "f1": "n = str(input())\nw = \"\"\nfor i in n:\nif i == \"9\":\nw += \"1\"\nelse:\nw += \"9\"\nprint(w)",
  "f2": "n = str(input())\nw = \"\"\nfor i in n:\nif i == \"9\":\nw += \"1\"\nelse:\nw += \"9\"\nprint(w)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03242/s106562467.py",
  "f2_idx": "./Project_CodeNet_Python800/p03242/s106562467.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN = int(input())\n\nans = 0\n\ndef divisor(x):\nres = []\nfor i in range(1, int(x**0.5) + 1):\nif x % i == 0:\nif i != x//i:\nres.append(i)\nres.append(x//i)\nelse:\nres.append(i)\nreturn res[1:]\n\n\nans += len(divisor(N-1))\n\ndiv_N = divisor(N)\n\nfor num in div_N:\ntmp = N\nwhile tmp % num == 0:\ntmp //= num\nif tmp == 1:\nans += 1\ncontinue\nif (tmp-1) % num == 0:\nans += 1\nprint(ans)",
  "f2": "import sys\ninput = lambda: sys.stdin.readline().rstrip()\n\nN = int(input())\n\nans = 0\n\ndef divisor(x):\nres = []\nfor i in range(1, int(x**0.5) + 1):\nif x % i == 0:\nif i != x//i:\nres.append(i)\nres.append(x//i)\nelse:\nres.append(i)\nreturn res[1:]\n\n\nans += len(divisor(N-1))\n\ndiv_N = divisor(N)\n\nfor num in div_N:\ntmp = N\nwhile tmp % num == 0:\ntmp //= num\nif tmp == 1:\nans += 1\ncontinue\nif (tmp-1) % num == 0:\nans += 1\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02722/s540766847.py",
  "f2_idx": "./Project_CodeNet_Python800/p02722/s540766847.py",
  "response": "Yes"
 },
 {
  "f1": "x, y, val = map(int, raw_input().split())\nres = 0\nfor i in range(x, y+1):\nif val % i == 0:\nres += 1\nprint res",
  "f2": "x, y, val = map(int, raw_input().split())\nres = 0\nfor i in range(x, y+1):\nif val % i == 0:\nres += 1\nprint res",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02398/s985905382.py",
  "f2_idx": "./Project_CodeNet_Python800/p02398/s985905382.py",
  "response": "Yes"
 },
 {
  "f1": "# inp.readline()\n# int(inp.readline())\n# out.write()\n# raw_input()\n# map(int,raw_input().split())\n# map(int,inp.readline().split())\n# for _ in xrange(input()):\n# print \"Case #\"+str(_+1)+\": \"+\nif __name__ == \"__main__\":\nfrom sys import stdin as inp, stdout as out,setrecursionlimit as srl\nfrom collections import Counter,defaultdict,deque\nfrom heapq import *\nfor _ in xrange(1):\nn=input()\nt=int(pow(n,0.5))+1\nc=Counter()\nfor i in xrange(1,t+1):\nfor j in xrange(i*i,n+1,i):\nc[j]+=1\nprint 2*sum(c[i] for i in xrange(1,n))-int(pow(n-1,0.5))",
  "f2": "# inp.readline()\n# int(inp.readline())\n# out.write()\n# raw_input()\n# map(int,raw_input().split())\n# map(int,inp.readline().split())\n# for _ in xrange(input()):\n# print \"Case #\"+str(_+1)+\": \"+\nif __name__ == \"__main__\":\nfrom sys import stdin as inp, stdout as out,setrecursionlimit as srl\nfrom collections import Counter,defaultdict,deque\nfrom heapq import *\nfor _ in xrange(1):\nn=input()\nt=int(pow(n,0.5))+1\nc=Counter()\nfor i in xrange(1,t+1):\nfor j in xrange(i*i,n+1,i):\nc[j]+=1\nprint 2*sum(c[i] for i in xrange(1,n))-int(pow(n-1,0.5))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02548/s730452149.py",
  "f2_idx": "./Project_CodeNet_Python800/p02548/s730452149.py",
  "response": "Yes"
 },
 {
  "f1": "ini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\narr = []\ntemp = n\nfor i in range(2, int(-(-n**0.5//1))+1):\nif temp%i==0:\ncnt=0\nwhile temp%i==0:\ncnt+=1\ntemp //= i\narr.append([i, cnt])\nif temp!=1:\narr.append([temp, 1])\nif arr==[]:\narr.append([n, 1])\nreturn arr\ndef make_divisors(n):\ndivisors = []\nfor i in range(1, int(n**0.5)+1):\nif n % i == 0:\ndivisors.append(i)\nif i != n // i:\ndivisors.append(n//i)\ndivisors.sort()\nreturn divisors\n\n#maincode-------------------------------------------------\nk = ini()\na,b = inm()\nans = 'NG'\nfor i in range(1000):\nif a <= i * k <= b:\nans = 'OK'\nprint(ans)",
  "f2": "ini = lambda : int(input())\ninm = lambda : map(int,input().split())\ninl = lambda : list(map(int,input().split()))\ngcd = lambda x,y : gcd(y,x%y) if x%y else y\ndef factorization(n):\narr = []\ntemp = n\nfor i in range(2, int(-(-n**0.5//1))+1):\nif temp%i==0:\ncnt=0\nwhile temp%i==0:\ncnt+=1\ntemp //= i\narr.append([i, cnt])\nif temp!=1:\narr.append([temp, 1])\nif arr==[]:\narr.append([n, 1])\nreturn arr\ndef make_divisors(n):\ndivisors = []\nfor i in range(1, int(n**0.5)+1):\nif n % i == 0:\ndivisors.append(i)\nif i != n // i:\ndivisors.append(n//i)\ndivisors.sort()\nreturn divisors\n\n#maincode-------------------------------------------------\nk = ini()\na,b = inm()\nans = 'NG'\nfor i in range(1000):\nif a <= i * k <= b:\nans = 'OK'\nprint(ans)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02693/s453891476.py",
  "f2_idx": "./Project_CodeNet_Python800/p02693/s453891476.py",
  "response": "Yes"
 },
 {
  "f1": "a = input()\nb=input()\nc=input()\nres = a[0] + b[1] + c[2]\nprint(res)",
  "f2": "a = input()\nb=input()\nc=input()\nres = a[0] + b[1] + c[2]\nprint(res)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03415/s889945507.py",
  "f2_idx": "./Project_CodeNet_Python800/p03415/s889945507.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nS = input()\nif len(S) == 1:\nreturn 1\ndp1 = [0] * len(S)\ndp2 = [0] * len(S)\ndp1[0] = 1\ndp2[1] = 1\nif S[0] != S[1]:\ndp1[1] = 2\n\nfor i, s in enumerate(S[1:], 1):\nif s != S[i - 1]:\ndp1[i] = max(dp1[i], dp1[i - 1] + 1)\ndp1[i] = max(dp1[i], dp2[i - 1] + 1)\ndp2[i] = dp1[i - 2] + 1\nif S[i - 1:i + 1] != S[i - 3:i - 1]:\ndp2[i] = max(dp2[i], dp2[i - 2] + 1)\nreturn max(dp1[-1], dp2[-1])\n\n\nprint(main())\n",
  "f2": "def main():\nS = input()\nif len(S) == 1:\nreturn 1\ndp1 = [0] * len(S)\ndp2 = [0] * len(S)\ndp1[0] = 1\ndp2[1] = 1\nif S[0] != S[1]:\ndp1[1] = 2\n\nfor i, s in enumerate(S[1:], 1):\nif s != S[i - 1]:\ndp1[i] = max(dp1[i], dp1[i - 1] + 1)\ndp1[i] = max(dp1[i], dp2[i - 1] + 1)\ndp2[i] = dp1[i - 2] + 1\nif S[i - 1:i + 1] != S[i - 3:i - 1]:\ndp2[i] = max(dp2[i], dp2[i - 2] + 1)\nreturn max(dp1[-1], dp2[-1])\n\n\nprint(main())\n",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02939/s436551696.py",
  "f2_idx": "./Project_CodeNet_Python800/p02939/s436551696.py",
  "response": "Yes"
 },
 {
  "f1": "SA = list(input())\nSB = list(input())\nSC = list(input())\nA = 0\nB = 0\nC = 0\nans = \"\"\nturn = \"a\"\nwhile ans == \"\":\nif turn == \"a\":\nif A == len(SA):\nans = \"A\"\nelse:\nturn = SA[A]\nA +=1\nif turn == \"b\":\nif B == len(SB):\nans = \"B\"\nelse:\nturn = SB[B]\nB += 1\nif turn == \"c\":\nif C == len(SC):\nans = \"C\"\nelse:\nturn = SC[C]\nC += 1\nprint(ans)",
  "f2": "SA = list(input())\nSB = list(input())\nSC = list(input())\nA = 0\nB = 0\nC = 0\nans = \"\"\nturn = \"a\"\nwhile ans == \"\":\nif turn == \"a\":\nif A == len(SA):\nans = \"A\"\nelse:\nturn = SA[A]\nA +=1\nif turn == \"b\":\nif B == len(SB):\nans = \"B\"\nelse:\nturn = SB[B]\nB += 1\nif turn == \"c\":\nif C == len(SC):\nans = \"C\"\nelse:\nturn = SC[C]\nC += 1\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03998/s106587030.py",
  "f2_idx": "./Project_CodeNet_Python800/p03998/s106587030.py",
  "response": "Yes"
 },
 {
  "f1": "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\nfor j in range(min(k, 42)):\nbit = [0 for _ in range(n)]\nfor i in range(n):\nbit[max(i - a[i], 0)] += 1\nif i + a[i] + 1 < n:\nbit[i + a[i] + 1] -= 1\nresult = [bit[0]]\nfor i in range(n - 1):\nresult.append(bit[i + 1] + result[-1])\na = result\nprint(' '.join(list(map(str, a))))",
  "f2": "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\nfor j in range(min(k, 42)):\nbit = [0 for _ in range(n)]\nfor i in range(n):\nbit[max(i - a[i], 0)] += 1\nif i + a[i] + 1 < n:\nbit[i + a[i] + 1] -= 1\nresult = [bit[0]]\nfor i in range(n - 1):\nresult.append(bit[i + 1] + result[-1])\na = result\nprint(' '.join(list(map(str, a))))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02647/s958344396.py",
  "f2_idx": "./Project_CodeNet_Python800/p02647/s958344396.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\n\nxyh = []\nfor i in range(N):\nxyh.append(list(map(int,input().split())))\n\nxyh_sorted = sorted(xyh, key=lambda x: x[2], reverse=True)\n\nanswer = [0, 0, 0]\nfor cy in range(0, 101):\nfor cx in range(0, 101):\nH = xyh_sorted[0][2] + abs(xyh_sorted[0][0] - cx) + abs(xyh_sorted[0][1] - cy)\nflag = True\nfor i in range(1,N):\nh2 = max(H - abs(xyh_sorted[i][0] - cx) - abs(xyh_sorted[i][1] - cy), 0)\nif h2 != xyh_sorted[i][2]:\nflag = False\nbreak\nif flag:\nanswer = [cx, cy, H]\nbreak\nif flag:\nbreak\n\nanswerString = str(answer[0]) + \" \" + str(answer[1]) + \" \" + str(answer[2])\nprint(answerString)",
  "f2": "N = int(input())\n\nxyh = []\nfor i in range(N):\nxyh.append(list(map(int,input().split())))\n\nxyh_sorted = sorted(xyh, key=lambda x: x[2], reverse=True)\n\nanswer = [0, 0, 0]\nfor cy in range(0, 101):\nfor cx in range(0, 101):\nH = xyh_sorted[0][2] + abs(xyh_sorted[0][0] - cx) + abs(xyh_sorted[0][1] - cy)\nflag = True\nfor i in range(1,N):\nh2 = max(H - abs(xyh_sorted[i][0] - cx) - abs(xyh_sorted[i][1] - cy), 0)\nif h2 != xyh_sorted[i][2]:\nflag = False\nbreak\nif flag:\nanswer = [cx, cy, H]\nbreak\nif flag:\nbreak\n\nanswerString = str(answer[0]) + \" \" + str(answer[1]) + \" \" + str(answer[2])\nprint(answerString)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03240/s179454517.py",
  "f2_idx": "./Project_CodeNet_Python800/p03240/s179454517.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nS = list(input())\nx = 0\nmax = 0\nfor i in range(N):\nif S[i] == \"I\":\nx += 1\nelse:\nx -= 1\nif x > max:\nmax = x\nprint(max)",
  "f2": "N = int(input())\nS = list(input())\nx = 0\nmax = 0\nfor i in range(N):\nif S[i] == \"I\":\nx += 1\nelse:\nx -= 1\nif x > max:\nmax = x\nprint(max)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03827/s065986008.py",
  "f2_idx": "./Project_CodeNet_Python800/p03827/s065986008.py",
  "response": "Yes"
 },
 {
  "f1": "from bisect import bisect_right\nN,K = map(int,input().split())\nV = list(map(int,input().split()))\ncmax = -10**9\nfor x in range(K+1):\nfor y in range(K-x+1):\nA = V[:x]\nif y==0:\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nif y<=N-x:\nA += V[-y:]\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nA = sorted(V[:])\nind = bisect_right(A,0)\nif ind>=K-N:\ncnt = sum(A[K-N:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nprint(cmax)",
  "f2": "from bisect import bisect_right\nN,K = map(int,input().split())\nV = list(map(int,input().split()))\ncmax = -10**9\nfor x in range(K+1):\nfor y in range(K-x+1):\nA = V[:x]\nif y==0:\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nif y<=N-x:\nA += V[-y:]\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nA = sorted(V[:])\nind = bisect_right(A,0)\nif ind>=K-N:\ncnt = sum(A[K-N:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nprint(cmax)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03032/s890432043.py",
  "f2_idx": "./Project_CodeNet_Python800/p03032/s890432043.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nif(s ==\"ABC\"):\nprint(\"ARC\")\nelse:\nprint(\"ABC\")",
  "f2": "s=input()\nif s==\"ABC\": print(\"ARC\")\nelse : print(\"ABC\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02687/s781903112.py",
  "f2_idx": "./Project_CodeNet_Python800/p02687/s108977787.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\n\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\nC=list(map(int,input().split()))\nanswer=0\n\n#それぞれのリストを小さい順に並べる\nA.sort()\nB.sort()\nC.sort()\n\n#ソートしたA[i]に対してそれより大きいBの要素数\nAcount=[]\n#同様にB[i]に対してC\nBcount=[]\n#Bcountを後ろから取った累積和\nBsum=[]\n\ncount=0\nfor i in range(N):\nwhile(count!=N and A[i]>=B[count]):\ncount+=1\nAcount.append(N-count)\n\ncount=0\nfor i in range(N):\nwhile(count!=N and B[i]>=C[count]):\ncount+=1\nBcount.append(N-count) #いらんかった\n\nBsum.append(Bcount[N-1])\n\n\n\nfor i in range(1,N):\nBsum.append(Bcount[N-i-1]+Bsum[i-1])\n\nfor i in range(N):\nif Acount[i]==0:\nprint(answer)\nexit()\nanswer+=Bsum[Acount[i]-1]\nprint(answer)",
  "f2": "N=int(input())\n\nA=list(map(int,input().split()))\nB=list(map(int,input().split()))\nC=list(map(int,input().split()))\nanswer=0\n\n#それぞれのリストを小さい順に並べる\nA.sort()\nB.sort()\nC.sort()\n\n#ソートしたA[i]に対してそれより大きいBの要素数\nAcount=[]\n#同様にB[i]に対してC\nBcount=[]\n#Bcountを後ろから取った累積和\nBsum=[]\n\ncount=0\nfor i in range(N):\nwhile(count!=N and A[i]>=B[count]):\ncount+=1\nAcount.append(N-count)\n\ncount=0\nfor i in range(N):\nwhile(count!=N and B[i]>=C[count]):\ncount+=1\nBcount.append(N-count) #いらんかった\n\nBsum.append(Bcount[N-1])\n\n\n\nfor i in range(1,N):\nBsum.append(Bcount[N-i-1]+Bsum[i-1])\n\nfor i in range(N):\nif Acount[i]==0:\nprint(answer)\nexit()\nanswer+=Bsum[Acount[i]-1]\nprint(answer)",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03559/s730176533.py",
  "f2_idx": "./Project_CodeNet_Python800/p03559/s730176533.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [int(input()) for _ in range(m)]\nfor _ in range(n):\nprint(sum(a[_][i] * b[i] for i in range(m)))",
  "f2": "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [int(input()) for _ in range(m)]\nfor _ in range(n):\nprint(sum(a[_][i] * b[i] for i in range(m)))",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p02410/s758384010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02410/s758384010.py",
  "response": "Yes"
 },
 {
  "f1": "S=input()\nT=input()\n\nN=len(S)\nF=False\nfor _ in range(N):\nS=S[-1]+S[:-1]\nF|=(S==T)\n\nif F:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "f2": "S=input()\nT=input()\n\nN=len(S)\nF=False\nfor _ in range(N):\nS=S[-1]+S[:-1]\nF|=(S==T)\n\nif F:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 1.0,
  "type": "T1",
  "f1_idx": "./Project_CodeNet_Python800/p03293/s445532587.py",
  "f2_idx": "./Project_CodeNet_Python800/p03293/s445532587.py",
  "response": "Yes"
 },
 {
  "f1": "S = input()\nw = int(input())\nprint(''.join([s for s in S[::w]]))",
  "f2": "S = input()\nw = int(input())\nprint(''.join([s for s in S[::w]]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03303/s024293951.py",
  "f2_idx": "./Project_CodeNet_Python800/p03303/s024293951.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nfrom itertools import islice\nfrom collections import deque\nread = map(int, sys.stdin.read().split())\n\nN = next(read)\nA = [deque()] + [deque(islice(read, N - 1)) for _ in range(N)]\ndays = 1\navailable_players = deque(range(1, N + 1))\nnext_opponent = [0] * (N + 1)\nplayed = set()\n\nwhile available_players:\nplayer = available_players.popleft()\nif not A[player]:\ncontinue\n\nopponent = A[player].popleft()\nif next_opponent[opponent] == player:\navailable_players.append(player)\navailable_players.append(opponent)\nnext_opponent[player] = 0\nnext_opponent[opponent] = 0\nif player in played:\ndays += 1\nplayed.clear()\nplayed.add(player)\nplayed.add(opponent)\nelse:\nnext_opponent[player] = opponent\n\nif next_opponent.count(0) != N + 1:\nprint(-1)\nelse:\nprint(days)",
  "f2": "import sys\nfrom itertools import islice\nfrom collections import deque\nread = map(int, sys.stdin.read().split())\n\nN = next(read)\nA = [deque()] + [deque(islice(read, N - 1)) for _ in range(N)]\ndays = 1\navailable_players = deque(range(1, N + 1))\nnext_opponent = [0] * (N + 1)\nplayed = set()\n\nwhile available_players:\nplayer = available_players.popleft()\nif not A[player]:\ncontinue\n\nopponent = A[player].popleft()\nif next_opponent[opponent] == player:\navailable_players.append(player)\navailable_players.append(opponent)\nnext_opponent[player] = 0\nnext_opponent[opponent] = 0\nif player in played:\ndays += 1\nplayed.clear()\nplayed.add(player)\nplayed.add(opponent)\nelse:\nnext_opponent[player] = opponent\n\nif next_opponent.count(0) != N + 1:\nprint(-1)\nelse:\nprint(days)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02925/s101017328.py",
  "f2_idx": "./Project_CodeNet_Python800/p02925/s101017328.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: map(int, sys.stdin.readline().split())\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\na, b = rs()\nn = int(a+b)\nc = int(n**0.5)**2\nif n == c:\nprint('Yes')\nelse:\nprint('No')\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "f2": "import sys\nimport math\nimport itertools\nimport collections\nimport heapq\nimport re\nimport numpy as np\nfrom functools import reduce\n\nrr = lambda: sys.stdin.readline().rstrip()\nrs = lambda: sys.stdin.readline().split()\nri = lambda: int(sys.stdin.readline())\nrm = lambda: map(int, sys.stdin.readline().split())\nrl = lambda: list(map(int, sys.stdin.readline().split()))\ninf = float('inf')\nmod = 10**9 + 7\n\na, b = rs()\nn = int(a+b)\nc = int(n**0.5)**2\nif n == c:\nprint('Yes')\nelse:\nprint('No')\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03456/s184492486.py",
  "f2_idx": "./Project_CodeNet_Python800/p03456/s184492486.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=list(map(str,input().split()))\nb,c=[],[]\nif n%2==0:\nfor i in range(n):\nif i%2==0:\nb.append(a[i])\nelse:\nc.append(a[i])\nc.reverse()\nelse:\nfor i in range(n):\nif i%2==1:\nb.append(a[i])\nelse:\nc.append(a[i])\nc.reverse()\nprint(\" \".join(c+b))",
  "f2": "n=int(input())\na=list(map(str,input().split()))\nb,c=[],[]\nif n%2==0:\nfor i in range(n):\nif i%2==0:\nb.append(a[i])\nelse:\nc.append(a[i])\nc.reverse()\nelse:\nfor i in range(n):\nif i%2==1:\nb.append(a[i])\nelse:\nc.append(a[i])\nc.reverse()\nprint(\" \".join(c+b))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03673/s503688530.py",
  "f2_idx": "./Project_CodeNet_Python800/p03673/s503688530.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\nprint(sum(A[:K]))",
  "f2": "import sys\nimport heapq, math\nfrom itertools import zip_longest, permutations, combinations, combinations_with_replacement\nfrom itertools import accumulate, dropwhile, takewhile, groupby\nfrom functools import lru_cache\nfrom copy import deepcopy\n\nN, K = map(int, input().split())\nA = list(map(int, input().split()))\n\nA.sort(reverse=True)\n\nprint(sum(A[:K]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03658/s924536049.py",
  "f2_idx": "./Project_CodeNet_Python800/p03658/s924536049.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ndef input(): return sys.stdin.readline().strip()\n\n\ndef main():\na, b, c = map(int, input().split())\nm = max(a, b, c)\nprint(a + b + c - m)\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "import sys\ndef input(): return sys.stdin.readline().strip()\n\n\ndef main():\na, b, c = map(int, input().split())\nm = max(a, b, c)\nprint(a + b + c - m)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03671/s149362178.py",
  "f2_idx": "./Project_CodeNet_Python800/p03671/s149362178.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\na, b = map(int, input().split())\nprint(max(0, a - 2*b))",
  "f2": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\na, b = map(int, input().split())\nprint(max(0, a - 2*b))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02885/s937131999.py",
  "f2_idx": "./Project_CodeNet_Python800/p02885/s937131999.py",
  "response": "Yes"
 },
 {
  "f1": "v = \"aeiou\"\nif input() in v:\nprint(\"vowel\")\nelse:\nprint(\"consonant\")",
  "f2": "v = \"aeiou\"\nif input() in v:\nprint(\"vowel\")\nelse:\nprint(\"consonant\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03852/s678307307.py",
  "f2_idx": "./Project_CodeNet_Python800/p03852/s678307307.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,x=map(int,input().split())\n\nq1,r1=divmod(a,x)\nq2,_=divmod(b,x)\n\nprint(q2-q1+(r1==0))",
  "f2": "a,b,x=map(int,input().split())\n\nq1,r1=divmod(a,x)\nq2,_=divmod(b,x)\n\nprint(q2-q1+(r1==0))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03861/s935190491.py",
  "f2_idx": "./Project_CodeNet_Python800/p03861/s935190491.py",
  "response": "Yes"
 },
 {
  "f1": "k = int(input())\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\nmod = ((mod * 10) % k + 7) % k\nif mod not in mod_map:\nmod_map.add(mod)\nelse:\ncounter = -1\nbreak\ncounter += 1\nif mod == 0:\nbreak\nprint(counter)",
  "f2": "k = int(input())\nmod = 7 % k\ncounter = 1\nmemo = 1\nmod_map = set()\nmod_map.add(mod)\nwhile mod != 0:\nmemo = ((memo % k) * (10 % k)) % k\nmod = (mod + 7 * memo) % k\nif mod not in mod_map:\nmod_map.add(mod)\nelse:\ncounter = -1\nbreak\ncounter += 1\nif mod == 0:\nbreak\nprint(counter)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02596/s270142711.py",
  "f2_idx": "./Project_CodeNet_Python800/p02596/s951517732.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input());a=[]\nwhile n not in a:\na.append(n);n=[3*n+1,n//2][n%2==0]\nprint(len(a)+1)",
  "f2": "n=int(input());a=[]\nwhile n not in a: a.append(n);n=[3*n+1,n//2][n%2==0]\nprint(len(a)+1)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03146/s638638484.py",
  "f2_idx": "./Project_CodeNet_Python800/p03146/s228295526.py",
  "response": "Yes"
 },
 {
  "f1": "ns = input()\n\ndp = [ [ [0]*8  for _ in range(2) ] for _ in range(len(ns)) ]\n# dp[i][small_or_not][exist 7,5,3 (0~7)]\n\nfirst = int(ns[0])\nif first > 7:\ndp[0][1][4] = 1\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first == 7:\ndp[0][0][4] = 1\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first > 5:\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first == 5:\ndp[0][0][2] = 1\ndp[0][1][1] = 1\nelif first > 3:\ndp[0][1][1] = 1\nelif first == 3:\ndp[0][0][1] = 1\ndp[0][1][0] = 1\n\nfor i in range(0, len(ns)-1):\nnext_num = int(ns[i+1])\ndp[i+1][1][0] += dp[i][1][0]\nfor e753 in range(8):\ndp[i+1][1][e753 | 4] += dp[i][1][e753]\ndp[i+1][1][e753 | 2] += dp[i][1][e753]\ndp[i+1][1][e753 | 1] += dp[i][1][e753]\n\nif next_num > 7:\ndp[i+1][1][e753 | 4] += dp[i][0][e753]\nif next_num > 5:\ndp[i+1][1][e753 | 2] += dp[i][0][e753]\nif next_num > 3:\ndp[i+1][1][e753 | 1] += dp[i][0][e753]\n\nif next_num == 7:\ndp[i+1][0][e753 | 4] += dp[i][0][e753]\nif next_num == 5:\ndp[i+1][0][e753 | 2] += dp[i][0][e753]\nif next_num == 3:\ndp[i+1][0][e753 | 1] += dp[i][0][e753]\n\nprint( dp[-1][0][7] + dp[-1][1][7])",
  "f2": "ns = input()\n\ndp = [ [ [0]*8  for _ in range(2) ] for _ in range(len(ns)) ]\n# dp[i][small_or_not][exist 7,5,3 (0~7)]\n\nfirst = int(ns[0])\nif first > 7:\ndp[0][1][4] = 1\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first == 7:\ndp[0][0][4] = 1\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first > 5:\ndp[0][1][2] = 1\ndp[0][1][1] = 1\nelif first == 5:\ndp[0][0][2] = 1\ndp[0][1][1] = 1\nelif first > 3:\ndp[0][1][1] = 1\nelif first == 3:\ndp[0][0][1] = 1\ndp[0][1][0] = 1\n\nfor i in range(0, len(ns)-1):\nnext_num = int(ns[i+1])\ndp[i+1][1][0] += dp[i][1][0]\nfor e753 in range(8):\ndp[i+1][1][e753 | 4] += dp[i][1][e753]\ndp[i+1][1][e753 | 2] += dp[i][1][e753]\ndp[i+1][1][e753 | 1] += dp[i][1][e753]\n\nif next_num > 7:\ndp[i+1][1][e753 | 4] += dp[i][0][e753]\nif next_num > 5:\ndp[i+1][1][e753 | 2] += dp[i][0][e753]\nif next_num > 3:\ndp[i+1][1][e753 | 1] += dp[i][0][e753]\n\nif next_num == 7:\ndp[i+1][0][e753 | 4] += dp[i][0][e753]\nif next_num == 5:\ndp[i+1][0][e753 | 2] += dp[i][0][e753]\nif next_num == 3:\ndp[i+1][0][e753 | 1] += dp[i][0][e753]\n\nprint( dp[-1][0][7] + dp[-1][1][7])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03212/s716904630.py",
  "f2_idx": "./Project_CodeNet_Python800/p03212/s716904630.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nsquares = list(map(int, input().split(\" \")))\n\nodd = 0\nfor i in range(0, n, 2):\nif squares[i] % 2:\nodd += 1\nprint(odd)",
  "f2": "n = int(input())\nsquares = list(map(int, input().split(\" \")))\n\nodd = 0\nfor i in range(0, n, 2):\nif squares[i] % 2:\nodd += 1\nprint(odd)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02607/s302143644.py",
  "f2_idx": "./Project_CodeNet_Python800/p02607/s302143644.py",
  "response": "Yes"
 },
 {
  "f1": "xab=[]\nfor _ in range(3):\nxab.append(int(input()))\nx=xab[0]\na=xab[1]\nb=xab[2]\nx=x-a\nprint(x%b)",
  "f2": "xab=[]\nfor _ in range(3):\nxab.append(int(input()))\nx=xab[0]\na=xab[1]\nb=xab[2]\nx=x-a\nprint(x%b)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03447/s753334012.py",
  "f2_idx": "./Project_CodeNet_Python800/p03447/s753334012.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = input().split()\nif x == y:\nprint(\"=\")\nelif x < y:\nprint(\"<\")\nelif x > y:\nprint(\">\")",
  "f2": "x, y = input().split()\nif x == y:\nprint(\"=\")\nelif x < y:\nprint(\"<\")\nelif x > y:\nprint(\">\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03547/s655314312.py",
  "f2_idx": "./Project_CodeNet_Python800/p03547/s655314312.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nif N % 10 == 9 or N / 9 ==10 or N // 10 == 9:\nprint('Yes')\nelse:\nprint('No')",
  "f2": "N = int(input())\nif N % 10 == 9 or N / 9 ==10 or N // 10 == 9:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03605/s268214559.py",
  "f2_idx": "./Project_CodeNet_Python800/p03605/s268214559.py",
  "response": "Yes"
 },
 {
  "f1": "# https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_d\n\nfrom itertools import combinations\n\nn = int(input())\nk = -1\nfor i in range(10**3):\nif i*i - i - 2 * n == 0:\nk = i\n\nif k == -1:\nprint('No')\nexit()\n\n# print('Yes')\n# print(k)\n\nnum = 0\nV = [[] for _ in range(k)]\nfor cmb in combinations(range(k), r=2):\nnum += 1\na, b = cmb\nV[a].append(num)\nV[b].append(num)\nprint('Yes')\nprint(k)\nfor v in V:\nprint(len(v), end=\" \")\nprint(*v)",
  "f2": "# https://atcoder.jp/contests/tenka1-2018-beginner/tasks/tenka1_2018_d\n\nfrom itertools import combinations\n\nn = int(input())\nk = -1\nfor i in range(10**3):\nif i*i - i - 2 * n == 0:\nk = i\n\nif k == -1:\nprint('No')\nexit()\n\n# print('Yes')\n# print(k)\n\nnum = 0\nV = [[] for _ in range(k)]\nfor cmb in combinations(range(k), r=2):\nnum += 1\na, b = cmb\nV[a].append(num)\nV[b].append(num)\nprint('Yes')\nprint(k)\nfor v in V:\nprint(len(v), end=\" \")\nprint(*v)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03230/s366576461.py",
  "f2_idx": "./Project_CodeNet_Python800/p03230/s366576461.py",
  "response": "Yes"
 },
 {
  "f1": "S = input()\n\nval = 700\n\nfor i in range(len(S)):\nif S[i] == 'o':\nval += 100\n\nprint(val)",
  "f2": "S = input()\n\nval = 700\n\nfor i in range(len(S)):\nif S[i] == 'o':\nval += 100\n\nprint(val)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03369/s623629137.py",
  "f2_idx": "./Project_CodeNet_Python800/p03369/s623629137.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, T = map(int,input().split())\nprint(int(T/A) * B)",
  "f2": "A,B,T = map(int,input().split())\nprint(int(T/A)*int(B))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03059/s106893912.py",
  "f2_idx": "./Project_CodeNet_Python800/p03059/s950138657.py",
  "response": "Yes"
 },
 {
  "f1": "input()\nK = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(len(l)):\nif (K - l[i]) <= (l[i] - 0):\nans += (K - l[i]) * 2\nelif (l[i] - 0) < (K - l[i]):\nans += (l[i] - 0) * 2\nprint(ans)",
  "f2": "input()\nK = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(len(l)):\nif (K - l[i]) <= (l[i] - 0):\nans += (K - l[i]) * 2\nelif (l[i] - 0) < (K - l[i]):\nans += (l[i] - 0) * 2\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03598/s489535047.py",
  "f2_idx": "./Project_CodeNet_Python800/p03598/s489535047.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nN, x = list(map(int, input().split()))\na = list(map(int, input().split()))\ndist = []\n\nans = 0\na.sort()\n\nfor i, con in enumerate(a):\nif i == len(a)-1:\ndist.append(x - sum(dist))\n\nif sum(dist) + con <= x:\ndist.append(con)\nelse:\ndist.append(0)\n\nfor i in range(len(a)):\nif a[i] == dist[i]:\nans += 1\nprint(ans)\nreturn\nresolve()",
  "f2": "def resolve():\nN, x = list(map(int, input().split()))\na = list(map(int, input().split()))\ndist = []\n\nans = 0\na.sort()\n\nfor i, con in enumerate(a):\nif i == len(a)-1:\ndist.append(x - sum(dist))\n\nif sum(dist) + con <= x:\ndist.append(con)\nelse:\ndist.append(0)\n\nfor i in range(len(a)):\nif a[i] == dist[i]:\nans += 1\nprint(ans)\nreturn\nresolve()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03254/s187351351.py",
  "f2_idx": "./Project_CodeNet_Python800/p03254/s187351351.py",
  "response": "Yes"
 },
 {
  "f1": "s=str(input())\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)",
  "f2": "s=str(input())\nn=len(s)\nS=list(s)\nt=S[0]+str(n-2)+S[n-1]\nprint(t)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03636/s160287748.py",
  "f2_idx": "./Project_CodeNet_Python800/p03636/s160287748.py",
  "response": "Yes"
 },
 {
  "f1": "h = int(raw_input())\nw = int(raw_input())\nn = int(raw_input())\nh,w = max(h,w),min(h,w)\nprint (n + h-1)/h",
  "f2": "h = int(raw_input())\nw = int(raw_input())\nn = int(raw_input())\nh,w = max(h,w),min(h,w)\nprint (n + h-1)/h",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02795/s117824574.py",
  "f2_idx": "./Project_CodeNet_Python800/p02795/s117824574.py",
  "response": "Yes"
 },
 {
  "f1": "[print(i) for i in (sorted([int(input()) for _ in range(10)])[:6:-1])]",
  "f2": "[print(i) for i in (sorted([int(input()) for _ in range(10)])[:6:-1])]",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p00001/s257016339.py",
  "f2_idx": "./Project_CodeNet_Python800/p00001/s257016339.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\nA=[int(input()) for i in range(N)]\nif A[0]!=0:\nprint(-1)\nelse:\nflag=0\nfor i in range(1,N):\nif A[i]-A[i-1]>1:\nflag=1\nbreak\nif flag==1:\nprint(-1)\nelse:\nans=0\nfor i in range(1,N):\nif A[i-1]+1==A[i]:\nans+=1\nelse:\nans+=A[i]\nprint(ans)",
  "f2": "N=int(input())\nA=[int(input()) for i in range(N)]\nif A[0]!=0:\nprint(-1)\nelse:\nflag=0\nfor i in range(1,N):\nif A[i]-A[i-1]>1:\nflag=1\nbreak\nif flag==1:\nprint(-1)\nelse:\nans=0\nfor i in range(1,N):\nif A[i-1]+1==A[i]:\nans+=1\nelse:\nans+=A[i]\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03347/s543278881.py",
  "f2_idx": "./Project_CodeNet_Python800/p03347/s543278881.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nArray = []\nfor i in range(N):\nArray.append(tuple(map(int,input().split())))\n\nres = 0\nfor i in reversed(range(N)):\na,b = Array[i]\na+=res\nres+= ((b-a%b)%b)\nprint(res)",
  "f2": "N = int(input())\nArray = []\nfor i in range(N):\nArray.append(tuple(map(int,input().split())))\n\nres = 0\nfor i in reversed(range(N)):\na,b = Array[i]\na+=res\nres+= ((b-a%b)%b)\nprint(res)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03821/s314496416.py",
  "f2_idx": "./Project_CodeNet_Python800/p03821/s314496416.py",
  "response": "Yes"
 },
 {
  "f1": "n,k = map(int,input().split())\nprint(min(n%k,-((n%k)-k)))",
  "f2": "n,k=map(int,input().split())\nprint(min(n%k,-n%k))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02719/s413819466.py",
  "f2_idx": "./Project_CodeNet_Python800/p02719/s131469623.py",
  "response": "No"
 },
 {
  "f1": "SA = list(input())\nSB = list(input())\nSC = list(input())\nA = 0\nB = 0\nC = 0\nans = \"\"\nturn = \"a\"\nwhile ans == \"\":\nif turn == \"a\":\nif A == len(SA):\nans = \"A\"\nelse:\nturn = SA[A]\nA +=1\nif turn == \"b\":\nif B == len(SB):\nans = \"B\"\nelse:\nturn = SB[B]\nB += 1\nif turn == \"c\":\nif C == len(SC):\nans = \"C\"\nelse:\nturn = SC[C]\nC += 1\nprint(ans)",
  "f2": "SA = list(input())\nSB = list(input())\nSC = list(input())\nA = 0\nB = 0\nC = 0\nans = \"\"\nturn = \"a\"\nwhile ans == \"\":\nif turn == \"a\":\nif A == len(SA):\nans = \"A\"\nelse:\nturn = SA[A]\nA +=1\nif turn == \"b\":\nif B == len(SB):\nans = \"B\"\nelse:\nturn = SB[B]\nB += 1\nif turn == \"c\":\nif C == len(SC):\nans = \"C\"\nelse:\nturn = SC[C]\nC += 1\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03998/s106587030.py",
  "f2_idx": "./Project_CodeNet_Python800/p03998/s106587030.py",
  "response": "Yes"
 },
 {
  "f1": "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\nfor j in range(min(k, 42)):\nbit = [0 for _ in range(n)]\nfor i in range(n):\nbit[max(i - a[i], 0)] += 1\nif i + a[i] + 1 < n:\nbit[i + a[i] + 1] -= 1\nresult = [bit[0]]\nfor i in range(n - 1):\nresult.append(bit[i + 1] + result[-1])\na = result\nprint(' '.join(list(map(str, a))))",
  "f2": "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\nfor j in range(min(k, 42)):\nbit = [0 for _ in range(n)]\nfor i in range(n):\nbit[max(i - a[i], 0)] += 1\nif i + a[i] + 1 < n:\nbit[i + a[i] + 1] -= 1\nresult = [bit[0]]\nfor i in range(n - 1):\nresult.append(bit[i + 1] + result[-1])\na = result\nprint(' '.join(list(map(str, a))))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02647/s958344396.py",
  "f2_idx": "./Project_CodeNet_Python800/p02647/s958344396.py",
  "response": "Yes"
 },
 {
  "f1": "#!/usr/bin/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\nmove = [(0, 1), (1, 1), (-1, 1), (0, -1), (1, -1), (-1, -1), (1, 0), (-1, 0)]\n#A\ndef A():\na, b, c = LI()\nif a == b:\nprint(c)\nif b == c:\nprint(a)\nif a == c:\nprint(b)\nreturn\n\n#B\ndef B():\nh, w = LI()\ns = SR(h)\nfor y in range(h):\nfor x in range(w):\nif s[y][x] == \".\":\nb = 0\nfor my, mx in move:\nym = my + y\nxm = mx + x\nif 0 <= ym < h and 0 <= xm < w:\nif s[ym][xm] == \"#\":\nb += 1\ns[y][x] = b\nfor i in range(h):\nprint(\"\".join(map(str, s[i])))\nreturn\n\n#C\ndef C():\nn, m = LI()\nedg = [[] for i in range(n)]\nab = LIR_(m)\nfor a,b in ab:\nedg[a].append(b)\nedg[b].append(a)\nans = 0\nfor a, b in ab:\nc = [True] * n\ned = defaultdict(int)\nq = deque()\nq.append(0)\nc[0] = False\ned[(a,b)] = True\nwhile q:\nnow = q.pop()\nfor e in edg[now]:\nif ed[(now,e)] or ed[(e,now)]:\ncontinue\ned[(now, e)] = True\nc[e] = False\nq.appendleft(e)\nif True in c:\nans += 1\nprint(ans)\nreturn\n\n#D\ndef D():\nn, k = LI()\nxy = LIR(n)\nfullserch = list(itertools.combinations(range(n), 2))\nans = inf\nfor a, b in fullserch:\nminx = min(xy[a][0], xy[b][0])\nmaxx = max(xy[a][0], xy[b][0])\nfor c, d in fullserch:\nminy = min(xy[c][1], xy[d][1])\nmaxy = max(xy[c][1], xy[d][1])\nx = 0\n\nfor i in range(n):\nif minx <= xy[i][0] <= maxx and miny <= xy[i][1] <= maxy:\nx += 1\n\nif x >= k:\nans = min(ans, (maxx - minx) * (maxy - miny))\nprint(ans)\nreturn\n\n#Solve\nif __name__ == '__main__':\nD()",
  "f2": "#!/usr/bin/env python3\nfrom collections import defaultdict\nfrom collections import deque\nfrom heapq import heappush, heappop\nimport sys\nimport math\nimport bisect\nimport random\nimport itertools\nsys.setrecursionlimit(10**5)\nstdin = sys.stdin\nbisect_left = bisect.bisect_left\nbisect_right = bisect.bisect_right\ndef LI(): return list(map(int, stdin.readline().split()))\ndef LF(): return list(map(float, stdin.readline().split()))\ndef LI_(): return list(map(lambda x: int(x)-1, stdin.readline().split()))\ndef II(): return int(stdin.readline())\ndef IF(): return float(stdin.readline())\ndef LS(): return list(map(list, stdin.readline().split()))\ndef S(): return list(stdin.readline().rstrip())\ndef IR(n): return [II() for _ in range(n)]\ndef LIR(n): return [LI() for _ in range(n)]\ndef FR(n): return [IF() for _ in range(n)]\ndef LFR(n): return [LI() for _ in range(n)]\ndef LIR_(n): return [LI_() for _ in range(n)]\ndef SR(n): return [S() for _ in range(n)]\ndef LSR(n): return [LS() for _ in range(n)]\nmod = 1000000007\ninf = float('INF')\nmove = [(0, 1), (1, 1), (-1, 1), (0, -1), (1, -1), (-1, -1), (1, 0), (-1, 0)]\n#A\ndef A():\na, b, c = LI()\nif a == b:\nprint(c)\nif b == c:\nprint(a)\nif a == c:\nprint(b)\nreturn\n\n#B\ndef B():\nh, w = LI()\ns = SR(h)\nfor y in range(h):\nfor x in range(w):\nif s[y][x] == \".\":\nb = 0\nfor my, mx in move:\nym = my + y\nxm = mx + x\nif 0 <= ym < h and 0 <= xm < w:\nif s[ym][xm] == \"#\":\nb += 1\ns[y][x] = b\nfor i in range(h):\nprint(\"\".join(map(str, s[i])))\nreturn\n\n#C\ndef C():\nn, m = LI()\nedg = [[] for i in range(n)]\nab = LIR_(m)\nfor a,b in ab:\nedg[a].append(b)\nedg[b].append(a)\nans = 0\nfor a, b in ab:\nc = [True] * n\ned = defaultdict(int)\nq = deque()\nq.append(0)\nc[0] = False\ned[(a,b)] = True\nwhile q:\nnow = q.pop()\nfor e in edg[now]:\nif ed[(now,e)] or ed[(e,now)]:\ncontinue\ned[(now, e)] = True\nc[e] = False\nq.appendleft(e)\nif True in c:\nans += 1\nprint(ans)\nreturn\n\n#D\ndef D():\nn, k = LI()\nxy = LIR(n)\nfullserch = list(itertools.combinations(range(n), 2))\nans = inf\nfor a, b in fullserch:\nminx = min(xy[a][0], xy[b][0])\nmaxx = max(xy[a][0], xy[b][0])\nfor c, d in fullserch:\nminy = min(xy[c][1], xy[d][1])\nmaxy = max(xy[c][1], xy[d][1])\nx = 0\n\nfor i in range(n):\nif minx <= xy[i][0] <= maxx and miny <= xy[i][1] <= maxy:\nx += 1\n\nif x >= k:\nans = min(ans, (maxx - minx) * (maxy - miny))\nprint(ans)\nreturn\n\n#Solve\nif __name__ == '__main__':\nD()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03576/s560336007.py",
  "f2_idx": "./Project_CodeNet_Python800/p03576/s560336007.py",
  "response": "Yes"
 },
 {
  "f1": "H, W = map(int, input().split())\nzero_pad = '.' * (W + 2)\ns = []\ns.append(zero_pad)\nfor i in range(H):\ns.append('.' + input() + '.')\ns.append(zero_pad)\n\nfor h in range(1, H + 1):\nfor w in range(1, W + 1):\nif s[h][w] == '#':\nif s[h - 1][w] == '.' and s[h + 1][w] == '.' and s[h][w - 1] == '.' and s[h][w + 1] == '.':\nprint('No')\nexit()\n\nprint('Yes')",
  "f2": "H, W = map(int, input().split())\nzero_pad = '.' * (W + 2)\ns = []\ns.append(zero_pad)\nfor i in range(H):\ns.append('.' + input() + '.')\ns.append(zero_pad)\n\nfor h in range(1, H + 1):\nfor w in range(1, W + 1):\nif s[h][w] == '#':\nif s[h - 1][w] == '.' and s[h + 1][w] == '.' and s[h][w - 1] == '.' and s[h][w + 1] == '.':\nprint('No')\nexit()\n\nprint('Yes')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03361/s661356630.py",
  "f2_idx": "./Project_CodeNet_Python800/p03361/s661356630.py",
  "response": "Yes"
 },
 {
  "f1": "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef s(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\n\nn,k=I()\np = l()\nx = list(itertools.accumulate(p))\n\nif n==1:\nprint((p[0]+1)/2)\nsys.exit()\n\nif n==k:\nprint((x[-1]+k)/2)\nsys.exit()\n\nfor i in range(1,n-k+1):\nans = max(ans,x[i+k-1]-x[i-1])\n\nprint((ans+k)/2)",
  "f2": "import re\nimport sys\nimport math\nimport itertools\nimport bisect\nfrom copy import copy\nfrom collections import deque,Counter\nfrom decimal import Decimal\nimport functools\ndef s(): return input()\ndef k(): return int(input())\ndef S(): return input().split()\ndef I(): return map(int,input().split())\ndef X(): return list(input())\ndef L(): return list(input().split())\ndef l(): return list(map(int,input().split()))\ndef lcm(a,b): return a*b//math.gcd(a,b)\nsys.setrecursionlimit(10 ** 9)\nmod = 10**9+7\ncnt = 0\nans = 0\ninf = float(\"inf\")\n\nn,k=I()\np = l()\nx = list(itertools.accumulate(p))\n\nif n==1:\nprint((p[0]+1)/2)\nsys.exit()\n\nif n==k:\nprint((x[-1]+k)/2)\nsys.exit()\n\nfor i in range(1,n-k+1):\nans = max(ans,x[i+k-1]-x[i-1])\n\nprint((ans+k)/2)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02780/s123144156.py",
  "f2_idx": "./Project_CodeNet_Python800/p02780/s123144156.py",
  "response": "Yes"
 },
 {
  "f1": "# dp\n# N円を作るのに最も小さい操作回数\n\nimport sys\nreadline = sys.stdin.readline\n\nN = int(readline())\n\ndp = [i for i in range(N + 1)]\n\nfor i in range(len(dp)):\nn = 6\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 6\nn = 9\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 9\nprint(dp[N])",
  "f2": "# dp\n# N円を作るのに最も小さい操作回数\n\nimport sys\nreadline = sys.stdin.readline\n\nN = int(readline())\n\ndp = [i for i in range(N + 1)]\n\nfor i in range(len(dp)):\nn = 6\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 6\nn = 9\nwhile i + n < len(dp):\nif dp[i + n] > dp[i] + 1:\ndp[i + n] = dp[i] + 1\nn *= 9\nprint(dp[N])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03329/s200815646.py",
  "f2_idx": "./Project_CodeNet_Python800/p03329/s200815646.py",
  "response": "Yes"
 },
 {
  "f1": "from random import *\nD=int(input())\nC=list(map(int,input().split()))\nS=[list(map(int,input().split())) for i in range(D)]\nX=[0]*26\nXX=[0]*26\nP=[]\nfor i in range(D):\nfor j in range(26):\nX[j]+=C[j]\nXX[j]+=X[j]\nP.append([])\nfor j in range(26):\nP[i].append(j)\nP[i].sort(reverse=True,key=lambda x:X[x]+S[i][x])\nXX[P[i][0]]-=X[P[i][0]]\nX[P[i][0]]=0\nSC,SC2=0,0\nfor i in range(D):\nSC+=S[i][P[i][0]]\nYY=[]\nY=[]\nk=0\nL=[]\nfor i in range(25):\nfor j in range(50-i):\nL.append(i)\nfor l in range(666):\nfor i in range(D):\nk=L[randrange(0,len(L))]\nSC2=SC\nYY=XX[:]\nY=X[:]\nSC2-=S[i][P[i][0]]\nSC2+=S[i][P[i][k+1]]\nfor j in range(26):\nY[j]=0\nYY[P[i][0]],YY[P[i][k+1]]=0,0\nfor j in range(D):\nif j==i:\nZ=P[j][k+1]\nelse:\nZ=P[j][0]\nY[P[i][0]]+=C[P[i][0]]\nY[P[i][k+1]]+=C[P[i][k+1]]\nY[Z]=0\nYY[P[i][0]]+=Y[P[i][0]]\nYY[P[i][k+1]]+=Y[P[i][k+1]]\nif SC2-sum(YY)>SC-sum(XX):\nP[i].insert(0,P[i][k+1])\ndel P[i][k+2]\nXX=YY[:]\nSC=SC2\n'''\nスコア計算用\nUKU=0\nX=[0]*26\nfor i in range(D):\nT=P[i][0]+1\nUKU+=S[i][T-1]\nfor j in range(26):\nX[j]+=C[j]\nX[T-1]=0\nUKU-=sum(X)\nprint(UKU)\n'''\nfor i in range(D):\nprint(P[i][0]+1)",
  "f2": "from random import *\nD=int(input())\nC=list(map(int,input().split()))\nS=[list(map(int,input().split())) for i in range(D)]\nX=[0]*26\nXX=[0]*26\nP=[]\nfor i in range(D):\nfor j in range(26):\nX[j]+=C[j]\nXX[j]+=X[j]\nP.append([])\nfor j in range(26):\nP[i].append(j)\nP[i].sort(reverse=True,key=lambda x:X[x]+S[i][x])\nXX[P[i][0]]-=X[P[i][0]]\nX[P[i][0]]=0\nSC,SC2=0,0\nfor i in range(D):\nSC+=S[i][P[i][0]]\nYY=[]\nY=[]\nk=0\nL=[]\nfor i in range(25):\nfor j in range(50-i):\nL.append(i)\nfor l in range(666):\nfor i in range(D):\nk=L[randrange(0,len(L))]\nSC2=SC\nYY=XX[:]\nY=X[:]\nSC2-=S[i][P[i][0]]\nSC2+=S[i][P[i][k+1]]\nfor j in range(26):\nY[j]=0\nYY[P[i][0]],YY[P[i][k+1]]=0,0\nfor j in range(D):\nif j==i:\nZ=P[j][k+1]\nelse:\nZ=P[j][0]\nY[P[i][0]]+=C[P[i][0]]\nY[P[i][k+1]]+=C[P[i][k+1]]\nY[Z]=0\nYY[P[i][0]]+=Y[P[i][0]]\nYY[P[i][k+1]]+=Y[P[i][k+1]]\nif SC2-sum(YY)>SC-sum(XX):\nP[i].insert(0,P[i][k+1])\ndel P[i][k+2]\nXX=YY[:]\nSC=SC2\n'''\nスコア計算用\nUKU=0\nX=[0]*26\nfor i in range(D):\nT=P[i][0]+1\nUKU+=S[i][T-1]\nfor j in range(26):\nX[j]+=C[j]\nX[T-1]=0\nUKU-=sum(X)\nprint(UKU)\n'''\nfor i in range(D):\nprint(P[i][0]+1)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02618/s912034331.py",
  "f2_idx": "./Project_CodeNet_Python800/p02618/s912034331.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nH = [int(x) for x in input().split()]\n\nif N == 1:\nprint(0)\nelse:\nans = []\nc = 0\nfor i in range(N - 1):\nif H[i] >= H[i + 1]:\nc += 1\nif i == N - 2:\nans.append(c)\nelif H[i] < H[i + 1]:\nans.append(c)\nc = 0\nprint(max(ans))",
  "f2": "N = int(input())\nH = [int(x) for x in input().split()]\n\nif N == 1:\nprint(0)\nelse:\nans = []\nc = 0\nfor i in range(N - 1):\nif H[i] >= H[i + 1]:\nc += 1\nif i == N - 2:\nans.append(c)\nelif H[i] < H[i + 1]:\nans.append(c)\nc = 0\nprint(max(ans))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02923/s860206730.py",
  "f2_idx": "./Project_CodeNet_Python800/p02923/s860206730.py",
  "response": "Yes"
 },
 {
  "f1": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**8)\nINF = float(\"inf\")\n\nMOD = 1000000007  # type: int\n\n\nclass Combination(object):\n\ndef __init__(self, N, mod=MOD):\nfac, finv, inv = [0]*(N+1), [0]*(N+1), [0]*(N+1)\nfac[:2] = 1, 1\nfinv[:2] = 1, 1\ninv[1] = 1\nfor i in range(2, N+1):\nfac[i] = fac[i-1]*i % mod\ninv[i] = -inv[mod % i]*(mod//i) % mod\nfinv[i] = finv[i-1]*inv[i] % mod\nself.N = N\nself.MOD = mod\nself.fac = fac\nself.finv = finv\nself.inv = inv\n\ndef __call__(self, n, k):\nif n < k:\nreturn 0\nif n < 0 or k < 0:\nreturn 0\nfac = self.fac\nfinv = self.finv\nmod = self.MOD\nreturn fac[n] * (finv[k]*finv[n-k] % mod) % mod\n\n\ndef solve(H: int, W: int, A: int, B: int):\n\ncmb = Combination(H+W+1, MOD)\n\nans = 0\nfor i in range(B, W):\nbuf = cmb(H-A-1+i, i)\nbuf *= cmb(A+W-i-2, W-i-1)\nbuf %= MOD\nans += buf\nans %= MOD\nprint(ans)\n\nreturn\n\n\ndef main():\n\ndef iterate_tokens():\nfor line in sys.stdin:\nfor word in line.split():\nyield word\ntokens = iterate_tokens()\nH = int(next(tokens))  # type: int\nW = int(next(tokens))  # type: int\nA = int(next(tokens))  # type: int\nB = int(next(tokens))  # type: int\nsolve(H, W, A, B)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**8)\nINF = float(\"inf\")\n\nMOD = 1000000007  # type: int\n\n\nclass Combination(object):\n\ndef __init__(self, N, mod=MOD):\nfac, finv, inv = [0]*(N+1), [0]*(N+1), [0]*(N+1)\nfac[:2] = 1, 1\nfinv[:2] = 1, 1\ninv[1] = 1\nfor i in range(2, N+1):\nfac[i] = fac[i-1]*i % mod\ninv[i] = -inv[mod % i]*(mod//i) % mod\nfinv[i] = finv[i-1]*inv[i] % mod\nself.N = N\nself.MOD = mod\nself.fac = fac\nself.finv = finv\nself.inv = inv\n\ndef __call__(self, n, k):\nif n < k:\nreturn 0\nif n < 0 or k < 0:\nreturn 0\nfac = self.fac\nfinv = self.finv\nmod = self.MOD\nreturn fac[n] * (finv[k]*finv[n-k] % mod) % mod\n\n\ndef solve(H: int, W: int, A: int, B: int):\n\ncmb = Combination(H+W+1, MOD)\n\nans = 0\nfor i in range(B, W):\nbuf = cmb(H-A-1+i, i)\nbuf *= cmb(A+W-i-2, W-i-1)\nbuf %= MOD\nans += buf\nans %= MOD\nprint(ans)\n\nreturn\n\n\ndef main():\n\ndef iterate_tokens():\nfor line in sys.stdin:\nfor word in line.split():\nyield word\ntokens = iterate_tokens()\nH = int(next(tokens))  # type: int\nW = int(next(tokens))  # type: int\nA = int(next(tokens))  # type: int\nB = int(next(tokens))  # type: int\nsolve(H, W, A, B)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p04046/s711753237.py",
  "f2_idx": "./Project_CodeNet_Python800/p04046/s711753237.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\n\nans = \"No\"\nfor i in range(1,10):\nif n%i==0 and n//i<10 :\nans = \"Yes\"\nbreak\nprint( ans )",
  "f2": "n=int(input())\n\nans = \"No\"\nfor i in range(1,10):\nif n%i==0 and n//i<10 :\nans = \"Yes\"\nbreak\nprint( ans )",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02880/s683315519.py",
  "f2_idx": "./Project_CodeNet_Python800/p02880/s683315519.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\n\n\ndef input():\nreturn sys.stdin.readline()[:-1]\n\n\nN, C, K = map(int, input().split())\nT = [0]*N\nfor i in range(N):\nT[i] = int(input())\nT.sort()\n\nans = 1\nbus_time = T[0]\nbus_num = 0\nfor i in range(N):\nif T[i] <= bus_time+K and bus_num < C:\n# 止まっているバスに乗る\nbus_num += 1\nelse:\n# 新しいバスが必要\nbus_time = T[i]\nbus_num = 1\nans += 1\n\nprint(ans)",
  "f2": "import sys\n\n\ndef input():\nreturn sys.stdin.readline()[:-1]\n\n\nN, C, K = map(int, input().split())\nT = [0]*N\nfor i in range(N):\nT[i] = int(input())\nT.sort()\n\nans = 1\nbus_time = T[0]\nbus_num = 0\nfor i in range(N):\nif T[i] <= bus_time+K and bus_num < C:\n# 止まっているバスに乗る\nbus_num += 1\nelse:\n# 新しいバスが必要\nbus_time = T[i]\nbus_num = 1\nans += 1\n\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03785/s639224042.py",
  "f2_idx": "./Project_CodeNet_Python800/p03785/s639224042.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nfrom collections import deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nn, k, *a = map(int, read().split())\n\nl = [0] * (n + 1)\n\nq = deque([])\ni = 1\nwhile True:\nq.append(i)\nl[i] += 1\nif l[i] == 2:\nleft = q.index(i)\nright = len(q)-2\nbreak\ni = a[i - 1]\n\nlength = right - left + 1\n\nif k > left:\nb = k - left\nk = b % length\nprint(q[left+k])\nelse:\nprint(q[k])",
  "f2": "import sys\nfrom collections import deque\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\n\nn, k, *a = map(int, read().split())\n\nl = [0] * (n + 1)\n\nq = deque([])\ni = 1\nwhile True:\nq.append(i)\nl[i] += 1\nif l[i] == 2:\nleft = q.index(i)\nright = len(q)-2\nbreak\ni = a[i - 1]\n\nlength = right - left + 1\n\nif k > left:\nb = k - left\nk = b % length\nprint(q[left+k])\nelse:\nprint(q[k])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02684/s534982526.py",
  "f2_idx": "./Project_CodeNet_Python800/p02684/s534982526.py",
  "response": "Yes"
 },
 {
  "f1": "w, a, b = map(int, input().split())\nprint(max(0, a-(b+w), b-(a+w)))",
  "f2": "w, a, b = map(int, input().split())\nprint(max(0, a-(b+w), b-(a+w)))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03778/s455817976.py",
  "f2_idx": "./Project_CodeNet_Python800/p03778/s455817976.py",
  "response": "Yes"
 },
 {
  "f1": "x = int(input())\nans = 0\ni = 1\nwhile True:\nans += i\ni += 1\nif ans >= x:\nprint(i-1)\nbreak",
  "f2": "x = int(input())\nans = 0\ni = 1\nwhile True:\nans += i\ni += 1\nif ans >= x:\nprint(i-1)\nbreak",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03779/s039624235.py",
  "f2_idx": "./Project_CodeNet_Python800/p03779/s039624235.py",
  "response": "Yes"
 },
 {
  "f1": "class Combination:\n\ndef __init__(self, n, MOD):\nself.fact = [1]\nfor i in range(1, n + 1):\nself.fact.append(self.fact[-1] * i % MOD)\nself.inv_fact = [pow(self.fact[i] ,MOD - 2 ,MOD) for i in range(n + 1)]\nself.MOD = MOD\n\ndef factorial(self, k):\n'''k!を求める'''\nreturn self.fact[k]\n\ndef inverse_factorial(self, k):\n'''k!の逆元を求める'''\nreturn self.inv_fact[k]\n\ndef combination(self, k, r):\n'''kCrを求める'''\nreturn (self.fact[k] * self.inv_fact[k - r] * self.inv_fact[r]) % self.MOD\n\nh, w, k = map(int, input().split())\nMOD = 10**9 + 7\ncomb = Combination(h*w, MOD)\n\nkumi = comb.combination(h*w - 2, k - 2)\nans = 0\n\nfor d in range(0, h):\nans += d * (h - d) * kumi * w * w\nans %= MOD\n\nfor d in range(0, w):\nans += d * (w - d) * kumi * h * h\nans %= MOD\n\nprint(ans)",
  "f2": "class Combination:\n\ndef __init__(self, n, MOD):\nself.fact = [1]\nfor i in range(1, n + 1):\nself.fact.append(self.fact[-1] * i % MOD)\nself.inv_fact = [pow(self.fact[i] ,MOD - 2 ,MOD) for i in range(n + 1)]\nself.MOD = MOD\n\ndef factorial(self, k):\n'''k!を求める'''\nreturn self.fact[k]\n\ndef inverse_factorial(self, k):\n'''k!の逆元を求める'''\nreturn self.inv_fact[k]\n\ndef combination(self, k, r):\n'''kCrを求める'''\nreturn (self.fact[k] * self.inv_fact[k - r] * self.inv_fact[r]) % self.MOD\n\nh, w, k = map(int, input().split())\nMOD = 10**9 + 7\ncomb = Combination(h*w, MOD)\n\nkumi = comb.combination(h*w - 2, k - 2)\nans = 0\n\nfor d in range(0, h):\nans += d * (h - d) * kumi * w * w\nans %= MOD\n\nfor d in range(0, w):\nans += d * (w - d) * kumi * h * h\nans %= MOD\n\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03039/s906480442.py",
  "f2_idx": "./Project_CodeNet_Python800/p03039/s906480442.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = map(int, input().split())\nif x % y: print(x)\nelse: print(-1)",
  "f2": "x, y = map(int, input().split())\nif x % y: print(x)\nelse: print(-1)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03437/s543395679.py",
  "f2_idx": "./Project_CodeNet_Python800/p03437/s543395679.py",
  "response": "Yes"
 },
 {
  "f1": "N, M = map(int,input().split())\ndef make_divisors(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn lower_divisors + upper_divisors[::-1]\nD = sorted(make_divisors(M))[::-1]\n\nfor e in D:\nif N*e <= M:\nprint(e)\nexit(0)",
  "f2": "N, M = map(int,input().split())\ndef make_divisors(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn lower_divisors + upper_divisors[::-1]\nD = sorted(make_divisors(M))[::-1]\n\nfor e in D:\nif N*e <= M:\nprint(e)\nexit(0)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03241/s970336140.py",
  "f2_idx": "./Project_CodeNet_Python800/p03241/s970336140.py",
  "response": "Yes"
 },
 {
  "f1": "r,c = map(int,raw_input().split())\ncels = []\nfor i in xrange(r):\ncols = map(int, raw_input().split())\ncels.append(cols)\n\nfor i in xrange(r):\ncels[i].append(sum([ j for j in cels[i]]))\n\nsum_c=[]\nfor i in xrange(c):\nsum_c.append(sum([cels[n][i] for n in xrange(r)]))\n\ncels.append(sum_c)\ncels[r].append(sum(cels[r]))\n\nfor i in xrange(r+1):\nprint \" \".join(map(str,cels[i]))",
  "f2": "r,c = map(int,raw_input().split())\ncels = []\nfor i in xrange(r):\ncols = map(int, raw_input().split())\ncels.append(cols)\n\nfor i in xrange(r):\ncels[i].append(sum([ j for j in cels[i]]))\n\nsum_c=[]\nfor i in xrange(c):\nsum_c.append(sum([cels[n][i] for n in xrange(r)]))\n\ncels.append(sum_c)\ncels[r].append(sum(cels[r]))\n\nfor i in xrange(r+1):\nprint \" \".join(map(str,cels[i]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02413/s394386844.py",
  "f2_idx": "./Project_CodeNet_Python800/p02413/s394386844.py",
  "response": "Yes"
 },
 {
  "f1": "from sys import stdin\nimport math\ninp = lambda : stdin.readline().strip()\n\nn = int(inp())\na = [int(x) for x in inp().split()]\nans = 0\nfor i in range(1, n):\nif a[i] < a[i-1]:\nans += a[i-1] - a[i]\na[i] += a[i-1] - a[i]\nprint(ans)",
  "f2": "from sys import stdin\nimport math\ninp = lambda : stdin.readline().strip()\n\nn = int(inp())\na = [int(x) for x in inp().split()]\nans = 0\nfor i in range(1, n):\nif a[i] < a[i-1]:\nans += a[i-1] - a[i]\na[i] += a[i-1] - a[i]\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02578/s357551418.py",
  "f2_idx": "./Project_CodeNet_Python800/p02578/s357551418.py",
  "response": "Yes"
 },
 {
  "f1": "from bisect import bisect_right\n\nN,M,K = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n#a,bの累積和\nA_sum = [0]\nB_sum = [0]\nfor i in range(N):\nA_sum.append(A_sum[i]+A[i])\nfor i in range(M):\nB_sum.append(B_sum[i]+B[i])\n\nans = 0\n#Aについて0-N冊読む場合の全探索\nfor i in range(N+1):\ncntA = i #Aをi冊読む\nrest = K - A_sum[i] #残り時間rest分\nif rest < 0:\nbreak\ncntB = bisect_right(B_sum,rest)-1 #Bで読むことができる冊数を二分探索で求める\nans = max(ans,cntA + cntB)\nprint(ans)",
  "f2": "from bisect import bisect_right\n\nN,M,K = map(int,input().split())\nA = list(map(int,input().split()))\nB = list(map(int,input().split()))\n#a,bの累積和\nA_sum = [0]\nB_sum = [0]\nfor i in range(N):\nA_sum.append(A_sum[i]+A[i])\nfor i in range(M):\nB_sum.append(B_sum[i]+B[i])\n\nans = 0\n#Aについて0-N冊読む場合の全探索\nfor i in range(N+1):\ncntA = i #Aをi冊読む\nrest = K - A_sum[i] #残り時間rest分\nif rest < 0:\nbreak\ncntB = bisect_right(B_sum,rest)-1 #Bで読むことができる冊数を二分探索で求める\nans = max(ans,cntA + cntB)\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02623/s942005296.py",
  "f2_idx": "./Project_CodeNet_Python800/p02623/s942005296.py",
  "response": "Yes"
 },
 {
  "f1": "N, T = map(int, input().split())\n\nts = list(map(int, input().split()))\n\ndef it():\nfor i in range(N-1):\ndiff = ts[i+1] - ts[i]\nif diff <= T:\nyield diff\nelse:\nyield T\nyield T\n\nprint(sum(it()))\n\n\n\n\n\n",
  "f2": "N, T = map(int, input().split())\n\nts = list(map(int, input().split()))\n\ndef it():\nfor i in range(N-1):\ndiff = ts[i+1] - ts[i]\nif diff <= T:\nyield diff\nelse:\nyield T\nyield T\n\nprint(sum(it()))\n\n\n\n\n\n",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03733/s247310990.py",
  "f2_idx": "./Project_CodeNet_Python800/p03733/s247310990.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,n=map(int,input().split())\n\nimport math\nif n/b >= 1:\nprint(math.floor(a*(b-1)/b))\nelse:\nprint(math.floor(a*n/b))",
  "f2": "a,b,n=map(int,input().split())\n\nimport math\nif n/b >= 1:\nprint(math.floor(a*(b-1)/b))\nelse:\nprint(math.floor(a*n/b))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02696/s466289745.py",
  "f2_idx": "./Project_CodeNet_Python800/p02696/s466289745.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\n\nans = 0\n\nfor i in range(1,n+1):\na = n//i\nb = i*a\n\nans += (i+b)*a//2\n\nprint(ans)",
  "f2": "n = int(input())\n\nans = 0\n\nfor i in range(1,n+1):\na = n//i\nb = i*a\n\nans += (i+b)*a//2\n\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02624/s826439799.py",
  "f2_idx": "./Project_CodeNet_Python800/p02624/s826439799.py",
  "response": "Yes"
 },
 {
  "f1": "def primesbelow(N):\n# http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n#\"\"\" Input N>=6, Returns a list of primes, 2 <= p < N \"\"\"\ncorrection = N % 6 > 1\nN = {0:N, 1:N-1, 2:N+4, 3:N+3, 4:N+2, 5:N+1}[N%6]\nsieve = [True] * (N // 3)\nsieve[0] = False\nfor i in range(int(N ** .5) // 3 + 1):\nif sieve[i]:\nk = (3 * i + 1) | 1\nsieve[k*k // 3::2*k] = [False] * ((N//6 - (k*k)//6 - 1)//k + 1)\nsieve[(k*k + 4*k - 2*k*(i%2)) // 3::2*k] = [False] * ((N // 6 - (k*k + 4*k - 2*k*(i%2))//6 - 1) // k + 1)\nreturn [2, 3] + [(3 * i + 1) | 1 for i in range(1, N//3 - correction) if sieve[i]]\n\nk=primesbelow(10000000)\nones=[]\ntwos=[]\nthrees=[]\nfours=[]\nfor i in k:\nif i%5==1:\nones.append(i)\nif i%5==2:\ntwos.append(i)\nif i%5==3:\nthrees.append(i)\nif i%5==4:\nfours.append(i)\n\nn=int(input())\nprint(*ones[5:5+n])",
  "f2": "def primesbelow(N):\n# http://stackoverflow.com/questions/2068372/fastest-way-to-list-all-primes-below-n-in-python/3035188#3035188\n#\"\"\" Input N>=6, Returns a list of primes, 2 <= p < N \"\"\"\ncorrection = N % 6 > 1\nN = {0:N, 1:N-1, 2:N+4, 3:N+3, 4:N+2, 5:N+1}[N%6]\nsieve = [True] * (N // 3)\nsieve[0] = False\nfor i in range(int(N ** .5) // 3 + 1):\nif sieve[i]:\nk = (3 * i + 1) | 1\nsieve[k*k // 3::2*k] = [False] * ((N//6 - (k*k)//6 - 1)//k + 1)\nsieve[(k*k + 4*k - 2*k*(i%2)) // 3::2*k] = [False] * ((N // 6 - (k*k + 4*k - 2*k*(i%2))//6 - 1) // k + 1)\nreturn [2, 3] + [(3 * i + 1) | 1 for i in range(1, N//3 - correction) if sieve[i]]\n\nk=primesbelow(10000000)\nones=[]\ntwos=[]\nthrees=[]\nfours=[]\nfor i in k:\nif i%5==1:\nones.append(i)\nif i%5==2:\ntwos.append(i)\nif i%5==3:\nthrees.append(i)\nif i%5==4:\nfours.append(i)\n\nn=int(input())\nprint(*ones[5:5+n])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03362/s387269143.py",
  "f2_idx": "./Project_CodeNet_Python800/p03362/s387269143.py",
  "response": "Yes"
 },
 {
  "f1": "def Int():\nreturn int(input())\ndef Ints():\nreturn map(int,input().split())\ndef IntList():\nreturn list(Ints())\ndef IntMat(N):\nreturn [IntList() for i in range(N)]\n\nimport sys\nsys.setrecursionlimit(4100000)\nrl = sys.stdin.readline\n\nH1,M1,H2,M2,K = Ints()\n\nS = (H2-H1)*60+(M2-M1)\n\nprint(S-K)",
  "f2": "def Int():\nreturn int(input())\ndef Ints():\nreturn map(int,input().split())\ndef IntList():\nreturn list(Ints())\ndef IntMat(N):\nreturn [IntList() for i in range(N)]\n\nimport sys\nsys.setrecursionlimit(4100000)\nrl = sys.stdin.readline\n\nH1,M1,H2,M2,K = Ints()\n\nS = (H2-H1)*60+(M2-M1)\n\nprint(S-K)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02663/s270893737.py",
  "f2_idx": "./Project_CodeNet_Python800/p02663/s270893737.py",
  "response": "Yes"
 },
 {
  "f1": "import os, sys, re, math\nimport itertools\n\nN = int(input())\nP = tuple([int(n) for n in input().split()])\nQ = tuple([int(n) for n in input().split()])\n\nnums = [n for n in range(1, N + 1)]\npatterns = itertools.permutations(nums, N)\ni = 0\nfor pattern in patterns:\nif pattern == P:\npi = i\nif pattern == Q:\nqi = i\ni += 1\n\nprint(abs(pi - qi))",
  "f2": "import os, sys, re, math\nimport itertools\n\nN = int(input())\nP = tuple([int(n) for n in input().split()])\nQ = tuple([int(n) for n in input().split()])\n\nnums = [n for n in range(1, N + 1)]\npatterns = itertools.permutations(nums, N)\ni = 0\nfor pattern in patterns:\nif pattern == P:\npi = i\nif pattern == Q:\nqi = i\ni += 1\n\nprint(abs(pi - qi))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02813/s036878138.py",
  "f2_idx": "./Project_CodeNet_Python800/p02813/s036878138.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nif(s ==\"ABC\"):\nprint(\"ARC\")\nelse:\nprint(\"ABC\")",
  "f2": "s=input()\nif (s==\"ABC\"):print(\"ARC\")\nelse:print(\"ABC\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02687/s781903112.py",
  "f2_idx": "./Project_CodeNet_Python800/p02687/s234523879.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nsys.setrecursionlimit(10 ** 9)\n# input = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return map(int, input().split())\ndef MI1(): return map(int1, input().split())\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\ndef printlist(lst, k=' '): print(k.join(list(map(str, lst))))\nINF = float('inf')\n# from math import ceil, floor, log2\nfrom collections import deque, defaultdict\n# from itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\n# from heapq import heapify, heappop, heappush\n# import numpy as np    # cumsum\n# from bisect import bisect_left, bisect_right\n\ndef solve():\nN = II()\nX = [0] * N\nY = [0] * N\nfor i in range(N):\nx, y = MI()\nX[i], Y[i] = x, y\n\ndct = defaultdict(int)\nfor i in range(N):\nfor j in range(N):\nif i == j: continue\nxi, yi = X[i], Y[i]\nxj, yj = X[j], Y[j]\n\ndct[(xi-xj, yi-yj)] += 1\n# print(dct)\nmx = 0\nfor d in dct.values():\nmx = max(mx, d)\nprint(N - mx)\n\n\nif __name__ == '__main__':\nsolve()\n",
  "f2": "import sys\nsys.setrecursionlimit(10 ** 9)\n# input = sys.stdin.readline    ####\ndef int1(x): return int(x) - 1\ndef II(): return int(input())\ndef MI(): return map(int, input().split())\ndef MI1(): return map(int1, input().split())\ndef LI(): return list(map(int, input().split()))\ndef LI1(): return list(map(int1, input().split()))\ndef LLI(rows_number): return [LI() for _ in range(rows_number)]\ndef MS(): return input().split()\ndef LS(): return list(input())\ndef LLS(rows_number): return [LS() for _ in range(rows_number)]\ndef printlist(lst, k=' '): print(k.join(list(map(str, lst))))\nINF = float('inf')\n# from math import ceil, floor, log2\nfrom collections import deque, defaultdict\n# from itertools import combinations as comb, combinations_with_replacement as comb_w, accumulate, product, permutations\n# from heapq import heapify, heappop, heappush\n# import numpy as np    # cumsum\n# from bisect import bisect_left, bisect_right\n\ndef solve():\nN = II()\nX = [0] * N\nY = [0] * N\nfor i in range(N):\nx, y = MI()\nX[i], Y[i] = x, y\n\ndct = defaultdict(int)\nfor i in range(N):\nfor j in range(N):\nif i == j: continue\nxi, yi = X[i], Y[i]\nxj, yj = X[j], Y[j]\n\ndct[(xi-xj, yi-yj)] += 1\n# print(dct)\nmx = 0\nfor d in dct.values():\nmx = max(mx, d)\nprint(N - mx)\n\n\nif __name__ == '__main__':\nsolve()\n",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03006/s932267653.py",
  "f2_idx": "./Project_CodeNet_Python800/p03006/s932267653.py",
  "response": "Yes"
 },
 {
  "f1": "n, m, d = [int(_) for _ in input().split()]\n\nif d == 0:\nprint((m - 1) / n)\nelse:\nprint((m - 1) * 2 * (n - d) / (n * n))",
  "f2": "n, m, d = [int(_) for _ in input().split()]\n\nif d == 0:\nprint((m - 1) / n)\nelse:\nprint((m - 1) * 2 * (n - d) / (n * n))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03304/s577467085.py",
  "f2_idx": "./Project_CodeNet_Python800/p03304/s577467085.py",
  "response": "Yes"
 },
 {
  "f1": "T,X =list(map(float,input().split()))\nprint(T/X)",
  "f2": "T,X =list(map(float,input().split()))\nprint(T/X)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03135/s661386084.py",
  "f2_idx": "./Project_CodeNet_Python800/p03135/s661386084.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import Counter\n\nS = list(input())\nC = Counter(S)\nif len(S) == 1:\nprint('YES')\nexit()\n\"\"\"\n条件を考えてみる\n一種類の字しかない時は回文\n２種類の時も，長さが２より大きい時は回文\n同じ文字をに連続で並べないといけない時に回文になる。\n\nある文字が他の文字よりも2つ以上多い時には回文になる。\n\"\"\"\n\nL = C.values()\nif len(L) <= 1:\nprint('NO')\nelif len(L) == 2 and len(S) > 2:\nprint('NO')\nelif max(L) - min(L) >= 2:\nprint('NO')\nelse:\nprint('YES')",
  "f2": "from collections import Counter\n\nS = list(input())\nC = Counter(S)\nif len(S) == 1:\nprint('YES')\nexit()\n\"\"\"\n条件を考えてみる\n一種類の字しかない時は回文\n２種類の時も，長さが２より大きい時は回文\n同じ文字をに連続で並べないといけない時に回文になる。\n\nある文字が他の文字よりも2つ以上多い時には回文になる。\n\"\"\"\n\nL = C.values()\nif len(L) <= 1:\nprint('NO')\nelif len(L) == 2 and len(S) > 2:\nprint('NO')\nelif max(L) - min(L) >= 2:\nprint('NO')\nelse:\nprint('YES')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03524/s139462631.py",
  "f2_idx": "./Project_CodeNet_Python800/p03524/s139462631.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\n\ndef solve():\nN, T = map(int, input().split())\nab_l = [[0, 0] for _ in range(N)]\nfor i in range(N):\nab_l[i][0], ab_l[i][1] = map(int, input().split())\nab_l.sort()\ndp = np.zeros(T, dtype=int)\nans = 0\n\nfor a, b in ab_l:\nans = max(ans, dp[-1] + b)\ndp[a:] = np.maximum(dp[a:], dp[:-a]+b)\n\nprint(ans)\n\n\nif __name__ == '__main__':\nsolve()",
  "f2": "import numpy as np\n\n\ndef solve():\nN, T = map(int, input().split())\nab_l = [[0, 0] for _ in range(N)]\nfor i in range(N):\nab_l[i][0], ab_l[i][1] = map(int, input().split())\nab_l.sort()\ndp = np.zeros(T, dtype=int)\nans = 0\n\nfor a, b in ab_l:\nans = max(ans, dp[-1] + b)\ndp[a:] = np.maximum(dp[a:], dp[:-a]+b)\n\nprint(ans)\n\n\nif __name__ == '__main__':\nsolve()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02863/s204812010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02863/s204812010.py",
  "response": "Yes"
 },
 {
  "f1": "H, N = map(int, input().split())\nA = sorted(map(int, input().split()))\nprint(\"Yes\" if(sum(A) >= H) else \"No\")",
  "f2": "H, N = map(int, input().split())\nA = sorted(map(int, input().split()))\nprint(\"Yes\" if(sum(A) >= H) else \"No\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02784/s725976283.py",
  "f2_idx": "./Project_CodeNet_Python800/p02784/s725976283.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nn = 0\nm = 0\nfor i in range(0, len(s)):\nif s[i] == 'C':\nn = 1\nbreak\nfor j in range (i, len(s)):\nif s[j] == 'F':\nm = 1\nbreak\nif n == 1 and m == 1:\nprint('Yes')\nelse:\nprint('No')",
  "f2": "s = input()\nn = 0\nm = 0\nfor i in range(0, len(s)):\nif s[i] == 'C':\nn = 1\nbreak\nfor j in range (i, len(s)):\nif s[j] == 'F':\nm = 1\nbreak\nif n == 1 and m == 1:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03957/s844979285.py",
  "f2_idx": "./Project_CodeNet_Python800/p03957/s844979285.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int,input().split()))\nt = ['0'] * n\n\nfor i in range(n):\nt[a[i] - 1] = str(i + 1)\n\nprint(' '.join(t))",
  "f2": "n = int(input())\na = list(map(int,input().split()))\nt = ['0'] * n\n\nfor i in range(n):\nt[a[i] - 1] = str(i + 1)\n\nprint(' '.join(t))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02899/s527180965.py",
  "f2_idx": "./Project_CodeNet_Python800/p02899/s527180965.py",
  "response": "Yes"
 },
 {
  "f1": "n,m=map(int,input().split())\nl=[]\nr=[]\nfor j in range(m):\ntempl,tempr=map(int,input().split())\nl.append(templ)\nr.append(tempr)\nans=min(r)-max(l)+1\nif ans<0:\nans=0\nprint(ans)",
  "f2": "n,m=map(int,input().split())\nl=[]\nr=[]\nfor j in range(m):\ntempl,tempr=map(int,input().split())\nl.append(templ)\nr.append(tempr)\nans=min(r)-max(l)+1\nif ans<0:\nans=0\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03037/s615698126.py",
  "f2_idx": "./Project_CodeNet_Python800/p03037/s615698126.py",
  "response": "Yes"
 },
 {
  "f1": "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef TUPLE(): return tuple(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nN, C = MAP()\nxv = [LIST() for _ in range(N)]\n\n#左回り用\nenergy_left_1 = [0]\nenergy_left_2 = [0] #折り返し用\ntmp_v = 0\nfor x, v in xv:\ntmp_v += v\nenergy_left_1.append(tmp_v-x)\nenergy_left_2.append(tmp_v-2*x)\n\n#右周り用\nenergy_right_1 = [0]\nenergy_right_2 = [0] #折り返し用\ntmp_v = 0\nfor x, v in xv[::-1]:\ny = C-x\ntmp_v += v\nenergy_right_1.append(tmp_v-y)\nenergy_right_2.append(tmp_v-2*y)\n\nenergy_left_1_acc = list(accumulate(energy_left_1, max))\nenergy_left_2_acc = list(accumulate(energy_left_2, max))\nenergy_right_1_acc = list(accumulate(energy_right_1, max))\nenergy_right_2_acc = list(accumulate(energy_right_2, max))\n\nans = -INF\nfor i in range(N+1):\nans = max(ans, energy_left_1_acc[i]+energy_right_2_acc[N-i])\nans = max(ans, energy_left_2_acc[i]+energy_right_1_acc[N-i])\nprint(ans)",
  "f2": "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left, insort, insort_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef TUPLE(): return tuple(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod = 10 ** 9 + 7\n#mod = 998244353\nfrom decimal import *\n#import numpy as np\n#decimal.getcontext().prec = 10\n\nN, C = MAP()\nxv = [LIST() for _ in range(N)]\n\n#左回り用\nenergy_left_1 = [0]\nenergy_left_2 = [0] #折り返し用\ntmp_v = 0\nfor x, v in xv:\ntmp_v += v\nenergy_left_1.append(tmp_v-x)\nenergy_left_2.append(tmp_v-2*x)\n\n#右周り用\nenergy_right_1 = [0]\nenergy_right_2 = [0] #折り返し用\ntmp_v = 0\nfor x, v in xv[::-1]:\ny = C-x\ntmp_v += v\nenergy_right_1.append(tmp_v-y)\nenergy_right_2.append(tmp_v-2*y)\n\nenergy_left_1_acc = list(accumulate(energy_left_1, max))\nenergy_left_2_acc = list(accumulate(energy_left_2, max))\nenergy_right_1_acc = list(accumulate(energy_right_1, max))\nenergy_right_2_acc = list(accumulate(energy_right_2, max))\n\nans = -INF\nfor i in range(N+1):\nans = max(ans, energy_left_1_acc[i]+energy_right_2_acc[N-i])\nans = max(ans, energy_left_2_acc[i]+energy_right_1_acc[N-i])\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03372/s502815842.py",
  "f2_idx": "./Project_CodeNet_Python800/p03372/s502815842.py",
  "response": "Yes"
 },
 {
  "f1": "x,y=map(int,input().split())\nif x%2==0:\nprint(\"Even\")\nelif y%2==1:\nprint(\"Odd\")\nelse:\nprint(\"Even\")",
  "f2": "x,y=map(int,input().split())\nif x%2==0:\nprint(\"Even\")\nelif y%2==1:\nprint(\"Odd\")\nelse:\nprint(\"Even\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03455/s655652616.py",
  "f2_idx": "./Project_CodeNet_Python800/p03455/s655652616.py",
  "response": "Yes"
 },
 {
  "f1": "n,k=map(int,input().split())\nH = list(map(int, input().split()))\n\nif n <= k:\nprint('0')\nexit()\n\nH.sort()\nH.reverse()\nprint(sum(H)-sum(H[0:k]))",
  "f2": "n,k=map(int,input().split())\nH = list(map(int, input().split()))\n\nif n <= k:\nprint('0')\nexit()\n\nH.sort()\nH.reverse()\nprint(sum(H)-sum(H[0:k]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02785/s077509812.py",
  "f2_idx": "./Project_CodeNet_Python800/p02785/s077509812.py",
  "response": "Yes"
 },
 {
  "f1": "ll =  list('1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51'.split(', '))\n\nk = int(input())\n\nprint(ll[k - 1])",
  "f2": "ll =  list('1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51'.split(', '))\n\nk = int(input())\n\nprint(ll[k - 1])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02741/s705542277.py",
  "f2_idx": "./Project_CodeNet_Python800/p02741/s705542277.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nstr_list = [list(input().split()) for _ in range(n)]\nans = 0\nfor i in range(n-2):\nif str_list[i][0] == str_list[i][1]:\nif str_list[i+1][0] == str_list[i+1][1]:\nif str_list[i+2][0] == str_list[i+2][1]:\nans += 1\n\nif ans:\nprint('Yes')\nelse:\nprint('No')",
  "f2": "n = int(input())\nstr_list = [list(input().split()) for _ in range(n)]\nans = 0\nfor i in range(n-2):\nif str_list[i][0] == str_list[i][1]:\nif str_list[i+1][0] == str_list[i+1][1]:\nif str_list[i+2][0] == str_list[i+2][1]:\nans += 1\n\nif ans:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02547/s540510210.py",
  "f2_idx": "./Project_CodeNet_Python800/p02547/s540510210.py",
  "response": "Yes"
 },
 {
  "f1": "#coding=UTF-8\n\nN=int(input())\nmozir=input()\nhyo=mozir.split(' ')\n\nRec_LTR=[int(mono) for mono in hyo]\n\nmozir=input()\nhyo=mozir.split(' ')\n\nRec_RTL=[int(mono) for mono in hyo]\n\nLTR_hani=[]\nhighest=0\nfor idx in range(0,N,1):\nif Rec_LTR[idx]>highest:\nhighest=Rec_LTR[idx]\nLTR_hani.append([highest,highest])\nelse:\nLTR_hani.append([highest,1])\n\nRTL_hani=[None]*N\nhighest=0\nfor idx in range(N-1,-1,-1):\nif Rec_RTL[idx]>highest:\nhighest=Rec_RTL[idx]\nRTL_hani[idx]=[highest,highest]\nelse:\nRTL_hani[idx]=[highest,1]\n\n#concat\nans=1\nhou=1000000007\nfor idx in range(0,N,1):\n# prod set\nue=min(RTL_hani[idx][0],LTR_hani[idx][0])\nshita=max(RTL_hani[idx][1],LTR_hani[idx][1])\nans=(ans*max((ue-shita+1),0))%hou\n\nprint(ans)",
  "f2": "#coding=UTF-8\n\nN=int(input())\nmozir=input()\nhyo=mozir.split(' ')\n\nRec_LTR=[int(mono) for mono in hyo]\n\nmozir=input()\nhyo=mozir.split(' ')\n\nRec_RTL=[int(mono) for mono in hyo]\n\nLTR_hani=[]\nhighest=0\nfor idx in range(0,N,1):\nif Rec_LTR[idx]>highest:\nhighest=Rec_LTR[idx]\nLTR_hani.append([highest,highest])\nelse:\nLTR_hani.append([highest,1])\n\nRTL_hani=[None]*N\nhighest=0\nfor idx in range(N-1,-1,-1):\nif Rec_RTL[idx]>highest:\nhighest=Rec_RTL[idx]\nRTL_hani[idx]=[highest,highest]\nelse:\nRTL_hani[idx]=[highest,1]\n\n#concat\nans=1\nhou=1000000007\nfor idx in range(0,N,1):\n# prod set\nue=min(RTL_hani[idx][0],LTR_hani[idx][0])\nshita=max(RTL_hani[idx][1],LTR_hani[idx][1])\nans=(ans*max((ue-shita+1),0))%hou\n\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03959/s271635856.py",
  "f2_idx": "./Project_CodeNet_Python800/p03959/s271635856.py",
  "response": "Yes"
 },
 {
  "f1": "s=input()\nt=input()\n\nS=[]\nT=[]\nfor a in s:\nS.append(a)\nfor a in t:\nT.append(a)\nS.sort()\nT.sort(reverse=True)\n\n\ns2=0\nt2=0\nans=\"No\"\nfor i in range(min(len(S),len(T))):\ns2=s2*256+ord(S[i])\nt2=t2*256+ord(T[i])\nif s2<t2 :\nans=\"Yes\"\nelif s2==t2 :\nif len(s)<len(t) :\nans=\"Yes\"\nprint(ans)",
  "f2": "s=input()\nt=input()\n\nS=[]\nT=[]\nfor a in s:\nS.append(a)\nfor a in t:\nT.append(a)\nS.sort()\nT.sort(reverse=True)\n\n\ns2=0\nt2=0\nans=\"No\"\nfor i in range(min(len(S),len(T))):\ns2=s2*256+ord(S[i])\nt2=t2*256+ord(T[i])\nif s2<t2 :\nans=\"Yes\"\nelif s2==t2 :\nif len(s)<len(t) :\nans=\"Yes\"\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03486/s469259809.py",
  "f2_idx": "./Project_CodeNet_Python800/p03486/s469259809.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = [int(x) for x in input().split()]\n\ncnt = {}\nif N & 1:\nbit = 1\nelse:\nbit = 0\n\nfor a in A:\nif a & bit:\nans = 0\nbreak\nif a in cnt:\ncnt[a] += 1\nelse:\ncnt[a] = 1\n\nfor key in cnt.keys():\nif key == 0 and cnt[key] != 1:\nans = 0\nbreak\nif key != 0 and cnt[key] != 2:\nans = 0\nbreak\nelse:\nans = 2**(N//2) %1000000007\nprint(ans)",
  "f2": "N = int(input())\nA = [int(x) for x in input().split()]\n\ncnt = {}\nif N & 1:\nbit = 1\nelse:\nbit = 0\n\nfor a in A:\nif a & bit:\nans = 0\nbreak\nif a in cnt:\ncnt[a] += 1\nelse:\ncnt[a] = 1\n\nfor key in cnt.keys():\nif key == 0 and cnt[key] != 1:\nans = 0\nbreak\nif key != 0 and cnt[key] != 2:\nans = 0\nbreak\nelse:\nans = 2**(N//2) %1000000007\nprint(ans)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03846/s950708323.py",
  "f2_idx": "./Project_CodeNet_Python800/p03846/s950708323.py",
  "response": "Yes"
 },
 {
  "f1": "for a in iter(input,'0'):\nprint(sum([int(s)for s in a]))",
  "f2": "for a in iter(input,'0'):print(sum([int(s)for s in a]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02416/s268977098.py",
  "f2_idx": "./Project_CodeNet_Python800/p02416/s323798414.py",
  "response": "Yes"
 },
 {
  "f1": "import collections\nimport sys\nsys.setrecursionlimit(2000000)\n# import math\n# import itertools\n# import statistics\n# import numpy as np\nn = int(input())\na = list(map(int, input().split()))\na_count = collections.Counter(a)\na_list = list(a_count.items())\na_sorted = sorted(a_list, key=lambda x: x[0], reverse=True)\n# print(a_sorted)\n\nans = []\nkouho = []\nfor i in range(len(a_sorted)):\nif a_sorted[i][1] >= 4:\nb = a_sorted[i][0]\nkouho.append(b)\nans.append(b*b)\nif a_sorted[i][1] >= 2:\nkouho.append(a_sorted[i][0])\n\n\nif len(ans) == 0 and len(kouho) < 2:\nprint(0)\nelse:\nif len(ans) == 0:\nprint(kouho[0]*kouho[1])\nelse:\nprint(max(max(ans), kouho[0]*kouho[1]))",
  "f2": "import collections\nimport sys\nsys.setrecursionlimit(2000000)\n# import math\n# import itertools\n# import statistics\n# import numpy as np\nn = int(input())\na = list(map(int, input().split()))\na_count = collections.Counter(a)\na_list = list(a_count.items())\na_sorted = sorted(a_list, key=lambda x: x[0], reverse=True)\n# print(a_sorted)\n\nans = []\nkouho = []\nfor i in range(len(a_sorted)):\nif a_sorted[i][1] >= 4:\nb = a_sorted[i][0]\nkouho.append(b)\nans.append(b*b)\nif a_sorted[i][1] >= 2:\nkouho.append(a_sorted[i][0])\n\n\nif len(ans) == 0 and len(kouho) < 2:\nprint(0)\nelse:\nif len(ans) == 0:\nprint(kouho[0]*kouho[1])\nelse:\nprint(max(max(ans), kouho[0]*kouho[1]))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03625/s569359627.py",
  "f2_idx": "./Project_CodeNet_Python800/p03625/s569359627.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\ncnt = sum([i % 2 for i in range(1, N + 1)])\nprint(cnt/N)",
  "f2": "N = int(input())\ncnt = sum([i % 2 for i in range(1, N + 1)])\nprint(cnt/N)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02897/s687636894.py",
  "f2_idx": "./Project_CodeNet_Python800/p02897/s687636894.py",
  "response": "Yes"
 },
 {
  "f1": "n, k = map(int, input().split())\ns = input()\nc = 'a' if s[k-1] == 'A' else 'b' if s[k-1] == 'B' else 'c'\nprint(s[:k-1] + c + s[k:])",
  "f2": "n, k = map(int, input().split())\ns = input()\nc = 'a' if s[k-1] == 'A' else 'b' if s[k-1] == 'B' else 'c'\nprint(s[:k-1] + c + s[k:])",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03041/s761113602.py",
  "f2_idx": "./Project_CodeNet_Python800/p03041/s761113602.py",
  "response": "Yes"
 },
 {
  "f1": "while True:\nh,w=map(int,input().split())\nif(h==0):\nbreak\nfor i in range(h):\nfor j in range(w):\nprint(\"#\",end=\"\")\nprint()\nprint()",
  "f2": "while True:\nh,w=map(int,input().split())\nif(h==0):\nbreak\nfor i in range(h):\nfor j in range(w):\nprint(\"#\",end=\"\")\nprint()\nprint()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02403/s482014715.py",
  "f2_idx": "./Project_CodeNet_Python800/p02403/s482014715.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nif(s ==\"ABC\"):\nprint(\"ARC\")\nelse:\nprint(\"ABC\")",
  "f2": "s=input()\nif s==\"ABC\": print(\"ARC\")\nelse : print(\"ABC\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02687/s781903112.py",
  "f2_idx": "./Project_CodeNet_Python800/p02687/s108977787.py",
  "response": "Yes"
 },
 {
  "f1": "a=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nk=int(input())\nimport itertools\n\ncannot=False\nfor x,y in itertools.combinations([a,b,c,d,e],2):\nif y-x>k:\ncannot=True\nif cannot:\nprint(\":(\")\nelse:\nprint(\"Yay!\")",
  "f2": "a=int(input())\nb=int(input())\nc=int(input())\nd=int(input())\ne=int(input())\nk=int(input())\nimport itertools\n\ncannot=False\nfor x,y in itertools.combinations([a,b,c,d,e],2):\nif y-x>k:\ncannot=True\nif cannot:\nprint(\":(\")\nelse:\nprint(\"Yay!\")",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03075/s925390793.py",
  "f2_idx": "./Project_CodeNet_Python800/p03075/s925390793.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\nA=list(map(int,input().split()))\n\nK=0\nfor a in A:\nwhile a%2==0:\nK+=1\na//=2\nprint(K)",
  "f2": "N=int(input())\nA=list(map(int,input().split()))\n\nK=0\nfor a in A:\nwhile a%2==0:\nK+=1\na//=2\nprint(K)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03325/s059078427.py",
  "f2_idx": "./Project_CodeNet_Python800/p03325/s059078427.py",
  "response": "Yes"
 },
 {
  "f1": "import heapq\n\nn,m = map(int,input().split())\n\nroots = [[] for _ in range(n)]\n\nfor _ in range(m):\na,b = map(int,input().split())\nroots[a-1].append(b-1)\nroots[b-1].append(a-1)\n\ndef dijkstra(edges, s):\nhq = []\nd = [-1] * n\nd[s] = 0\nheapq.heappush(hq, (0, s))\nwhile hq:\nd1, p = heapq.heappop(hq)\nfor i in edges[p]:\nif d[i] == -1 or d[i] > d1 + 1:\nd[i] = d1 + 1\nheapq.heappush(hq, (d1+1, i))\nreturn d\n\nd = dijkstra(roots, 0)\n\nif d[-1] == 2:\nprint('POSSIBLE')\nelse:\nprint('IMPOSSIBLE')",
  "f2": "import heapq\n\nn,m = map(int,input().split())\n\nroots = [[] for _ in range(n)]\n\nfor _ in range(m):\na,b = map(int,input().split())\nroots[a-1].append(b-1)\nroots[b-1].append(a-1)\n\ndef dijkstra(edges, s):\nhq = []\nd = [-1] * n\nd[s] = 0\nheapq.heappush(hq, (0, s))\nwhile hq:\nd1, p = heapq.heappop(hq)\nfor i in edges[p]:\nif d[i] == -1 or d[i] > d1 + 1:\nd[i] = d1 + 1\nheapq.heappush(hq, (d1+1, i))\nreturn d\n\nd = dijkstra(roots, 0)\n\nif d[-1] == 2:\nprint('POSSIBLE')\nelse:\nprint('IMPOSSIBLE')",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p03645/s370706206.py",
  "f2_idx": "./Project_CodeNet_Python800/p03645/s370706206.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nn = int(input())\narray = [[int(i) for i in input().split()] for i in range(2)]\np1 = 0\np2 = 0\np3 = 0\npm = []\nfor i in range(n):\np1 +=math.fabs(array[0][i]-array[1][i])\np2 +=math.fabs(array[0][i]-array[1][i])**2\np3 +=math.fabs(array[0][i]-array[1][i])**3\npm.append(math.fabs(array[0][i]-array[1][i]))\nprint(p1)\nprint(math.sqrt(p2))\nprint(p3**(1/3))\nprint(max(pm))",
  "f2": "import math\nn = int(input())\narray = [[int(i) for i in input().split()] for i in range(2)]\np1 = 0\np2 = 0\np3 = 0\npm = []\nfor i in range(n):\np1 +=math.fabs(array[0][i]-array[1][i])\np2 +=math.fabs(array[0][i]-array[1][i])**2\np3 +=math.fabs(array[0][i]-array[1][i])**3\npm.append(math.fabs(array[0][i]-array[1][i]))\nprint(p1)\nprint(math.sqrt(p2))\nprint(p3**(1/3))\nprint(max(pm))",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02382/s854471980.py",
  "f2_idx": "./Project_CodeNet_Python800/p02382/s854471980.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nS = input()\ns = [ \"P\" if i ==\"P\" else \"D\"   for i in S]\nprint(\"\".join(s))\nresolve()",
  "f2": "def resolve():\nS = input()\ns = [ \"P\" if i ==\"P\" else \"D\"   for i in S]\nprint(\"\".join(s))\nresolve()",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02664/s991265447.py",
  "f2_idx": "./Project_CodeNet_Python800/p02664/s991265447.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nx = list(map(int,input().split()))\nc = 0\nfor i in range(n-1):\nfor j in range(i+1,n):\nc+=x[i]*x[j]\nprint(c)",
  "f2": "n = int(input())\nx = list(map(int,input().split()))\nc = 0\nfor i in range(n-1):\nfor j in range(i+1,n):\nc+=x[i]*x[j]\nprint(c)",
  "sim": 1.0,
  "type": "T2",
  "f1_idx": "./Project_CodeNet_Python800/p02886/s921343269.py",
  "f2_idx": "./Project_CodeNet_Python800/p02886/s921343269.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(raw_input())\n\nfor i in range(n):\na = map(int,raw_input().split())\na.sort()\nif (a[0]**2 + a[1]**2) == a[2]**2:\nprint \"YES\"\nelse:\nprint \"NO\"",
  "f2": "count = int(input())\nfor i in range(count):\na = map(int,raw_input().split())\na.sort()\nif a[0]**2+a[1]**2  == a[2]**2: print \"YES\"\nelse: print \"NO\"",
  "sim": 0.90625,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p00003/s297657178.py",
  "f2_idx": "./Project_CodeNet_Python800/p00003/s213807205.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c = map(int, input().split())\n\nprint(\"YES\") if b == (a+c)/2 else print(\"NO\")",
  "f2": "a, b, c = map(int, input().split())\nif (a+c)/2 == b:\nprint(\"YES\")\nelse:\nprint(\"NO\")",
  "sim": 0.9545454545454546,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03759/s200102884.py",
  "f2_idx": "./Project_CodeNet_Python800/p03759/s360855566.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na, b = map(int, input().split())\np = list(map(int, input().split()))\n\ncnt = [0]*3\n\nfor pp in p:\nif pp <= a: cnt[0] += 1\nelif pp <= b: cnt[1] += 1\nelse: cnt[2] += 1\nprint(min(cnt))",
  "f2": "n = int(input())\na,b = map(int,input().split())\np = list(map(int,input().split()))\n\ncnt = [0] * 3\nfor pi in p:\nif(pi <= a):\ncnt[0] += 1\nelif(pi > b):\ncnt[2] += 1\nelse:\ncnt[1] += 1\n\nprint(min(cnt))",
  "sim": 0.9142857142857143,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03156/s332216644.py",
  "f2_idx": "./Project_CodeNet_Python800/p03156/s423664401.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nx = input()\nx_popcnt = x.count('1')\none_popcnt = x_popcnt - 1\nzero_popcnt = x_popcnt + 1\n\none_mod = 0\nzero_mod = 0\nfor b in x:\nif one_popcnt != 0:\none_mod = (one_mod*2 + int(b)) % one_popcnt\nzero_mod = (zero_mod*2 + int(b)) % zero_popcnt\n\nf = [0]*220000\npopcnt = [0]*220000\nfor i in range(1, 220000):\npopcnt[i] = popcnt[i//2] + i % 2\nf[i] = f[i % popcnt[i]] + 1\n\nfor i in range(n-1, -1, -1):\nif x[n-1-i] == '1':\nif one_popcnt != 0:\nnxt = one_mod\nnxt -= pow(2, i, one_popcnt)\nnxt %= one_popcnt\nprint(f[nxt]+1)\nelse:\nprint(0)\nif x[n-1-i] == '0':\nnxt = zero_mod\nnxt += pow(2, i, zero_popcnt)\nnxt %= zero_popcnt\nprint(f[nxt]+1)",
  "f2": "n = int(input())\nx = input()\nx_popcnt = x.count('1')\none_popcnt = x_popcnt - 1\nzero_popcnt = x_popcnt + 1\n\none_mod = 0\nzero_mod = 0\nfor b in x:\nif one_popcnt != 0:\none_mod = (one_mod*2 + int(b)) % one_popcnt\nzero_mod = (zero_mod*2 + int(b)) % zero_popcnt\n\nf = [0]*220000\npopcnt = [0]*220000\nfor i in range(1, 220000):\npopcnt[i] = popcnt[i//2] + i % 2\nf[i] = f[i % popcnt[i]] + 1\n\nonepow2 = [1]*220000\nif one_popcnt != 0:\nfor i in range(1, 220000):\nonepow2[i] = 2*onepow2[i-1] % one_popcnt\nzeropow2 = [1]*220000\nfor i in range(1, 220000):\nzeropow2[i] = 2*zeropow2[i-1] % zero_popcnt\nfor i in range(n-1, -1, -1):\nif x[n-1-i] == '1':\nif one_popcnt != 0:\nnxt = one_mod\nnxt -= onepow2[i]\nnxt %= one_popcnt\nprint(f[nxt]+1)\nelse:\nprint(0)\nif x[n-1-i] == '0':\nnxt = zero_mod\nnxt += zeropow2[i]\nnxt %= zero_popcnt\nprint(f[nxt]+1)",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02609/s170473910.py",
  "f2_idx": "./Project_CodeNet_Python800/p02609/s712147268.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nif a<=8 and b<=8: print(\"Yay!\")\nelse: print(\":(\")",
  "f2": "a,b = map(int,input().split())\nprint(\"Yay!\" if a <= 8 and b <= 8 else \":(\")",
  "sim": 0.95,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03323/s904926219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03323/s446506481.py",
  "response": "Yes"
 },
 {
  "f1": "A,B,C=map(int,input().split())\nprint(C-(A-B) if A-B<=C else 0)",
  "f2": "A,B,C=map(int,input().split())\nx=A-B\nif x<=C:\nprint(C-x)\nelse:\nprint(0)",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02951/s211234758.py",
  "f2_idx": "./Project_CodeNet_Python800/p02951/s502708787.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A,B,C = map(int,input().split())\n\nif A == B:\nif A != C:\nprint(\"Yes\")\nelse:\nprint(\"No\")\nelse:\nif B == C or A == C:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.9545454545454546,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s169164746.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = input().split()\nif x == y:\nprint(\"=\")\nelif x < y:\nprint(\"<\")\nelif x > y:\nprint(\">\")",
  "f2": "x,y=input().split()\nif x<y:\nprint(\"<\")\nelif x>y:\nprint(\">\")\nelse:\nprint(\"=\")",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03547/s655314312.py",
  "f2_idx": "./Project_CodeNet_Python800/p03547/s237781111.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\np = np.pi\nr = int(input())\nprint(2*p*r)",
  "f2": "import numpy as np\nr=int(input())\nprint(2*np.pi*r)",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02705/s066541702.py",
  "f2_idx": "./Project_CodeNet_Python800/p02705/s500141185.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na, b = map(int, input().split())\nans = math.ceil((a + b) / 2)\nprint(ans)",
  "f2": "from math import ceil\n\na, b = map(int, input().split())\n\nx = (a+b)/2\nans = ceil(x)\nprint(ans)",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03485/s493416360.py",
  "f2_idx": "./Project_CodeNet_Python800/p03485/s389641031.py",
  "response": "Yes"
 },
 {
  "f1": "a=list(map(int,input().split()))\nif a[0]==a[1] and a[1]==a[2]:\nprint('Yes')\nelse:\nprint('No')",
  "f2": "#!/usr/bin/env python3\n\na = []\n\na = list(map(int, input().split()))\n\nif a[0] == a[1] and a[1] == a[2]:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 0.96,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03079/s788345731.py",
  "f2_idx": "./Project_CodeNet_Python800/p03079/s566376356.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A,B,C = map(int,input().split())\n\nif (A==B) and A !=C:\nprint(\"Yes\")\nelif (B==C ) and B !=A:\nprint(\"Yes\")\nelif (C==A ) and C !=B:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s105987283.py",
  "response": "Yes"
 },
 {
  "f1": "number = raw_input().split(\" \")\na = int(number[0])\nb = int(number[1])\nc = int(number[2])\nif a < b < c:\nprint \"Yes\"\nelse:\nprint \"No\"",
  "f2": "input = raw_input().split(\" \")\na = int(input[0])\nb = int(input[1])\nc = int(input[2])\n\nif a < b:\nif b < c:\nprint \"Yes\"\nelse:\nprint \"No\"\nelse:\nprint \"No\"",
  "sim": 0.92,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02392/s815387107.py",
  "f2_idx": "./Project_CodeNet_Python800/p02392/s392106264.py",
  "response": "Yes"
 },
 {
  "f1": "n,k = map(int,input().split())\nprint(min(n%k,-((n%k)-k)))",
  "f2": "n, k = map(int, input().split())\nx = n % k\nx = min(x, k - x)\nn = x\nprint(n)",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02719/s413819466.py",
  "f2_idx": "./Project_CodeNet_Python800/p02719/s975330828.py",
  "response": "Yes"
 },
 {
  "f1": "d = int(input())\nif d == 22:print(\"Christmas Eve Eve Eve\")\nelif d == 23:print(\"Christmas Eve Eve\")\nelif d == 24:print(\"Christmas Eve\")\nelif d == 25:print(\"Christmas\")",
  "f2": "d = int(input())\nif d==25:\nprint(\"Christmas\")\nelif d==24:\nprint(\"Christmas Eve\")\nelif d==23:\nprint(\"Christmas Eve Eve\")\nelif d==22:\nprint(\"Christmas Eve Eve Eve\")\nelse:\npass",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03206/s703928071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03206/s936323666.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,d=map(int,input().split())\nprint('Left' if a+b>c+d else 'Right' if a+b<c+d else 'Balanced')",
  "f2": "a, b, c, d = map(int, input().split())\nab = a + b\ncd = c + d\nprint('Left' if ab > cd else 'Right' if ab < cd else 'Balanced')",
  "sim": 0.9166666666666666,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03477/s917138107.py",
  "f2_idx": "./Project_CodeNet_Python800/p03477/s543736900.py",
  "response": "Yes"
 },
 {
  "f1": "A, B = map(int, input().split())\nif (A >= 13):\nprint(B)\nelif (A <= 5):\nprint(0)\nelse:\nprint(int(B/2))",
  "f2": "A, B = map(int, input().split())\n\nif A >= 13:\nprint(B)\nelif A <= 5:\nprint(0)\nelse:\nprint(B // 2)",
  "sim": 0.9166666666666666,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03035/s644803300.py",
  "f2_idx": "./Project_CodeNet_Python800/p03035/s806780213.py",
  "response": "Yes"
 },
 {
  "f1": "b = input()\n\nif b == ('A'):\nprint('T')\n\nelif b == ('C'):\nprint('G')\n\nelif b == ('G'):\nprint('C')\n\nelif b == ('T'):\nprint('A')\n\nelse:\nprint('入力に誤りがあります。A,C,G,Tのいずれかを入力して下さい。')",
  "f2": "b = input()\n\nif b == 'A': print('T')\nelif b == 'T': print('A')\nelif b == 'C': print('G')\nelse: print('C')",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03085/s524347030.py",
  "f2_idx": "./Project_CodeNet_Python800/p03085/s652297348.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A, B, C = map(int,input().split())\nif A == B and A != C:\nprint(\"Yes\")\nelif A == C and A != B:\nprint(\"Yes\")\nelif C == B and A != C:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s855137688.py",
  "response": "Yes"
 },
 {
  "f1": "a,b=map(int,input().split())\nk=b-a\nn=k*(k+1)//2\ns=n-b\nprint(s)",
  "f2": "a,b=map(int,input().split())\nk=b-a-1\nprint(k*(k+1)//2-a)",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03328/s494405635.py",
  "f2_idx": "./Project_CodeNet_Python800/p03328/s305563275.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=list(map(int,input().split()))\nl=[0]*n\nfor i in range(n):\ncnt=0\nwhile a[i]%2==0:\na[i]/=2\ncnt+=1\nl[i]+=cnt\nprint(min(l))",
  "f2": "n = int(input())\na = list(map(int, input().split()))\nl = [0 for i in range(n)]\nfor i in range(len(a)):\nwhile a[i] % 2 == 0:\na[i] /= 2\nl[i] += 1\nprint(min(l))",
  "sim": 0.9090909090909091,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03494/s642429606.py",
  "f2_idx": "./Project_CodeNet_Python800/p03494/s875594772.py",
  "response": "Yes"
 },
 {
  "f1": "H,W,A,B = map(int,input().split())\n\nfor i in range(B):\nprint('0'*A + '1'*(W-A))\nfor i in range(H-B):\nprint('1'*A + '0'*(W-A))",
  "f2": "H, W, A, B = map(int, input().split())\n\na = '0' * A + '1' * (W - A)\nb = '1' * A + '0' * (W - A)\n\nfor i in range(B):\nprint(a)\nfor i in range(H-B):\nprint(b)",
  "sim": 0.9230769230769231,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02903/s242585746.py",
  "f2_idx": "./Project_CodeNet_Python800/p02903/s601118279.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c=map(int,input().split())\nif (4*a*b)<(c-a-b)**2 and c-a-b>0: print('Yes')\nelse: print('No')",
  "f2": "a,b,c = map(int,input().split())\nprint('Yes' if c-a-b>0 and 4*a*b<c**2+a**2+b**2-2*a*c-2*b*c+2*a*b else 'No')",
  "sim": 0.9285714285714286,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02743/s507766505.py",
  "f2_idx": "./Project_CodeNet_Python800/p02743/s562483123.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nprint((b-1+(a-1)-1)//(a-1))",
  "f2": "a, b = map(int, input().split())\nprint(-(-(b-1)//(a-1)))",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02922/s908977652.py",
  "f2_idx": "./Project_CodeNet_Python800/p02922/s478107993.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A,B,C=map(int, input().split())\nif A==B and A!=C:print(\"Yes\")\n\nelif A==C and B!=C:print(\"Yes\")\n\nelif C==B and A!=C:print(\"Yes\")\n\nelse:print(\"No\")",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s839481939.py",
  "response": "Yes"
 },
 {
  "f1": "x,y = map(int,input().split())\n\ns = x + y//2\n\nprint(s)",
  "f2": "x,y=map(int,input().split())\n\nprint(x+y//2)",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03219/s577167539.py",
  "f2_idx": "./Project_CodeNet_Python800/p03219/s746924167.py",
  "response": "Yes"
 },
 {
  "f1": "k, a, b = map(int, input().split())\n\nif b-a <= 2 or k < a-1:\nprint(k+1)\n\nelse:\nans = ((k-(a-1))//2)*(b-a) + a +(k-(a-1))%2\nprint(ans)",
  "f2": "k, a, b = map(int, input().split())\n\nif b - 2 <= a or k < a + 1:\nprint(k + 1)\nelse:\nr = k - (a - 1)\nprint((r // 2 - 1) * (b - a) + b + r % 2)",
  "sim": 0.9285714285714286,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03131/s676706208.py",
  "f2_idx": "./Project_CodeNet_Python800/p03131/s390523127.py",
  "response": "No"
 },
 {
  "f1": "k = int(input())\na = list(map(int,input().split()))\na = a[::-1]\nansmin = 2\nansmax = 2\nfor x in a:\nansmin = x*((ansmin+x-1)//x)\nansmax = x*(ansmax//x)+x-1\nif ansmin>ansmax:\nprint(-1)\nexit()\nprint(ansmin,ansmax)",
  "f2": "k = int(input())\na = list(map(int,input().split()))\na = a[::-1]\nansmin = 2\nansmax = 2\nfor i in range(k):\nx = a[i]\nansmin = x*((ansmin+x-1)//x)\nansmax = x*(ansmax//x)+x-1\nif ansmin>ansmax:\nprint(-1)\nexit()\nprint(ansmin,ansmax)",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03464/s506329486.py",
  "f2_idx": "./Project_CodeNet_Python800/p03464/s249426243.py",
  "response": "Yes"
 },
 {
  "f1": "while True:\nm,f,r = [int(x) for x in input().split()]\nif (m,f,r)==(-1,-1,-1): break\ns_mf = m + f\nif   m < 0 or f < 0: mark = 'F'\nelif s_mf <  30:     mark = 'F'\nelif s_mf >= 80:     mark = 'A'\nelif s_mf >= 65:     mark = 'B'\nelif s_mf >= 50:     mark = 'C'\nelif r    >= 50:     mark = 'C'\nelse:                mark = 'D'\nprint(mark)",
  "f2": "while True:\nm,f,r = [int(x) for x in input().split()]\nif (m,f,r)==(-1,-1,-1): break\ns_mf = m + f\nif   m < 0 or f < 0: print('F')\nelif s_mf <  30:     print('F')\nelif s_mf >= 80:     print('A')\nelif s_mf >= 65:     print('B')\nelif s_mf >= 50:     print('C')\nelif r    >= 50:     print('C')\nelse:                print('D')",
  "sim": 0.9767441860465116,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02411/s353357490.py",
  "f2_idx": "./Project_CodeNet_Python800/p02411/s018053434.py",
  "response": "Yes"
 },
 {
  "f1": "A,B=map(int,input().split())\nif (A+B) % 2 == 1:print(\"IMPOSSIBLE\")\nelse:print((A+B)//2)",
  "f2": "A, B = map(int, input().split())\nif (A - B) % 2 == 1:\nprint(\"IMPOSSIBLE\")\nelse:\nprint((A+B)//2)",
  "sim": 0.9565217391304348,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02957/s796407054.py",
  "f2_idx": "./Project_CodeNet_Python800/p02957/s223389364.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(raw_input())\n\nfor i in range(n):\na = map(int,raw_input().split())\na.sort()\nif (a[0]**2 + a[1]**2) == a[2]**2:\nprint \"YES\"\nelse:\nprint \"NO\"",
  "f2": "n=input()\nfor i in range(n):\nl=map(int,raw_input().split())\nl.sort()\nif l[0]**2+l[1]**2==l[2]**2:print\"YES\"\nelse:print\"NO\"",
  "sim": 0.90625,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p00003/s297657178.py",
  "f2_idx": "./Project_CodeNet_Python800/p00003/s090464863.py",
  "response": "Yes"
 },
 {
  "f1": "N,R=list(map(int, input().split()))\nif N>=10:\nprint(R)\nelse:\nprint(R+(10-N)*100)",
  "f2": "N,R=input().split()\n\nN=int(N)\nR=int(R)\n\nif N>=10:\nprint (R)\nelse :\nprint(R+(100*(10-N)))",
  "sim": 0.9090909090909091,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02765/s507063817.py",
  "f2_idx": "./Project_CodeNet_Python800/p02765/s787397652.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\n\ncnt = a - (1 if a > b else 0)\n\nprint(cnt)",
  "f2": "a, b = map(int, input().split())\ncnt = 0\n\nif a > b :\nprint(a-1)\nelse :\nprint(a)",
  "sim": 0.95,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03359/s793990914.py",
  "f2_idx": "./Project_CodeNet_Python800/p03359/s844454864.py",
  "response": "Yes"
 },
 {
  "f1": "n = set(map(int,input().split()))\nif n == set([1,4,7,9]):\nprint(\"YES\")\nelse:\nprint(\"NO\")",
  "f2": "n = map(int, input().split())\nif [1, 4, 7, 9] == sorted(n):\nprint(\"YES\")\nelse:\nprint(\"NO\")",
  "sim": 0.92,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03149/s530406242.py",
  "f2_idx": "./Project_CodeNet_Python800/p03149/s617970067.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nv = list(map(int, input().split()))\n\nV = sorted(v)\n\nans = V[0]\n\nfor i in range(N-1):\nans = (ans + V[i+1]) /2\n\nprint(ans)\n",
  "f2": "N=int(input())\nv=sorted(list(map(int,input().split())))\ns=v[0]\nfor i in range(N-1):\ns=(s+v[i+1])/2\nprint(s)\n",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02935/s293661137.py",
  "f2_idx": "./Project_CodeNet_Python800/p02935/s253431003.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nif a<=8 and b<=8: print(\"Yay!\")\nelse: print(\":(\")",
  "f2": "a,b=map(int,input().split())\nprint(\"Yay!\" if (a<=8 and b<=8) else \":(\")",
  "sim": 0.95,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03323/s904926219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03323/s747856853.py",
  "response": "Yes"
 },
 {
  "f1": "# https://atcoder.jp/contests/abc091/tasks/abc091_a\na, b, c = [int(x) for x in input().split()]\nprint(\"Yes\") if a + b >= c else print(\"No\")",
  "f2": "a, b, c = [int(x) for x in input().split()]\nprint(\"Yes\" if a + b >= c else \"No\")",
  "sim": 0.9583333333333334,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03407/s346115026.py",
  "f2_idx": "./Project_CodeNet_Python800/p03407/s348769377.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nprint((b-1+(a-1)-1)//(a-1))",
  "f2": "a,b=map(int,input().split())\nprint((b+a-3)//(a-1))",
  "sim": 0.9411764705882353,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02922/s908977652.py",
  "f2_idx": "./Project_CodeNet_Python800/p02922/s685629972.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nimport sys\ninput = sys.stdin.buffer.readline\nH, W = (int(i) for i in input().split())\nA = [[int(i) for i in input().split()] for j in range(H)]\nans = []\nfor h in range(H):\nfor w in range(W):\nif A[h][w] % 2 == 1:\nif w != W-1:\nA[h][w] -= 1\nA[h][w+1] += 1\nans.append((h+1, w+1, h+1, w+2))\nelif h != H-1:\nA[h][w] -= 1\nA[h+1][w] += 1\nans.append((h+1, w+1, h+2, w+1))\nelse:\nif h != 0 and A[h-1][w] % 2 == 1:\nA[h-1][w] += 1\nA[h][w] -= 1\nans.append((h+1, w+1, h, w+1))\nelif w != 0 and A[h][w-1] % 2 == 1:\nA[h][w-1] += 1\nA[h][w] -= 1\nans.append((h+1, w+1, h+1, w))\n\nprint(len(ans))\nfor a in ans:\nprint(*a)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "def main():\nimport sys\ninput = sys.stdin.buffer.readline\nH, W = (int(i) for i in input().split())\nA = [[int(i) for i in input().split()] for j in range(H)]\nans = []\nfor h in range(H):\nfor w in range(W):\nif A[h][w] % 2 == 1:\nif w != W-1:\nA[h][w] -= 1\nA[h][w+1] += 1\nans.append((h+1, w+1, h+1, w+2))\nelif h != H-1:\nA[h][w] -= 1\nA[h+1][w] += 1\nans.append((h+1, w+1, h+2, w+1))\n\nprint(len(ans))\nfor a in ans:\nprint(*a)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.94,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03263/s150033960.py",
  "f2_idx": "./Project_CodeNet_Python800/p03263/s261545889.py",
  "response": "Yes"
 },
 {
  "f1": "S, W = map(int, input().split())\nO = 'unsafe' if W >= S else 'safe'\nprint(O)",
  "f2": "S, W = map(int, input().split())\nprint('unsafe' if W >= S else 'safe')",
  "sim": 0.9444444444444444,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02699/s582526681.py",
  "f2_idx": "./Project_CodeNet_Python800/p02699/s931576862.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nimport math\nif int(math.floor((math.ceil(N/1.08) * 1.08)))==N:\nprint(int(math.ceil(N/1.08)))\nelse:\nprint(\":(\")",
  "f2": "import math\n\nN = int(input())\n\nlower = N / 1.08\n\nvl = math.ceil(lower)\n\nif math.floor(vl * 1.08) == N:\nprint(vl)\nelse:\nprint(\":(\")",
  "sim": 0.9090909090909091,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02842/s749412273.py",
  "f2_idx": "./Project_CodeNet_Python800/p02842/s040002991.py",
  "response": "Yes"
 },
 {
  "f1": "A, B = input().split()\nA = int(A)\nB = int(B)\nif A*B%2==0:\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A,B=map(int,input().split())\nif(A*B%2==0):print(\"No\")\nelse:print(\"Yes\")",
  "sim": 0.9545454545454546,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03260/s911713029.py",
  "f2_idx": "./Project_CodeNet_Python800/p03260/s701230751.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,k = map(int,input().split())\nif k < a:\nans = k\nelif k < a + b:\nans = a\nelse:\nans = a - (k - a - b)\nprint(ans)",
  "f2": "a,b,c,k = map(int,input().split())\nif k <= a:\nprint(k)\nelif a < k <= (a+b):\nprint(a)\nelse:\nprint(a-(k-a-b))",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02682/s374204518.py",
  "f2_idx": "./Project_CodeNet_Python800/p02682/s351021129.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,d=map(int,input().split())\nprint('Left' if a+b>c+d else 'Right' if a+b<c+d else 'Balanced')",
  "f2": "a,b,c,d=map(int,input().split())\nl=a+b\nr=c+d\nprint('Left'if l>r else'Right'if l<r else'Balanced')",
  "sim": 0.9166666666666666,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03477/s917138107.py",
  "f2_idx": "./Project_CodeNet_Python800/p03477/s585272240.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np = [[]] * m\nx = [[]] * m\nans = 0\nfor i in range(n):\nans += t[i]\nfor i in range(m):\np[i], x[i] = map(int, input().split())\nprint(ans - t[p[i]-1] + x[i])",
  "f2": "n=int(input())\nt=list(map(int,input().split()))\nm=int(input())\nans=[0]*m\nfor i in range(m):\np,x=map(int,input().split())\nans[i]=sum(t)-t[p-1]+x\nfor i in range(m):\nprint(ans[i])",
  "sim": 0.9354838709677419,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03845/s889522288.py",
  "f2_idx": "./Project_CodeNet_Python800/p03845/s458078237.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A,B,C=list(input().split())\nA=list(A)\nB=list(B)\nC=list(C)\nif A[-1]==B[0] and B[-1]==C[0]:\nprint('YES')\nelse:\nprint('NO')",
  "sim": 0.92,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s653080952.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nx, a, b = map(int, input().split())\nif abs(x-a) < abs(x-b):\nprint(\"A\")\nelse:\nprint(\"B\")\n\n\nmain()",
  "f2": "x, a, b = map(int,input().split())\nif abs(x - a) < abs(x - b):\nprint(\"A\")\nelse: print(\"B\")",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03623/s261905070.py",
  "f2_idx": "./Project_CodeNet_Python800/p03623/s625153726.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nimport math\nif int(math.floor((math.ceil(N/1.08) * 1.08)))==N:\nprint(int(math.ceil(N/1.08)))\nelse:\nprint(\":(\")",
  "f2": "import math\nN=int(input())\nx=math.ceil(N/1.08)\nif math.floor(x*1.08) == N:\nprint(x)\nelse:\nprint(\":(\")",
  "sim": 0.9523809523809523,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02842/s749412273.py",
  "f2_idx": "./Project_CodeNet_Python800/p02842/s485825306.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\na = list(map(int, input().split()))\nsunuke = 0\narai = sum(a)\np = []\nfor i in range(len(a)-1):\nsunuke += a[i]\narai -= a[i]\np.append(abs(sunuke - arai))\n\nprint(min(p))",
  "f2": "N = int(input())\na = list(map(int,input().split()))\nsunuke,arai = a[0],sum(a)-a[0]\nA = [abs(sunuke-arai)]\nfor i in range(1,N-1):\nsunuke += a[i]\narai -= a[i]\nA.append(abs(sunuke - arai))\nprint(min(A))",
  "sim": 0.9117647058823529,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03659/s078585307.py",
  "f2_idx": "./Project_CodeNet_Python800/p03659/s683187148.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=map(int, input().split())\nprint(sum(a) - n)",
  "f2": "n=int(input())\na=list(map(int,input().split()))\n\nprint(sum(a)-n)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03294/s523968840.py",
  "f2_idx": "./Project_CodeNet_Python800/p03294/s608286837.py",
  "response": "Yes"
 },
 {
  "f1": "S=input()\nN=len(S)+1\nL=[0]*N\nR=[0]*N\nans=[0]*N\nfor i in range(1,N):\nif S[i-1]=='<':\nL[i]=L[i-1]+1\nif S[N-i-1]=='>':\nR[N-i-1]=R[N-i]+1\nfor i in range(N):\nans[i]=max(L[i], R[i])\nprint(sum(ans))",
  "f2": "S = input()\nans = [0] * (len(S) + 1)\nfor i in range(len(S)):\nif S[i] == '<':\nans[i + 1] = ans[i] + 1\nfor i in range(len(S) - 1, -1, -1):\nif S[i] == '>':\nans[i] = max(ans[i], ans[i + 1] + 1)\nprint(sum(ans))",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02873/s886747307.py",
  "f2_idx": "./Project_CodeNet_Python800/p02873/s273663010.py",
  "response": "Yes"
 },
 {
  "f1": "# | Its_Rashid | #\na = int (input())\nprint(a) if a % 2 == 0 else print(a * 2)",
  "f2": "a=int(input())\nprint(a if (a%2==0) else a*2)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03307/s317859431.py",
  "f2_idx": "./Project_CodeNet_Python800/p03307/s038423442.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nn,k=map(int,input().split());print(math.ceil((n-1)/(k-1)))",
  "f2": "import math\nn, k = map(int,input().split())\ninput()\nprint(math.ceil((n-1)/(k-1)))",
  "sim": 0.9473684210526315,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03317/s386569862.py",
  "f2_idx": "./Project_CodeNet_Python800/p03317/s707451446.py",
  "response": "Yes"
 },
 {
  "f1": "S = input()\nprint(chr(ord(S) + 1))",
  "f2": "S =input()\nans = chr(ord(S) + 1)\nprint(ans)",
  "sim": 0.9090909090909091,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02801/s476135348.py",
  "f2_idx": "./Project_CodeNet_Python800/p02801/s148599357.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na, b = map(int, input().split())\nans = math.ceil((a + b) / 2)\nprint(ans)",
  "f2": "a,b=map(int,input().split())\nimport math\nprint(math.ceil((a+b)/2))",
  "sim": 0.9473684210526315,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03485/s493416360.py",
  "f2_idx": "./Project_CodeNet_Python800/p03485/s640944441.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nd,x = map(int,input().split())\na = [int(input()) for i in range(n)]\nans = x\nfor i in range(n):\nj = 0\nwhile j*a[i]+1 <= d:\nans += 1\nj += 1\nprint(ans)",
  "f2": "n = int(input())\nd,x = map(int,input().split())\nans = 0\nfor i in range(n):\na = int(input())\nj = 0\nwhile a*j + 1 <= d:\nans += 1\nj += 1\n\nprint(ans+x)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03400/s927041417.py",
  "f2_idx": "./Project_CodeNet_Python800/p03400/s976828979.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A,B,C = input().split()\n\nprint('YES' if A[-1] == B[0] and B[-1] == C[0] else 'NO')",
  "sim": 0.9166666666666666,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s437376805.py",
  "response": "Yes"
 },
 {
  "f1": "while True:\nh,w=map(int,input().split())\nif(h==0):\nbreak\nfor i in range(h):\nfor j in range(w):\nprint(\"#\",end=\"\")\nprint()\nprint()",
  "f2": "while True:\nh,w = map(int,input().split())\nif h == 0 and w == 0:\nbreak\nelse:\nfor i in range(h):\nfor j in range(w):\nprint(\"#\",end=\"\")\nprint()\nprint()",
  "sim": 0.9310344827586207,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02403/s482014715.py",
  "f2_idx": "./Project_CodeNet_Python800/p02403/s508095341.py",
  "response": "Yes"
 },
 {
  "f1": "n,k = map(int,input().split())\nprint(min(n%k,-((n%k)-k)))",
  "f2": "n,k=map(int,input().split());print(min(n%k,k-n%k))",
  "sim": 0.9375,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02719/s413819466.py",
  "f2_idx": "./Project_CodeNet_Python800/p02719/s036858969.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nimport math\nif int(math.floor((math.ceil(N/1.08) * 1.08)))==N:\nprint(int(math.ceil(N/1.08)))\nelse:\nprint(\":(\")",
  "f2": "import math\nN=int(input())\nprice=math.ceil(N/1.08)\nprint(price if math.floor(price*1.08)==N else \":(\")",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02842/s749412273.py",
  "f2_idx": "./Project_CodeNet_Python800/p02842/s407841866.py",
  "response": "Yes"
 },
 {
  "f1": "x,y,a,b,c = map(int,input().split())\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\np.sort(reverse = True)\nq.sort(reverse = True)\nr.sort(reverse = True)\np = p[:x]\nq = q[:y]\nl = p + q + r\nl.sort(reverse = True)\nprint(sum(l[:x+y]))",
  "f2": "x,y,a,b,c = map(int, input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse = True)\nq.sort(reverse = True)\nr.sort(reverse = True)\n\np = p[:x]\nq = q[:y]\nr = r[:x+y]\n\nall = p + q + r\nall.sort(reverse = True)\nprint(sum(all[:x+y]))",
  "sim": 0.9310344827586207,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02727/s309609503.py",
  "f2_idx": "./Project_CodeNet_Python800/p02727/s108056940.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,k = map(int,input().split())\nif k < a:\nans = k\nelif k < a + b:\nans = a\nelse:\nans = a - (k - a - b)\nprint(ans)",
  "f2": "a,b,c,k = map(int,input().split())\nif k < a:\nprint(k)\nelif a + b > k:\nprint(a)\nelse:\nprint(a - (k - a - b))",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02682/s374204518.py",
  "f2_idx": "./Project_CodeNet_Python800/p02682/s188490852.py",
  "response": "Yes"
 },
 {
  "f1": "s, t = input().split()\nans = '{}{}'.format(t, s)\nprint(ans)",
  "f2": "s, t = input().split()\n\nprint('{}{}'.format(t, s))",
  "sim": 0.9230769230769231,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02817/s457142664.py",
  "f2_idx": "./Project_CodeNet_Python800/p02817/s091400271.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=map(int, input().split())\nprint(sum(a) - n)",
  "f2": "n = int(input())\n\na = tuple(map(int,input().split()))\nprint(sum(a)-n)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03294/s523968840.py",
  "f2_idx": "./Project_CodeNet_Python800/p03294/s955637420.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na=int(input())\nb=100000\nfor i in range(a):\nb=b*1.05\nb=b/1000\nb=math.ceil(b)\nb=b*1000\nprint(b)",
  "f2": "import math\nN=int(input())\na=100000\nfor i in range(N):\na=a*1.05\na=math.ceil(a/1000)*1000\nprint(a)",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p00007/s204871313.py",
  "f2_idx": "./Project_CodeNet_Python800/p00007/s664821642.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\na=map(int, input().split())\nprint(sum(a) - n)",
  "f2": "n=int(input())\na=map(int,input().split())\nb=sum(a)\nprint(b-n)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03294/s523968840.py",
  "f2_idx": "./Project_CodeNet_Python800/p03294/s469446628.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A,B,C=input().split()\nprint('YES' if (A[-1]==B[0])and(B[-1]==C[0]) else 'NO')",
  "sim": 0.9166666666666666,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s725659242.py",
  "response": "Yes"
 },
 {
  "f1": "a=set(input().split())\nprint(len(a))",
  "f2": "a = list((input().split()))\na = set(a)\na = len(a)\n\nprint(a)",
  "sim": 0.9090909090909091,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03962/s091804018.py",
  "f2_idx": "./Project_CodeNet_Python800/p03962/s230669333.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = input().split()\nif x == y:\nprint(\"=\")\nelif x < y:\nprint(\"<\")\nelif x > y:\nprint(\">\")",
  "f2": "x, y = input().split()\nans = \"=\"\nif x < y:\nans = \"<\"\nelif x > y:\nans = \">\"\nprint(ans)",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03547/s655314312.py",
  "f2_idx": "./Project_CodeNet_Python800/p03547/s446605459.py",
  "response": "Yes"
 },
 {
  "f1": "a, b = map(int, input().split())\nif a < 10 and b < 10:\nprint(a * b)\nelse:\nprint('-1')",
  "f2": "a,b=map(int,input().split())\nif 0<a<10 and 0<b<10:print(a*b)\nelse: print('-1')",
  "sim": 0.9523809523809523,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02879/s383346727.py",
  "f2_idx": "./Project_CodeNet_Python800/p02879/s330430275.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nif a<=8 and b<=8: print(\"Yay!\")\nelse: print(\":(\")",
  "f2": "a,b = map(int, input().split())\nif (a<=8)&(b<=8):\nprint(\"Yay!\")\nelse:\nprint(\":(\")",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03323/s904926219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03323/s273569465.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nif a<=8 and b<=8: print(\"Yay!\")\nelse: print(\":(\")",
  "f2": "a, b = map(int, input().split())\nans = \"Yay!\" if a <= 8 and b <= 8 else \":(\"\nprint(ans)",
  "sim": 0.9047619047619048,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03323/s904926219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03323/s672031467.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\na[i+1] = min(b[i],b[i+1])\n\nprint(sum(a))",
  "f2": "n=int(input())\nsum=0\na=[0]*n\n\nb=list(map(int,input().split()))\na[0]=b[0]\na[n-1]=b[n-2]\nsum=a[0]+a[n-1]\nfor i in range(n-2):\nsum=sum+min(b[i],b[i+1])\nprint(sum)",
  "sim": 0.9333333333333333,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02917/s653861550.py",
  "f2_idx": "./Project_CodeNet_Python800/p02917/s828339693.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\n\ndef powmod(x, y):\nret = 1\nfor _ in range(1, y+1):\nret = ret * x % (10**9+7)\nreturn ret\nans = powmod(10, N) - powmod(9, N)*2 + powmod(8, N)\nprint(ans % (10**9+7))",
  "f2": "N = int(input())\n# x の y 乗を d で割った余りを求める\ndef powmod(x, y, d):\nret = 1\nfor _ in range(1, y+1):\nret = ret * x % d\nreturn ret\nans = powmod(10, N, 10**9+7) - powmod(9, N, 10**9+7)*2 + powmod(8, N, 10**9+7)\n\nprint(ans % (10**9+7))\n\n",
  "sim": 0.9393939393939394,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02554/s105571326.py",
  "f2_idx": "./Project_CodeNet_Python800/p02554/s426540399.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\n\nlucas = (N+2)*[0]\nlucas[0] = 2\nlucas[1] = 1\nfor i in range(2,N+2):\nlucas[i] = lucas[i-1]+lucas[i-2]\n\nprint(lucas[N])",
  "f2": "N = int(input())\nL = [0] * (N+1)\nL[0] = 2\nL[1] = 1\nfor i in range(2,N+1):\nL[i] = L[i-1] + L[i-2]\nprint(L[N])",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03544/s646363318.py",
  "f2_idx": "./Project_CodeNet_Python800/p03544/s720168843.py",
  "response": "Yes"
 },
 {
  "f1": "x,y,a,b,c = map(int,input().split())\np = list(map(int,input().split()))\nq = list(map(int,input().split()))\nr = list(map(int,input().split()))\np.sort(reverse = True)\nq.sort(reverse = True)\nr.sort(reverse = True)\np = p[:x]\nq = q[:y]\nl = p + q + r\nl.sort(reverse = True)\nprint(sum(l[:x+y]))",
  "f2": "x, y, a, b, c = map(int,input().split())\np = list(map(int, input().split()))\nq = list(map(int, input().split()))\nr = list(map(int, input().split()))\n\np.sort(reverse=True)\nq.sort(reverse=True)\nr.sort(reverse=True)\n\npqr = p[:x] + q[:y] + r\npqr.sort(reverse=True)\nprint(sum(pqr[:x+y]))",
  "sim": 0.9310344827586207,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02727/s309609503.py",
  "f2_idx": "./Project_CodeNet_Python800/p02727/s969475600.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A, B, C = input().split()\n\nif A[-1] == B[0] and B[-1] == C[0]:\nprint('YES')\nelse:\nprint('NO')",
  "sim": 0.9583333333333334,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s389814439.py",
  "response": "Yes"
 },
 {
  "f1": "a,b=map(int,input().split())\nif a<b:\nans=str(a)*b\nelse:\nans=str(b)*a\nprint(ans)",
  "f2": "a, b = map(int, input().split())\n\nif str(a)*b < str(b)*a:\nprint(str(a)*b)\nelse:\nprint(str(b)*a)",
  "sim": 0.9473684210526315,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02790/s169424628.py",
  "f2_idx": "./Project_CodeNet_Python800/p02790/s954882200.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,d=map(int,input().split())\nprint('Left' if a+b>c+d else 'Right' if a+b<c+d else 'Balanced')",
  "f2": "a,b,c,d = map(int, input().split())\nprint('Left' if (a+b) > (c+d) else 'Balanced' if (a+b) == (c+d) else 'Right')",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03477/s917138107.py",
  "f2_idx": "./Project_CodeNet_Python800/p03477/s311509987.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A, B, C = list(input().split())\n\nif A[-1] == B[0] and B[-1] == C[0]:\nprint('YES')\nelse:\nprint('NO')",
  "sim": 0.92,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s241354043.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A, B, C = map(int, input().split())\n\nif (A == B) and (B == C) and (C == A):\nprint(\"No\")\nelif (A == B) or (B == C) or (C == A):\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s836665122.py",
  "response": "Yes"
 },
 {
  "f1": "N,R=list(map(int, input().split()))\nif N>=10:\nprint(R)\nelse:\nprint(R+(10-N)*100)",
  "f2": "N, R = map(int, input().split())\n\nif N >= 10:\nprint(R)\nelse:\ntotal = 100 * (10 - N)\ntotal = R + total\nprint(total)",
  "sim": 0.9130434782608695,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02765/s507063817.py",
  "f2_idx": "./Project_CodeNet_Python800/p02765/s553294316.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nints = map(int, input().split())\n\nfor i in ints:\nif i % 2 == 0:\nif i % 3 != 0 and i % 5 != 0:\nprint('DENIED')\nexit()\n\nprint('APPROVED')",
  "f2": "N = int(input())\nA = list(map(int, input().split()))\nfor i in A:\nif  i % 2 ==0:\nif (i % 3 != 0) and ( i % 5 != 0):\nprint('DENIED')\nexit()\nprint ('APPROVED')",
  "sim": 0.9,
  "type": "VST3",
  "f1_idx": "./Project_CodeNet_Python800/p02772/s156706982.py",
  "f2_idx": "./Project_CodeNet_Python800/p02772/s936894886.py",
  "response": "Yes"
 },
 {
  "f1": "N,R=list(map(int, input().split()))\nif N>=10:\nprint(R)\nelse:\nprint(R+(10-N)*100)",
  "f2": "def main():\nN,R = map(int, input().split())\nif N>=10:\nprint(R)\nelse:\nprint(R+100*(10-N))\n\nmain()",
  "sim": 0.875,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02765/s507063817.py",
  "f2_idx": "./Project_CodeNet_Python800/p02765/s223582185.py",
  "response": "Yes"
 },
 {
  "f1": "import math\n\na = int(input())\nb = int(input())\nh = int(input())\n\nr = ((a + b) * h) / 2\nprint(int(r))",
  "f2": "a = int(input())\nb = int(input())\nh = int(input())\ntrapezoid = (a + b) * h / 2\nprint(int(trapezoid))",
  "sim": 0.7647058823529411,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03997/s291607030.py",
  "f2_idx": "./Project_CodeNet_Python800/p03997/s085800722.py",
  "response": "Yes"
 },
 {
  "f1": "from math import *\nn,m=map(int,input().split())\nif(n==1 or m==1):\nprint(1)\nelse:\nprint(ceil((n*m)/2))",
  "f2": "import math\n\nH, W = map(int, input().split())\n\nprint(1 if (H == 1 or W == 1) else math.ceil(W*H/2))",
  "sim": 0.7777777777777778,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02742/s965203099.py",
  "f2_idx": "./Project_CodeNet_Python800/p02742/s834366559.py",
  "response": "Yes"
 },
 {
  "f1": "# | Its_Rashid | #\na = int (input())\nprint(a) if a % 2 == 0 else print(a * 2)",
  "f2": "N = int(input())\n\nprint(2 * N if (N % 2 != 0) else N)\n",
  "sim": 0.7058823529411765,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03307/s317859431.py",
  "f2_idx": "./Project_CodeNet_Python800/p03307/s157283590.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, K = [int(n) for n in input().split()]\nm = min(A, B)\nans = []\nfor i in range(1, m+1):\nif A%i==0 and B%i==0:\nans.append(i)\nprint(sorted(ans, reverse=True)[K-1])",
  "f2": "a, b, k = map(int, input().split())\nl = []\n\nfor i in range(1, min(a, b)+1):\nif a % i == 0 and b % i == 0:\nl.append(i)\nprint(sorted(l, reverse=True)[k-1])\n\n\n\n",
  "sim": 0.725,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03106/s088027336.py",
  "f2_idx": "./Project_CodeNet_Python800/p03106/s126608229.py",
  "response": "Yes"
 },
 {
  "f1": "A,B=map(int,input().split())\nif (A+B) % 2 == 1:print(\"IMPOSSIBLE\")\nelse:print((A+B)//2)",
  "f2": "A,B = map(int,input().split())\nif abs(A-B) % 2 == 0:\nprint(min(A,B) + abs(A-B)//2)\nelse:\nprint(\"IMPOSSIBLE\")",
  "sim": 0.8076923076923077,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02957/s796407054.py",
  "f2_idx": "./Project_CodeNet_Python800/p02957/s247125371.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\na[i+1] = min(b[i],b[i+1])\n\nprint(sum(a))",
  "f2": "n=int(input())\nb=list(map(int,input().split()))\na=[]\n\na.append(b[0])\nfor i in range(1,n-1) :\nif b[i-1] < b[i] :\na.append(b[i-1])\nelse :\na.append(b[i])\na.append(b[n-2])\nprint(sum(a))",
  "sim": 0.7352941176470589,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02917/s653861550.py",
  "f2_idx": "./Project_CodeNet_Python800/p02917/s627237979.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split(\",\")\nprint(' '.join(s))",
  "f2": "s = input().split(\",\")\nprint(*s)",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03834/s334065170.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = lambda : sys.stdin.readline().rstrip()\n\na, b = map(int, input().split())\nprint(max(0, a - 2*b))",
  "f2": "import sys\nstdin=sys.stdin\n\nip=lambda: int(sp())\n\nlp=lambda:list(map(int,stdin.readline().split()))\nsp=lambda:stdin.readline().rstrip()\n\na,b=lp()\n\nprint(max(0,a-2*b))\n",
  "sim": 0.8214285714285714,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02885/s937131999.py",
  "f2_idx": "./Project_CodeNet_Python800/p02885/s008339065.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = list(map(int,input().split()))\ncnt = 0\nfor i in range(N):\nminj = i\nfor j in range(i+1,N):\nif A[j] < A[minj]:\nminj = j\nif i != minj:\nA[i],A[minj] = A[minj],A[i]\ncnt += 1\nprint(*A)\nprint(cnt)\n",
  "f2": "n = int(input())\na = list(map(int, input().split()))\ncount = 0\nfor i in range(0, n):\nminj = min(range(i, n), key=lambda j: a[j])\nif i != minj:\na[i], a[minj] = a[minj], a[i]\ncount += 1\nprint(*a)\nprint(count)",
  "sim": 0.7027027027027027,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02260/s412559133.py",
  "f2_idx": "./Project_CodeNet_Python800/p02260/s904431129.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\npoint_sum = 0\n\nfor i in range(1, n+1):\npoint_sum += a[i*2 - 1]\n\nprint(point_sum)",
  "f2": "n = int(input())\na = list(map(int, input().split(\" \")))\n\na.sort(reverse=True)\nsum = 0\nfor i in range(1, 2 * n, 2):\nsum += a[i]\n\nprint(sum)",
  "sim": 0.8484848484848485,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03767/s015156443.py",
  "f2_idx": "./Project_CodeNet_Python800/p03767/s721999464.py",
  "response": "Yes"
 },
 {
  "f1": "a,b=map(int,input().split())\nif a<b:\nans=str(a)*b\nelse:\nans=str(b)*a\nprint(ans)",
  "f2": "a, b = input().split()\na_str = a * int(b)\nb_str = b * int(a)\n\nif a_str < b_str:\nprint(a_str)\nelse:\nprint(b_str)",
  "sim": 0.7619047619047619,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02790/s169424628.py",
  "f2_idx": "./Project_CodeNet_Python800/p02790/s623002176.py",
  "response": "Yes"
 },
 {
  "f1": "H,W = map(int,input().split())\nA = [None for _ in range(H)]\nfor i in range(H):\nA[i] = input()\n\ncount = 0\n\nfor i in range(H):\nfor j in range(W):\nif A[i][j] == '#':\ncount += 1\n\nif count == H+W-1:\nprint('Possible')\nelse:\nprint('Impossible')",
  "f2": "h, w = map(int, input().split())\nfield = [list(input()) for _ in range(h)]\n\ncnt = 0\nfor i in range(h):\nfor j in range(w):\nif field[i][j] == '#':\ncnt += 1\n\nprint('Possible' if cnt == h + w - 1 else 'Impossible')",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03937/s523655257.py",
  "f2_idx": "./Project_CodeNet_Python800/p03937/s195343890.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = map(int,input().split())\nif a<=8 and b<=8: print(\"Yay!\")\nelse: print(\":(\")",
  "f2": "a, b = [int(x) for x in input().split()]\nprint(\"Yay!\" if a <= 8 and b <= 8 else \":(\")",
  "sim": 0.72,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03323/s904926219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03323/s876301190.py",
  "response": "Yes"
 },
 {
  "f1": "import math\nx1,y1,x2,y2=map(float,input().split())\nA=abs(y1-y2)\nB=abs(x1-x2)\nC=math.sqrt(A**2+B**2)\nprint(f'{C:.8f}')",
  "f2": "import math\n\nx1, y1, x2, y2 = map(float, input().split(' '))\n\nprint('{:.5f}'.format(math.sqrt((x2-x1)**2+(y2-y1)**2)))",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02379/s148858505.py",
  "f2_idx": "./Project_CodeNet_Python800/p02379/s653819402.py",
  "response": "Yes"
 },
 {
  "f1": "N,X = map(int, input().split())\nt = [0]*(N+1)\nh = [0]*(N+1)\nh[0]=1\nt[0]=1\nfor i in range(1, N+1):\nh[i]=2*(h[i-1])+3\nt[i]=2*(t[i-1])+1\ndef find(n, x):\nif n==0:\nreturn 0 if x<=0 else 1\nelif x<=1+h[n-1]:\nreturn find(n-1, x-1)\nelse:\nreturn t[n-1]+1+find(n-1, x-2-h[n-1])\nprint(find(N,X))",
  "f2": "def f(i, X):\nif i == 0:\nreturn 1\n\nelif X == 1:\nreturn 0\n\nelif X <= 1 + a[i-1]:\nreturn f(i-1, X-1)\n\nelif X == 2 + a[i-1]:\nreturn p[i-1] + 1\n\nelif X <= 2 + 2 * a[i-1]:\nreturn f(i-1, X-2-a[i-1]) + 1 + p[i-1]\n\nelse:\nreturn p[i]\n\nN, X = map(int, input().split())\na = [1]\np = [1]\nfor i in range(N):\na.append(2 * a[-1] + 3)\np.append(2 * p[-1] + 1)\n\nprint(f(N, X))",
  "sim": 0.7857142857142857,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03209/s606161470.py",
  "f2_idx": "./Project_CodeNet_Python800/p03209/s744640358.py",
  "response": "Yes"
 },
 {
  "f1": "N, K = map(int, input().split())\nL=[]\nR=[]\nfor i in range(K):\nl,r= map(int, input().split())\nL.append(l)\nR.append(r)\n\ndp=[0]*(N+1)\ndp[1]=1\ndpd=[0]*(N+2)\ndpd[2]=-1\n\nfor i in range(1, N):\nfor j in range(K):\ndpd[min(i+L[j],N+1)]+=dp[i]\ndpd[min(i+R[j]+1,N+1)]-=dp[i]\ndp[i+1]=(dp[i]+dpd[i+1])%998244353\n\nprint(dp[N])",
  "f2": "MOD = 998244353\nN, K = map(int, input().split())\nrl = [list(map(int, input().split())) for _ in range(K)]\ndp = [0] * (N + 1)\ndp[1] = 1\ndp[2] = -1\n\nfor i in range(1, N + 1):\ndp[i] += dp[i - 1]\nfor j in range(K):\nl, r = rl[j][0], rl[j][1]\nif i + l <= N:\ndp[i + l] += dp[i]\ndp[i + l] %= MOD\nif i + r + 1 <= N:\ndp[i + r + 1] -= dp[i]\ndp[i + r + 1] %= MOD\nprint(dp[N] % MOD)",
  "sim": 0.7333333333333333,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02549/s804038860.py",
  "f2_idx": "./Project_CodeNet_Python800/p02549/s075656796.py",
  "response": "Yes"
 },
 {
  "f1": "n,a,b=map(int,input().split())\ns=list(map(int,input().split()))\nt=0\n\nfor i in range(n-1):\nt+=min(b,a*(s[i+1]-s[i]))\n\nprint(t)",
  "f2": "n, a,b= map(int, input().split())\nx=list(map(int,input().split()))\ny=[int(x[i]-x[i-1]) for i in range(1,n)]\nanswer=0\nfor i in y:\nif a*i<=b:\nanswer+=a*i\nelse:\nanswer+=b\nprint(answer)",
  "sim": 0.7222222222222222,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03829/s750412177.py",
  "f2_idx": "./Project_CodeNet_Python800/p03829/s581411085.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nv = list(map(int, input().split()))\n\nV = sorted(v)\n\nans = V[0]\n\nfor i in range(N-1):\nans = (ans + V[i+1]) /2\n\nprint(ans)\n",
  "f2": "N = int(input())\nv = list(map(int, input().split()))\n\n# 昇順にソートすると、最大値を与えるのは以下の操作を行ったとき：\n# v_1 = (v_0 + v_1)/2 (v_0は消滅）\n# v_2 = (v_1 + V_2)/2 (v_1は消滅)\n# v_(N-1) = (v_(N_1) + v_(N-2))/2 (v_(N-2)は消滅)\n# 結局、(N-1)番目の素材が残り、その価値はv_(N-1)\n\nv = sorted(v)\nfor i in range(N-1):\nv[i+1] = (v[i+1]+v[i])/2\n\nprint(v[N-1])",
  "sim": 0.7647058823529411,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02935/s293661137.py",
  "f2_idx": "./Project_CodeNet_Python800/p02935/s876757565.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nS, T = map(str, input().split())\n\nans = \"\"\nfor i in range(N):\nans += S[i] + T[i]\nprint(ans)",
  "f2": "n = int(input())\ns, t = map(str, input().split())\n\ns = list(s)\nt = list(t)\n\nc = \"\"\nfor i in range(n):\nc += s[i]+t[i]\n\nprint(c)",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02830/s786624452.py",
  "f2_idx": "./Project_CodeNet_Python800/p02830/s077426457.py",
  "response": "Yes"
 },
 {
  "f1": "a, b, m = map(int, input().split())\nlista = list(map(int, input().split()))\nlistb = list(map(int, input().split()))\n\nans = min(lista)+min(listb)\n\nfor i in range(m):\nx, y, c = map(int, input().split())\ndprice = lista[x-1]+listb[y-1] - c\nif ans > dprice:\nans = dprice\n\nprint(ans)",
  "f2": "A, B, M = map(int, input().split())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmin_price = min(a) + min(b)\nfor _ in range(M):\nx, y, c = map(int, input().split())\ndiscount_price = a[x-1] + b[y-1] - c\nif min_price > discount_price:\nmin_price = discount_price\n\nprint(min_price)",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02748/s290639517.py",
  "f2_idx": "./Project_CodeNet_Python800/p02748/s099027138.py",
  "response": "Yes"
 },
 {
  "f1": "mod = 10**9+7\nH, W = map(int, input().split())\nG = [input() for i in range(H)]\ndp = [[0]*W for i in range(H)]\ndp[0][0] = 1\nfor i in range(H):\nfor j in range(W):\nif G[i][j] == '.':\nif i - 1 >= 0:\nif j - 1 >= 0:\ndp[i][j] = (dp[i-1][j] + dp[i][j-1])%mod\nelse:\ndp[i][j] = dp[i-1][j]\nelif j - 1 >= 0:\ndp[i][j] = dp[i][j-1]\nprint(dp[H-1][W-1])",
  "f2": "H, W = map(int, input().split())\ngrid = [input() for i in range((H))]\ndp = [[0 for i in range(W)] for j in range(H)]\ndp[0][0] = 1\nm = 10**9 + 7\nfor i in range(H):\nfor j in range(W):\nif grid[i][j] == \"#\":\ncontinue\nif i >= 1:\ndp[i][j] += dp[i-1][j]\nif j >= 1:\ndp[i][j] += dp[i][j-1]\n\ndp[i][j] %= m\n\nprint(dp[-1][-1])",
  "sim": 0.7111111111111111,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03167/s097948319.py",
  "f2_idx": "./Project_CodeNet_Python800/p03167/s766499835.py",
  "response": "Yes"
 },
 {
  "f1": "MOD = 998244353\nN = int(input())\nD = list(map(int, input().split()))\nif D[0] != 0:\nprint(0)\nexit()\nD_2 = [0]*(max(D)+1)\nfor i in D:\nD_2[i] += 1\nif D_2[0] != 1:\nprint(0)\nexit()\nans = 1\nfor i in range(1,max(D)+1):\nans *= D_2[i-1]**D_2[i]\nans %= MOD\nprint(ans)",
  "f2": "N = int(input())\nD = list(map(int, input().split()))\nmod = 998244353\nans = 1\nA = [0]*(max(D)+1)\nfor i in range(N):\nA[D[i]] += 1\nif D[0] != 0 or not all(D[1:]) or not all(A):\nprint(0)\nexit()\nfor i in range(1, max(D)+1):\nans = ans * pow(A[i-1], A[i], mod) % mod\nprint(ans % mod)",
  "sim": 0.7272727272727273,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02866/s055133669.py",
  "f2_idx": "./Project_CodeNet_Python800/p02866/s741700483.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\na = list(map(int, input().split()))\nsunuke = 0\narai = sum(a)\np = []\nfor i in range(len(a)-1):\nsunuke += a[i]\narai -= a[i]\np.append(abs(sunuke - arai))\n\nprint(min(p))",
  "f2": "N = int(input())\nA = list(map(int, input().split()))\nP = A[0]\nQ = sum(A[1:])\nm = abs(P-Q)\nfor i in range(1, N-1):\nP += A[i]\nQ -= A[i]\nm = min(m, abs(P-Q))\nprint(m)",
  "sim": 0.7297297297297297,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03659/s078585307.py",
  "f2_idx": "./Project_CodeNet_Python800/p03659/s895635811.py",
  "response": "Yes"
 },
 {
  "f1": "n,q=map(int,input().split())\ns=input()\nL=[0 for i in range(n+1)]\n\nfor i in range(2,n+1):\nif s[i-1]==\"C\" and s[i-2]==\"A\":\nL[i]=L[i-1]+1\nelse:\nL[i]=L[i-1]\n\nfor que in range(q):\nl,r=map(int,input().split())\nprint(L[r]-L[l])",
  "f2": "n, q=map(int, input().split())\ns=input()\n\n\nz=[0]*n\ncount=0\nfor i in range(n):\nz[i]=count\nif s[i]==\"A\" and i<=n-2:\nif s[i+1]==\"C\":\ncount+=1\nz[i]+=1\n\nfor i in range(q):\nl, r =map(int,input().split())\n#r文字目までのACの数-(l-1)文字目まで\nif l==1:\nans=z[r-2]\nelif r-l==1:\nif s[l-1]==\"A\" and s[l]==\"C\":\nans=1\nelse:\nans=0\nelse:\nans=z[r-2]-z[l-2]\nprint(ans)",
  "sim": 0.7674418604651163,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03087/s598568413.py",
  "f2_idx": "./Project_CodeNet_Python800/p03087/s144938359.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nsquares = list(map(int, input().split(\" \")))\n\nodd = 0\nfor i in range(0, n, 2):\nif squares[i] % 2:\nodd += 1\nprint(odd)",
  "f2": "n = int(input())\nA = list(map(int, input().split()))\nans = 0\nfor a in A[::2]:\nif a % 2 == 1:\nans += 1\nprint(ans)",
  "sim": 0.71875,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02607/s302143644.py",
  "f2_idx": "./Project_CodeNet_Python800/p02607/s815974107.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = map(int, input().split())\n\nif x >= 0:\nif y >= x:\nprint(y - x)\nelif y > 0:\nprint(1 + x - y + 1)\nelif abs(y) < x:\nprint(1 + x + y)\nelse:\nprint(1 + abs(x + y))\nelse:\nif y >= abs(x):\nprint(1 + y + x)\nelif y > 0:\nprint(abs(x + y) + 1)\n\nelif abs(y) <= abs(x):\nprint(abs(y - x))\nelse:\nprint(1 + abs(y - x) + 1)",
  "f2": "x, y = map(int, input().split())\nans = 0\nif x*y > 0:\nif x > y:\nans = abs(x-y)+2\nelse:\nans = abs(x-y)\nelif x*y < 0:\nans = abs(abs(x)-abs(y))+1\nelse:\nif x == 0:\nif y < 0:\nans = abs(x-y)+1\nelse:\nans = abs(x-y)\nelse:\nif x < 0:\nans = abs(x-y)\nelse:\nans = abs(x-y)+1\nprint(ans)",
  "sim": 0.7931034482758621,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03838/s645177071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03838/s109080469.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nx, y = map(int, input().split())\nlist = [1, 3, 5, 7, 8, 10, 12]\nlists = [4, 6, 9, 11]\nprint(\"Yes\" if (list.count(x) == 1 and list.count(y)) or (lists.count(x) == 1 and lists.count(y)) else \"No\")\nresolve()",
  "f2": "x,y=map(int,input().split())\na=[1,3,5,7,8,10,12]\nb=[4,6,9,11]\nc=[2]\nif x in a and y in a:\nprint(\"Yes\")\nelif x in b and y in b:\nprint(\"Yes\")\nelif x in c and y in c:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.7045454545454546,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03711/s123078982.py",
  "f2_idx": "./Project_CodeNet_Python800/p03711/s993950379.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\n\nxyh = []\nfor i in range(N):\nxyh.append(list(map(int,input().split())))\n\nxyh_sorted = sorted(xyh, key=lambda x: x[2], reverse=True)\n\nanswer = [0, 0, 0]\nfor cy in range(0, 101):\nfor cx in range(0, 101):\nH = xyh_sorted[0][2] + abs(xyh_sorted[0][0] - cx) + abs(xyh_sorted[0][1] - cy)\nflag = True\nfor i in range(1,N):\nh2 = max(H - abs(xyh_sorted[i][0] - cx) - abs(xyh_sorted[i][1] - cy), 0)\nif h2 != xyh_sorted[i][2]:\nflag = False\nbreak\nif flag:\nanswer = [cx, cy, H]\nbreak\nif flag:\nbreak\n\nanswerString = str(answer[0]) + \" \" + str(answer[1]) + \" \" + str(answer[2])\nprint(answerString)",
  "f2": "n = int(input())\nkouho = [list(map(int,input().split())) for i in range(n)]\nkouho = sorted(kouho,key=lambda x :x[2],reverse=True)\n\nfor cx in range(101):\nfor cy in range(101):\nh = kouho[0][2] + abs(kouho[0][0]-cx) + abs(kouho[0][1]-cy)\nflag = False\nfor i in range(1,n):\nnow = max(h - abs(kouho[i][0]-cx) - abs(kouho[i][1]-cy),0)\nif now != kouho[i][2]:\nflag = True\nbreak\nif not flag:\nprint(str(cx) + \" \" + str(cy) + \" \" + str(h))\nexit()",
  "sim": 0.7454545454545455,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03240/s179454517.py",
  "f2_idx": "./Project_CodeNet_Python800/p03240/s654477018.py",
  "response": "Yes"
 },
 {
  "f1": "R = int(input())\n\nprint('ABC' if 1200 > R else 'ARC' if 2800 > R else 'AGC')",
  "f2": "x = int(input())\nprint('ABC' if x<1200 else 'ARC' if x<2800 else 'AGC')",
  "sim": 0.7647058823529411,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03288/s864600873.py",
  "f2_idx": "./Project_CodeNet_Python800/p03288/s602546845.py",
  "response": "Yes"
 },
 {
  "f1": "a, b, m = map(int, input().split())\nlista = list(map(int, input().split()))\nlistb = list(map(int, input().split()))\n\nans = min(lista)+min(listb)\n\nfor i in range(m):\nx, y, c = map(int, input().split())\ndprice = lista[x-1]+listb[y-1] - c\nif ans > dprice:\nans = dprice\n\nprint(ans)",
  "f2": "f=lambda:map(int,input().split())\nA,B,m=f()\na=list(f())\nb=list(f())\nans=min(a)+min(b)\nfor _ in range(m):\nx,y,c=f()\nans=min(ans,a[x-1]+b[y-1]-c)\nprint(ans)",
  "sim": 0.717948717948718,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02748/s290639517.py",
  "f2_idx": "./Project_CodeNet_Python800/p02748/s321723685.py",
  "response": "Yes"
 },
 {
  "f1": "H,W = map(int,input().split())\nA = [None for _ in range(H)]\nfor i in range(H):\nA[i] = input()\n\ncount = 0\n\nfor i in range(H):\nfor j in range(W):\nif A[i][j] == '#':\ncount += 1\n\nif count == H+W-1:\nprint('Possible')\nelse:\nprint('Impossible')",
  "f2": "x,y = list(map(int, input().split()))\nl = []\nfor i in range (x):\nl.append(list(input()))\nval = 0\nfor j in range (x):\nval += l[j].count('#')\nprint('Possible' if x + y - 1 == val else 'Impossible')",
  "sim": 0.7317073170731707,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03937/s523655257.py",
  "f2_idx": "./Project_CodeNet_Python800/p03937/s652144257.py",
  "response": "Yes"
 },
 {
  "f1": "x = int(input())\n\nif x < 30:\nprint(\"No\")\nelif x >= 30:\nprint(\"Yes\")",
  "f2": "X = int(input())\nif X>=30:print(\"Yes\")\nelse:print(\"No\")",
  "sim": 0.7058823529411765,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02594/s483287707.py",
  "f2_idx": "./Project_CodeNet_Python800/p02594/s424466475.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nx, a, b = map(int, input().split())\nif abs(x-a) < abs(x-b):\nprint(\"A\")\nelse:\nprint(\"B\")\n\n\nmain()",
  "f2": "x, a, b = input().split()\nx = int(x)\na = int(a)\nb = int(b)\nif x < a:\ndis_ax = a-x\nelse:\ndis_ax = x-a\nif x < b:\ndis_bx = b-x\nelse:\ndis_bx = x-b\nif dis_ax > dis_bx:\nprint(\"B\")\nelse:\nprint(\"A\")",
  "sim": 0.7307692307692307,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03623/s261905070.py",
  "f2_idx": "./Project_CodeNet_Python800/p03623/s650084738.py",
  "response": "Yes"
 },
 {
  "f1": "from math import gcd\nn = int(input())\nans = 0\n\nfor i in range(1,n+1):\nfor j in range(1,n+1):\nx = gcd(i,j)\nfor k in range(1,n+1):\nans += gcd(x,k)\nprint(ans)",
  "f2": "import math\nK = int(input())\nans = 0\nfor i in range(K):\nfor t in range(K):\nfor j in range(K):\ngcd1 = math.gcd(i+1,t+1)\ngcd2 = math.gcd(gcd1,j+1)\nans += gcd2\nprint(ans)",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02713/s013967201.py",
  "f2_idx": "./Project_CodeNet_Python800/p02713/s355932561.py",
  "response": "Yes"
 },
 {
  "f1": "mod = 10**9+7\nH, W = map(int, input().split())\nG = [input() for i in range(H)]\ndp = [[0]*W for i in range(H)]\ndp[0][0] = 1\nfor i in range(H):\nfor j in range(W):\nif G[i][j] == '.':\nif i - 1 >= 0:\nif j - 1 >= 0:\ndp[i][j] = (dp[i-1][j] + dp[i][j-1])%mod\nelse:\ndp[i][j] = dp[i-1][j]\nelif j - 1 >= 0:\ndp[i][j] = dp[i][j-1]\nprint(dp[H-1][W-1])",
  "f2": "h, w = map(int, input().split())\nmaze = [list(input()) for i in range(h)]\nmod = 10 ** 9 + 7\n\ndp = [[0] * (w + 1) for i in range(h + 1)]\n\nfor i in range(1, h + 1):\nfor j in range(1, w + 1):\nif i == j == 1:\ndp[i][j] = 1\nelif maze[i - 1][j - 1] == \".\":\ndp[i][j] = (dp[i - 1][j] + dp[i][j - 1]) % mod\n\nprint(dp[h][w])",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03167/s097948319.py",
  "f2_idx": "./Project_CodeNet_Python800/p03167/s920604333.py",
  "response": "Yes"
 },
 {
  "f1": "R = int(input())\n\nprint('ABC' if 1200 > R else 'ARC' if 2800 > R else 'AGC')",
  "f2": "n = int(input())\nif 1200 > n:\nprint('ABC')\nelif 1200 <= n < 2800:\nprint('ARC')\nelse:\nprint('AGC')",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03288/s864600873.py",
  "f2_idx": "./Project_CodeNet_Python800/p03288/s957907966.py",
  "response": "Yes"
 },
 {
  "f1": "i = int(input())\n\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\nres = sum(b)\n\nfor j in range(i-1):\nif a[j] + 1 == a[j+1]:\nres += c[a[j] - 1]\nprint(res)",
  "f2": "n = int(input())\na = list(map(int,input().split()))\nb = list(map(int,input().split()))\nc = list(map(int,input().split()))\n\n\n\nb_sum = sum(b)\n\n\nfor i in range(0,n-1) :\nif a[i]+1 == a[i+1] :\nb_sum = c[a[i]-1]+b_sum\n\nprint(b_sum)\n",
  "sim": 0.8181818181818182,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02916/s745597595.py",
  "f2_idx": "./Project_CodeNet_Python800/p02916/s461878759.py",
  "response": "Yes"
 },
 {
  "f1": "a, b, m = map(int, input().split())\nlista = list(map(int, input().split()))\nlistb = list(map(int, input().split()))\n\nans = min(lista)+min(listb)\n\nfor i in range(m):\nx, y, c = map(int, input().split())\ndprice = lista[x-1]+listb[y-1] - c\nif ans > dprice:\nans = dprice\n\nprint(ans)",
  "f2": "A, B, m = map(int, input().split())\n\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nx = []\ny = []\nc = []\nfor i in range(m):\nxx, yy, cc = map(int, input().split())\nx.append(xx)\ny.append(yy)\nc.append(cc)\n\n\nans = min(a) + min(b)\n\nfor i in range(m):\nans = min(ans,a[x[i]-1] + b[y[i]-1] - c[i])\nprint (ans)",
  "sim": 0.725,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02748/s290639517.py",
  "f2_idx": "./Project_CodeNet_Python800/p02748/s197638752.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int, input().split()))\n\ncnt = sum(i < 0 for i in a)\nans = sum(abs(i) for i in a)\nif cnt % 2 == 0:\nprint(ans)\nelif cnt % 2 == 1:\nprint(ans - 2 * min(abs(i) for i in a))",
  "f2": "#D\nn = int(input())\na = list(map(int, input().split()))\nmin = 10e19\nsum = 0\ncount = 0\nfor i in range(n):\nsum += abs(a[i])\nif abs(a[i]) < min:\nmin=abs(a[i])\nif a[i] < 0:\ncount += 1\n# print(sum,count,min)\nif count % 2 == 0 or count == 0:\nans = sum\nelse:\nans = sum - abs(min * 2)\nprint(ans)",
  "sim": 0.7317073170731707,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03062/s314943495.py",
  "f2_idx": "./Project_CodeNet_Python800/p03062/s407340496.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = input().split()\n\nA = int(a)\nB = int(b)\n\nif B % A == 0:\nprint(A + B)\nelse:\nprint(B-A)",
  "f2": "A,B = (int(X) for X in input().split())\nif B%A==0: print(B+A)\nelse: print(B-A)",
  "sim": 0.7916666666666666,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03125/s874313015.py",
  "f2_idx": "./Project_CodeNet_Python800/p03125/s611124510.py",
  "response": "Yes"
 },
 {
  "f1": "from math import gcd\nn = int(input())\nans = 0\n\nfor i in range(1,n+1):\nfor j in range(1,n+1):\nx = gcd(i,j)\nfor k in range(1,n+1):\nans += gcd(x,k)\nprint(ans)",
  "f2": "import math\nk=int(input())\n\nans=0\nfor i in range(k):\nfor j in range(k):\nq=math.gcd(i+1,j+1)\nfor l in range(k):\nans+=math.gcd(q,l+1)\nprint(ans)",
  "sim": 0.7857142857142857,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02713/s013967201.py",
  "f2_idx": "./Project_CodeNet_Python800/p02713/s159500710.py",
  "response": "Yes"
 },
 {
  "f1": "n,a,b = map(int, input().split())\nans = 0\nfor i in range(n+1):\ns = 0\nm = str(i)\nfor j in range(len(m)):\ns += int(m[j])\nif a <= s <= b:\nans += i\nprint(ans)",
  "f2": "def digit_sum(x):\ny = str(x)\ny_len = len(y)\nans = 0\nfor j in range(y_len):\nans += int(y[j])\n\nreturn ans\n\nanswer=0\nn,a,b = map(int,input().split())\nfor i in range(1, n+1):\nif a<= digit_sum(i) <= b:\nanswer+=i\n\nprint(answer)",
  "sim": 0.7692307692307693,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03478/s848574121.py",
  "f2_idx": "./Project_CodeNet_Python800/p03478/s954277319.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\nif 2 * n > m:\nprint(m//2)\nelse:\nresult = 0\nresult += n\nm -= 2*n\nresult += m//4\nprint(result)",
  "f2": "S,C=map(int,input().split())\ncount=0\nif C>=2*S:\nC-=S*2\ncount+=S\n\ncount+=C//4\n\nelse:\ncount+=C//2\n\nprint(count)",
  "sim": 0.7142857142857143,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03797/s200898866.py",
  "f2_idx": "./Project_CodeNet_Python800/p03797/s188368048.py",
  "response": "Yes"
 },
 {
  "f1": "k = int(input())\nif k %2 == 0:\nprint(int(k*k/2/2))\nelif k%2 ==1:\nprint(int((k//2 + 1)*(k//2)))",
  "f2": "k = int(input())\nn = k //2\nif k % 2 == 1:\nprint(n * (n+1))\nelse:\nprint(n * n)",
  "sim": 0.7619047619047619,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03264/s551836378.py",
  "f2_idx": "./Project_CodeNet_Python800/p03264/s311353098.py",
  "response": "Yes"
 },
 {
  "f1": "A,B=map(int,input().split())\nif (A+B) % 2 == 1:print(\"IMPOSSIBLE\")\nelse:print((A+B)//2)",
  "f2": "a = list(map(int,input().split()))\nA = a[0]\nB = a[1]\n\nif (A+B) % 2 == 0:\nprint((A+B)//2)\nelse:\nprint('IMPOSSIBLE')",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02957/s796407054.py",
  "f2_idx": "./Project_CodeNet_Python800/p02957/s902920033.py",
  "response": "Yes"
 },
 {
  "f1": "n,q=map(int,input().split())\ns=input()\nL=[0 for i in range(n+1)]\n\nfor i in range(2,n+1):\nif s[i-1]==\"C\" and s[i-2]==\"A\":\nL[i]=L[i-1]+1\nelse:\nL[i]=L[i-1]\n\nfor que in range(q):\nl,r=map(int,input().split())\nprint(L[r]-L[l])",
  "f2": "n,q = map(int ,input().split())\ns = input()\n\nnums = [0]*len(s)\nfor i in range(1,n):\nif s[i-1] == \"A\" and s[i] == \"C\": nums[i] = nums[i-1] + 1\nelse: nums[i] = nums[i-1]\n\nfor _ in range(q):\nl,r = map(lambda x: int(x)-1, input().split())\nprint(nums[r]-nums[l])",
  "sim": 0.7804878048780488,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03087/s598568413.py",
  "f2_idx": "./Project_CodeNet_Python800/p03087/s772155525.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\n\nans = 0\n\nfor i in range(1,n+1):\na = n//i\nb = i*a\n\nans += (i+b)*a//2\n\nprint(ans)",
  "f2": "n = int(input())\nArr = [0] * (n + 1)\nfor num in range(1, n+1):\nfor i in range(1, n // num + 1):\nArr[i * num] += 1\nans = 0\nfor i in range(1, n+1):\nans += Arr[i] * i\nprint(ans)",
  "sim": 0.7407407407407407,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02624/s826439799.py",
  "f2_idx": "./Project_CodeNet_Python800/p02624/s899234149.py",
  "response": "No"
 },
 {
  "f1": "n, m = map(int, input().split())\nif 2 * n > m:\nprint(m//2)\nelse:\nresult = 0\nresult += n\nm -= 2*n\nresult += m//4\nprint(result)",
  "f2": "n,m=map(int,input().split())\nif 2*n>m:\nprint(m//2)\nelse:\nm-=2*n\nprint(n+(m//4))",
  "sim": 0.84,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03797/s200898866.py",
  "f2_idx": "./Project_CodeNet_Python800/p03797/s162858153.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\n\n\ndef euc(n,m):\nif max(n,m)%min(n,m) == 0:\nreturn min(n,m)\nelse:\nreturn euc(min(n,m), max(n,m)%min(n,m))\n\n\nfor line in sys.stdin:\na,b = [int(i) for i in line.split()]\nprint(euc(a,b),int(a*b/euc(a,b)))\n",
  "f2": "import sys\n\ndef gcd(m, n):\nr = m % n\nif r == 0:\nreturn n\nelse:\nreturn gcd(n, r)\n\nlines = sys.stdin.readlines()\nfor line in lines:\na, b = map(int, line.split())\nm = max(a, b)\nn = min(a, b)\nprint(gcd(m, n), m * n // gcd(m, n))",
  "sim": 0.725,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p00005/s022552253.py",
  "f2_idx": "./Project_CodeNet_Python800/p00005/s133455687.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nS = list(input())\nx = 0\nmax = 0\nfor i in range(N):\nif S[i] == \"I\":\nx += 1\nelse:\nx -= 1\nif x > max:\nmax = x\nprint(max)",
  "f2": "n = int(input())\ns = input()\nx = 0\nmaxx = 0\nfor i in range(n):\nif s[i] == \"I\":\nx += 1\nif maxx < x:\nmaxx = x\nelse:\nx -= 1\nprint(maxx)",
  "sim": 0.7096774193548387,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03827/s065986008.py",
  "f2_idx": "./Project_CodeNet_Python800/p03827/s485828365.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nS, T = map(str, input().split())\n\nans = \"\"\nfor i in range(N):\nans += S[i] + T[i]\nprint(ans)",
  "f2": "N = int(input())\nS,T = map(str,input().split())\nlsS = list(S)\nlsT = list(T)\nans = ''\nfor i in range(N):\nans += lsS[i]+lsT[i]\nprint(ans)",
  "sim": 0.8275862068965517,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02830/s786624452.py",
  "f2_idx": "./Project_CodeNet_Python800/p02830/s985745166.py",
  "response": "Yes"
 },
 {
  "f1": "H, W = map(int, input().split())\nzero_pad = '.' * (W + 2)\ns = []\ns.append(zero_pad)\nfor i in range(H):\ns.append('.' + input() + '.')\ns.append(zero_pad)\n\nfor h in range(1, H + 1):\nfor w in range(1, W + 1):\nif s[h][w] == '#':\nif s[h - 1][w] == '.' and s[h + 1][w] == '.' and s[h][w - 1] == '.' and s[h][w + 1] == '.':\nprint('No')\nexit()\n\nprint('Yes')",
  "f2": "h, w = map(int, input().split())\ns = [[0]*(w+2)] + [[0] + list(input()) + [0] for _ in range(h)] + [[0]*(w+2)]\n\nfor i in range(h + 2):\nfor j in range(w + 2):\nif s[i][j] == '#' and s[i+1][j] != '#' and s[i-1][j] != '#' and s[i][j+1] != '#' and s[i][j-1] != '#':\nprint('No')\nexit()\nprint('Yes')",
  "sim": 0.7619047619047619,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03361/s661356630.py",
  "f2_idx": "./Project_CodeNet_Python800/p03361/s430717834.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nsquares = list(map(int, input().split(\" \")))\n\nodd = 0\nfor i in range(0, n, 2):\nif squares[i] % 2:\nodd += 1\nprint(odd)",
  "f2": "a = int(input())\nAA = map(int,input().split())\nAAA = list(AA)\ncount = 0\nfor i in range(a):\nif i%2 ==0 and AAA[i]%2 ==1:\ncount +=1\nprint(count)",
  "sim": 0.7058823529411765,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02607/s302143644.py",
  "f2_idx": "./Project_CodeNet_Python800/p02607/s388109641.py",
  "response": "Yes"
 },
 {
  "f1": "n,k = map(int,input().split())\nprint(min(n%k,-((n%k)-k)))",
  "f2": "N, K = map(int, input().split())\n\nt = N % K\n\nprint(min(t, K-t))",
  "sim": 0.7222222222222222,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02719/s413819466.py",
  "f2_idx": "./Project_CodeNet_Python800/p02719/s131844596.py",
  "response": "Yes"
 },
 {
  "f1": "a,b = input().split()\n\nA = int(a)\nB = int(b)\n\nif B % A == 0:\nprint(A + B)\nelse:\nprint(B-A)",
  "f2": "A, B = map(int,input().split())\nif B % A == 0: print(A + B)\nelse: print(B - A)",
  "sim": 0.8636363636363636,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03125/s874313015.py",
  "f2_idx": "./Project_CodeNet_Python800/p03125/s644894539.py",
  "response": "Yes"
 },
 {
  "f1": "K, X = map(int, input().split())\nprint(' '.join([str(i) for i in range(X - K + 1, X + K)]))",
  "f2": "K,X=map(int,input().split())\nList = []\nmid = 0\nfor i in range(-K+1,K):\nmid = X + i\nList.append(mid)\nprint(*List)",
  "sim": 0.7,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02946/s657781649.py",
  "f2_idx": "./Project_CodeNet_Python800/p02946/s089299508.py",
  "response": "Yes"
 },
 {
  "f1": "X, t = list(map(int, input().split()))\nif int(X - t) <= 0 :\nprint(0)\nelse :\nprint(X - t)",
  "f2": "X,t = map(int, input().split())\n\nprint(X - t if X > t else 0)",
  "sim": 0.8,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03609/s189046079.py",
  "f2_idx": "./Project_CodeNet_Python800/p03609/s041028712.py",
  "response": "Yes"
 },
 {
  "f1": "po=pow(10,9)+7\nn,k=map(int,input().split())\ncc=0\nfor i in range(k,n+2):\ncc+=(n*i-i*(i-1)+1)%po\nprint(cc%po)",
  "f2": "n, k = map(int, input().split())\nmod = 10**9 + 7\n\ns = [0]*(n+1)\ns[0] = n + 1\nfor i in range(1, n+1):\ns[i] = (s[i-1] + n - 2 * i) % mod\n\nans = 0\nfor i in range(k-1, n+1):\nans += s[i]\nans %= mod\n\nprint(ans)",
  "sim": 0.7368421052631579,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02708/s351441251.py",
  "f2_idx": "./Project_CodeNet_Python800/p02708/s192357863.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nb = list(map(int,input().split()))\na = [0]*(N)\na[0] = b[0]\na[N-1] = b[N-2]\nfor i in range(N-2):\na[i+1] = min(b[i],b[i+1])\n\nprint(sum(a))",
  "f2": "n = int(input())\nb = list(map(int, input().split()))\nprint(b[0] + b[-1] + sum([min(b[i], b[i + 1]) for i in range(n - 2)]))",
  "sim": 0.8333333333333334,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02917/s653861550.py",
  "f2_idx": "./Project_CodeNet_Python800/p02917/s307654360.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nfor i in range(3,n+1):\nx = i\nif x % 3 == 0:\nprint(' {0}'.format(i), end='')\ncontinue\n\nwhile x != 0:\nif x % 10 == 3:\nprint(' {0}'.format(i),end='')\nbreak\nx //= 10\n\nprint()",
  "f2": "n=int(input())\nfor i in range(1,n+1):\nx = i\nif x % 3 == 0: print('',i,end='')\nelse:\nwhile x > 0:\nif x % 10 == 3:\nprint('',i,end='')\nbreak\nx //= 10\nprint('')\n",
  "sim": 0.7941176470588235,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02406/s342652492.py",
  "f2_idx": "./Project_CodeNet_Python800/p02406/s792266493.py",
  "response": "Yes"
 },
 {
  "f1": "N,M = map(int,input().split())\nA = list(map(int,input().split()))\ntot = sum(A)\nif tot%(4*M)==0:\na = tot//(4*M)\nelse:\na = tot//(4*M)+1\ncnt = 0\nfor i in range(N):\nif A[i]>=a:\ncnt += 1\nif cnt>=M:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "f2": "N,M = map(int,input().split())\nA = list(map(int,input().split()))\n\na = sum(A)*(1/(4*M))\ncnt = 0\nfor i in range(N):\nif A[i] >= a:\ncnt += 1\n\nif cnt >= M:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.85,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02718/s707701215.py",
  "f2_idx": "./Project_CodeNet_Python800/p02718/s082359996.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nL = list(map(int, input().split()))\nL.sort()\nans = 0\nfor i in range(0,N,2):\nans += L[i]\nL.sort(reverse=True)\nfor i in range(1,N,2):\nans += L[i]\nprint(ans)",
  "f2": "N = input()\nInp = list(input().split())\nInp = [int(i) for i in Inp]\nInp.sort()\nans = 0\nfor i in range(0,len(Inp),2) :\nkushi = [int(Inp[i]),int(Inp[i+1])]\nans += min(kushi)\nprint(ans)",
  "sim": 0.7272727272727273,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p04047/s854803513.py",
  "f2_idx": "./Project_CodeNet_Python800/p04047/s313656070.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nif len(s) < 4:\nprint('No')\nelif s[:4] == 'YAKI':\nprint('Yes')\nelse:\nprint('No')",
  "f2": "def resolve():\ns=input()\nif s[0:4]=='YAKI':\nprint('Yes')\n\nelse:\nprint('No')\nresolve()",
  "sim": 0.7272727272727273,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03591/s683167726.py",
  "f2_idx": "./Project_CodeNet_Python800/p03591/s888240849.py",
  "response": "Yes"
 },
 {
  "f1": "variables = list(map(int, input().split()))\nprint(variables.index(0) + 1)",
  "f2": "A = list(map(int,input().split()))\n\nprint(A.index(0)+1)",
  "sim": 0.8823529411764706,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02639/s690150018.py",
  "f2_idx": "./Project_CodeNet_Python800/p02639/s298929007.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nsquares = list(map(int, input().split(\" \")))\n\nodd = 0\nfor i in range(0, n, 2):\nif squares[i] % 2:\nodd += 1\nprint(odd)",
  "f2": "N=int(input())\na=list(map(int,input().split()))\nz=0\nfor i in range(0,N,2):\nif int(a[i])%2==1:\nz+=1\nprint(z)\n\n",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02607/s302143644.py",
  "f2_idx": "./Project_CodeNet_Python800/p02607/s098541808.py",
  "response": "Yes"
 },
 {
  "f1": "a = input()\nb = input()\nprint('Yes' if a == b[:-1] else 'No')",
  "f2": "s = input()\nt = input()\nif s == t[:-1]:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 0.7894736842105263,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02681/s651862349.py",
  "f2_idx": "./Project_CodeNet_Python800/p02681/s510084970.py",
  "response": "Yes"
 },
 {
  "f1": "D,T,S = map(int,input().split())\nif D/S - T >0:\nprint('No')\nelse:\nprint('Yes')",
  "f2": "D, T, S = map(int, input().split())\n\nx = D / S\n\nif x > T:\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "sim": 0.72,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02570/s680583335.py",
  "f2_idx": "./Project_CodeNet_Python800/p02570/s639328900.py",
  "response": "Yes"
 },
 {
  "f1": "n,q=map(int,input().split())\ns=input()\nL=[0 for i in range(n+1)]\n\nfor i in range(2,n+1):\nif s[i-1]==\"C\" and s[i-2]==\"A\":\nL[i]=L[i-1]+1\nelse:\nL[i]=L[i-1]\n\nfor que in range(q):\nl,r=map(int,input().split())\nprint(L[r]-L[l])",
  "f2": "import sys\ninput=sys.stdin.readline\nn,q=map(int,input().split())\ns=input().rstrip()\n\nlst=[0]\nfor i in range(1,n):\nif s[i-1]==\"A\" and s[i]==\"C\":\nlst.append(lst[i-1]+1)\nelse:\nlst.append(lst[i-1])\n\nfor i in range(q):\nl,r=map(int,input().split())\nprint(lst[r-1]-lst[l-1])",
  "sim": 0.7619047619047619,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03087/s598568413.py",
  "f2_idx": "./Project_CodeNet_Python800/p03087/s241793879.py",
  "response": "Yes"
 },
 {
  "f1": "N, K = map(int, input().split())\nL=[]\nR=[]\nfor i in range(K):\nl,r= map(int, input().split())\nL.append(l)\nR.append(r)\n\ndp=[0]*(N+1)\ndp[1]=1\ndpd=[0]*(N+2)\ndpd[2]=-1\n\nfor i in range(1, N):\nfor j in range(K):\ndpd[min(i+L[j],N+1)]+=dp[i]\ndpd[min(i+R[j]+1,N+1)]-=dp[i]\ndp[i+1]=(dp[i]+dpd[i+1])%998244353\n\nprint(dp[N])",
  "f2": "N, K = map(int, input().split())\nMOD = 998244353\n\nmove = []\nfor _ in range(K):\nL, R = map(int, input().split())\nmove.append((L, R))\n\ndp = [0]*(N+1)\ndp[0] = 1\ndp[1] = -1\n\nfor i in range(1, N+1):\ndp[i] += dp[i-1]\nfor l, r in move:\nif i - l >= 0:\ndp[i] += dp[i-l]\nif i - r - 1 >= 0:\ndp[i] -= dp[i-r-1]\ndp[i] %= MOD\n\nprint(dp[N-1])",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02549/s804038860.py",
  "f2_idx": "./Project_CodeNet_Python800/p02549/s441899043.py",
  "response": "Yes"
 },
 {
  "f1": "input()\nK = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(len(l)):\nif (K - l[i]) <= (l[i] - 0):\nans += (K - l[i]) * 2\nelif (l[i] - 0) < (K - l[i]):\nans += (l[i] - 0) * 2\nprint(ans)",
  "f2": "N = int(input())\nK = int(input())\nx = list(map(int,input().split()))\ntotal = 0\nfor i in range (N):\nif x[i]<K/2:\ntotal += 2*x[i]\nelif x[i]>= K/2:\ntotal += 2*(K-x[i])\nprint(total)",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03598/s489535047.py",
  "f2_idx": "./Project_CodeNet_Python800/p03598/s458924814.py",
  "response": "Yes"
 },
 {
  "f1": "a = input()\nb = input()\nprint('Yes' if a == b[:-1] else 'No')",
  "f2": "S = input()\nT = input()\nif S+T[-1]==T: print('Yes')\nelse: print('No')",
  "sim": 0.75,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02681/s651862349.py",
  "f2_idx": "./Project_CodeNet_Python800/p02681/s259355532.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c = list(map(int,input().strip().split()))\nans = ()\nif a <= c and c <= b:\nans = (\"Yes\")\nelif b <= c and c <= a:\nans = (\"Yes\")\nelse:\nans = (\"No\")\nprint(ans)",
  "f2": "a, b, c = map(int, input().split())\nprint(\"Yes\" if a <= c <= b or b <= c <= a else \"No\")",
  "sim": 0.72,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03067/s388043860.py",
  "f2_idx": "./Project_CodeNet_Python800/p03067/s165466555.py",
  "response": "Yes"
 },
 {
  "f1": "while True:\nm,f,r = [int(x) for x in input().split()]\nif (m,f,r)==(-1,-1,-1): break\ns_mf = m + f\nif   m < 0 or f < 0: mark = 'F'\nelif s_mf <  30:     mark = 'F'\nelif s_mf >= 80:     mark = 'A'\nelif s_mf >= 65:     mark = 'B'\nelif s_mf >= 50:     mark = 'C'\nelif r    >= 50:     mark = 'C'\nelse:                mark = 'D'\nprint(mark)",
  "f2": "while True:\nm,f,r=map(int,input().split())\nif m==f==r==-1 : break\n\nif m==-1 or f==-1 :\nprint('F')\n\nelif (m+f)>=80 :\nprint('A')\n\nelif 65<= (m+f) and (m+f)<80 :\nprint('B')\n\nelif 50<= (m+f) and (m+f)<65 :\nprint('C')\n\nelif 30<=(m+f) and (m+f)<50 :\nif 50<=r :\nprint('C')\nelse:\nprint('D')\n\nelif (m+f)<30 :\nprint('F')",
  "sim": 0.7608695652173914,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02411/s353357490.py",
  "f2_idx": "./Project_CodeNet_Python800/p02411/s079971435.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nimport collections\ninput = sys.stdin.readline\n\ns, t = map(str,input().split())\na, b = map(int, input().split())\nu = input().strip()\nif u == s:\nprint(a - 1, b)\nelse:\nprint(a, b - 1)",
  "f2": "import sys\ninput = sys.stdin.readline\nins = lambda: input().rstrip()\nini = lambda: int(input().rstrip())\ninm = lambda: map(int, input().split())\ninl = lambda: list(map(int, input().split()))\n\ns, t = map(str, input().split())\na, b = inm()\nu = ins()\nif u == s:\nprint(a-1, b)\nelse:\nprint(a, b-1)",
  "sim": 0.7428571428571429,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02777/s132728841.py",
  "f2_idx": "./Project_CodeNet_Python800/p02777/s529869254.py",
  "response": "Yes"
 },
 {
  "f1": "for i in range(1, 10):\nfor j in range(1, 10):\nprint(f'{i}x{j}={i * j}')\n",
  "f2": "\nfor i in range(1,10):\nfor j in range(1,10):\nprint(f'{i}x{j}={i*j}')\n",
  "sim": 0.8666666666666667,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p00000/s553234398.py",
  "f2_idx": "./Project_CodeNet_Python800/p00000/s664278203.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "A,B,C=map(str,input().split())\n\na=len(A)\nb=len(B)\n\nif A[a-1]==B[0] and B[b-1]==C[0]:\nprint('YES')\nelse:\nprint('NO')",
  "sim": 0.8571428571428571,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s222057259.py",
  "response": "Yes"
 },
 {
  "f1": "D,T,S = map(int,input().split())\nif D/S - T >0:\nprint('No')\nelse:\nprint('Yes')",
  "f2": "# A - Don't be late\n\nD, T, S = map(int, input().split())\n\nif (D + S - 1) // S <= T:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 0.7037037037037037,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02570/s680583335.py",
  "f2_idx": "./Project_CodeNet_Python800/p02570/s279937211.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\nA=[int(input()) for i in range(N)]\nif A[0]!=0:\nprint(-1)\nelse:\nflag=0\nfor i in range(1,N):\nif A[i]-A[i-1]>1:\nflag=1\nbreak\nif flag==1:\nprint(-1)\nelse:\nans=0\nfor i in range(1,N):\nif A[i-1]+1==A[i]:\nans+=1\nelse:\nans+=A[i]\nprint(ans)",
  "f2": "N = int( input())\nA = [ int( input()) for _ in range(N)]\nnow = 0\nans = 0\nif A[0] != 0:\nans = -1\nelse:\nfor i in range(1,N):\nif A[i] > i:\nans = -1\nbreak\nelif now + 1 == A[i]:\nans += 1\nnow += 1\nelif now >= A[i]:\nans += A[i]\nnow = A[i]\nelse:\nans = -1\nbreak\nprint(ans)",
  "sim": 0.8484848484848485,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03347/s543278881.py",
  "f2_idx": "./Project_CodeNet_Python800/p03347/s260135358.py",
  "response": "Yes"
 },
 {
  "f1": "# | Its_Rashid | #\na = int (input())\nprint(a) if a % 2 == 0 else print(a * 2)",
  "f2": "a = int(input())\nif a % 2 == 1:\nprint(a*2)\nelse:\nprint(a)",
  "sim": 0.7647058823529411,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03307/s317859431.py",
  "f2_idx": "./Project_CodeNet_Python800/p03307/s694433426.py",
  "response": "Yes"
 },
 {
  "f1": "k, a, b = map(int, input().split())\n\nif b-a <= 2 or k < a-1:\nprint(k+1)\n\nelse:\nans = ((k-(a-1))//2)*(b-a) + a +(k-(a-1))%2\nprint(ans)",
  "f2": "k,a,b=map(int,input().split())\nans=1\nyen=0\nif b<=a+2 or k<=a:\nans+=k\nelse:\nn=(k-a+1)//2\nans+=n*(b-a)+(k-2*n)\nprint(ans)",
  "sim": 0.8064516129032258,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03131/s676706208.py",
  "f2_idx": "./Project_CodeNet_Python800/p03131/s242444435.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [int(input()) for _ in range(m)]\nfor _ in range(n):\nprint(sum(a[_][i] * b[i] for i in range(m)))",
  "f2": "n, m = map(int, input().split())\na = [[v for v in list(map(int, input().split()))] for i in range(n)]\nb = [int(input()) for i in range(m)]\nc = [sum([a[i][j] * b[j] for j in range(m)]) for i in range(n)]\nprint('\\n'.join(map(str, c)))",
  "sim": 0.7419354838709677,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p02410/s758384010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02410/s887684539.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,c,d=map(int,input().split());print([a*b,c*d][a*b<c*d])",
  "f2": "a,b,c,d = map(int,input().split())\n\nans = a*b, c*d\n\nprint(max(ans))",
  "sim": 0.7142857142857143,
  "type": "ST3",
  "f1_idx": "./Project_CodeNet_Python800/p03826/s136388748.py",
  "f2_idx": "./Project_CodeNet_Python800/p03826/s845733377.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import deque\n\nn, q = map(int, input().split())\nt = 0\nqueue = deque([])\nfor _ in range(n):\nname, time = input().split()\ntime = int(time)\nqueue.append([name, time])\nwhile len(queue):\nif queue[0][1] > q:\nqueue[0][1] -= q\nt += q\nqueue.rotate(-1)\nelse:\nt += queue[0][1]\nqueue[0][1] = t\nprint(\" \".join(list(map(str, queue.popleft()))))",
  "f2": "from collections import deque\n\nn,p=map(int ,input().split())\nque=deque([])\n\nfor i in range(n):\nname,time=input().split()\ntime=int(time)\nque.append([name,time])\n\nt=0\nwhile len(que)>0:\natop=que.popleft()\nspend=min(atop[1],p)\natop[1]-=spend\nt+=spend\nif(atop[1]==0):\nprint(atop[0],t)\nelse:\nque.append(atop)",
  "sim": 0.6862745098039216,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02264/s056140102.py",
  "f2_idx": "./Project_CodeNet_Python800/p02264/s167051664.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\na = [list(map(int, input().split())) for _ in range(n)]\nb = [int(input()) for _ in range(m)]\nfor _ in range(n):\nprint(sum(a[_][i] * b[i] for i in range(m)))",
  "f2": "s=input().split()\nn=int(s[0])\nm=int(s[1])\na=[[0 for j in range(m)]for i in range(n)]\nb=[0 for j in range(m)]\nfor i in range(n):\nt=input().split()\nfor j in range(m):\na[i][j]=int(t[j])\nfor j in range(m):\nb[j]=int(input())\nc=[0 for i in range(n)]\nfor i in range(n):\nfor j in range(m):\nc[i]+=a[i][j]*b[j]\nprint(\"{0}\".format(c[i]))",
  "sim": 0.5882352941176471,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02410/s758384010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02410/s084791747.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nli = [0]*10050\n\nfor i in range(1,105):\nfor j in range(1,105):\nfor k in range(1,105):\ns = i*i+j*j+k*k+i*j+j*k+i*k\n\nif s<10050:\nli[s]+=1\n\nfor i in range(1,n+1):\nprint(li[i])",
  "f2": "f = [0] * 10001\nfor x in range(1, 100):\nfor y in range(1, 100):\nfor z in range(1, 100):\nn = x * x + y * y + z * z + x * y + y * z + z * x\nif n > 10000:\nbreak\nf[n] += 1\n\nN = int(input())\n\nfor i in range(1, N + 1):\nprint(f[i])",
  "sim": 0.5526315789473685,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02608/s669753933.py",
  "f2_idx": "./Project_CodeNet_Python800/p02608/s566588362.py",
  "response": "Yes"
 },
 {
  "f1": "a = list(map(int,input().split()))\nprint(-(-a[0]//(2*a[1]+1)))",
  "f2": "from math import ceil\na,b=map(int,input().split())\nprint(ceil(a/(b*2+1)))",
  "sim": 0.5555555555555556,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02970/s670787418.py",
  "f2_idx": "./Project_CodeNet_Python800/p02970/s898695004.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nimport sys\ninput = sys.stdin.buffer.readline\nH, W = (int(i) for i in input().split())\nA = [[int(i) for i in input().split()] for j in range(H)]\nans = []\nfor h in range(H):\nfor w in range(W):\nif A[h][w] % 2 == 1:\nif w != W-1:\nA[h][w] -= 1\nA[h][w+1] += 1\nans.append((h+1, w+1, h+1, w+2))\nelif h != H-1:\nA[h][w] -= 1\nA[h+1][w] += 1\nans.append((h+1, w+1, h+2, w+1))\nelse:\nif h != 0 and A[h-1][w] % 2 == 1:\nA[h-1][w] += 1\nA[h][w] -= 1\nans.append((h+1, w+1, h, w+1))\nelif w != 0 and A[h][w-1] % 2 == 1:\nA[h][w-1] += 1\nA[h][w] -= 1\nans.append((h+1, w+1, h+1, w))\n\nprint(len(ans))\nfor a in ans:\nprint(*a)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "import sys\nread = sys.stdin.buffer.read\nreadline = sys.stdin.buffer.readline\nreadlines = sys.stdin.buffer.readlines\nsys.setrecursionlimit(10 ** 7)\n\nh, w = map(int, readline().split())\na = [list(map(int, readline().split())) for _ in range(h)]\ncnt = 0\nbf = []\naf = []\nfor i in range(h):\nfor j in range(w):\nif a[i][j] % 2 == 1:\ncnt += 1\nbf.append([i + 1, j + 1])\nif j == w - 1:\nif i == h - 1:\ncnt -= 1\nbreak\na[i + 1][j] += 1\naf.append([i + 2, j + 1])\nelse:\na[i][j + 1] += 1\naf.append([i + 1, j + 2])\nprint(cnt)\nfor xy1, xy2 in zip(bf, af):\nprint(*(xy1 + xy2))",
  "sim": 0.5606060606060606,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03263/s150033960.py",
  "f2_idx": "./Project_CodeNet_Python800/p03263/s126281705.py",
  "response": "Yes"
 },
 {
  "f1": "h, w = map(int, input().split())\ns = [input() for _ in range(h)]\nhrz = [[0] * w for _ in range(h)]\nvrt = [[0] * w for _ in range(h)]\nfor i in range(h):\ncnt = 0\nfor j in range(w + 1):\nif j < w and s[i][j] == '.':\nif cnt == 0:\nstart = j\ncnt += 1\nelif cnt > 0:\nfor k in range(start, j):\nhrz[i][k] = cnt\ncnt = 0\nfor j in range(w):\ncnt = 0\nfor i in range(h + 1):\nif i < h and s[i][j] == '.':\nif cnt == 0:\nstart = i\ncnt += 1\nelif cnt > 0:\nfor k in range(start, i):\nvrt[k][j] = cnt\ncnt = 0\nans = max(hrz[i][j] + vrt[i][j] - 1 for i in range(h) for j in range(w))\nprint(ans)",
  "f2": "def main():\nH, W = map(int, input().split())\nS = [list(input()) for _ in range(H)]\n\nleft = [[-1]*W for _ in range(H)]\nright = [[-1]*W for _ in range(H)]\nup = [[-1]*W for _ in range(H)]\ndown = [[-1]*W for _ in range(H)]\n\nfor i in range(H):\nfor j in range(W):\nif S[i][j] == '.':\nif j == 0:\nleft[i][j] = 0\nelse:\nleft[i][j] = left[i][j-1] + 1\n\nfor i in range(H):\nfor j in range(W):\nif S[-1-i][-1-j] == '.':\nif j == 0:\nright[-1-i][-1-j] = 0\nelse:\nright[-1-i][-1-j] = right[-1-i][-1-(j-1)] + 1\n\nfor i in range(H):\nfor j in range(W):\nif S[i][j] == '.':\nif i == 0:\nup[i][j] = 0\nelse:\nup[i][j] = up[i-1][j] + 1\n\nfor i in range(H):\nfor j in range(W):\nif S[-1-i][-1-j] == '.':\nif i == 0:\ndown[-1-i][-1-j] = 0\nelse:\ndown[-1-i][-1-j] = down[-1-(i-1)][-1-j] + 1\n\nans = 0\ntemp = [0] * W\nfor i in range(H):\nfor j in range(W):\ntemp[j] = left[i][j] + right[i][j] + down[i][j] + up[i][j] + 1\nans = max(ans, max(temp))\nprint(ans)\n\nmain()",
  "sim": 0.5370370370370371,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03014/s789567758.py",
  "f2_idx": "./Project_CodeNet_Python800/p03014/s109505297.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "# coding: utf-8\n# Your code here!\nA=set(map(int,input().split()))\n\nif len(A)==2:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.6296296296296297,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s807871419.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = list(map(int,input().split()))\ncnt = 0\nfor i in range(N):\nminj = i\nfor j in range(i+1,N):\nif A[j] < A[minj]:\nminj = j\nif i != minj:\nA[i],A[minj] = A[minj],A[i]\ncnt += 1\nprint(*A)\nprint(cnt)\n",
  "f2": "#!/usr/bin/env python\n#-*- coding:utf-8 -*-\n\n\ndef selectionSort(arr, N):\ncounter = 0\nfor i in range(N):\nminj = i\nfor j in range(i,N):\nif arr[minj] > arr[j]:\nminj = j\nif minj != i: counter += 1\narr[i], arr[minj] = arr[minj],arr[i]\n\nreturn counter,arr\n\ndef main():\n\nN = int(raw_input())\nA = map(int, raw_input().split())\n\ncounter,sortedA = selectionSort(A, N)\nprint ' '.join(map(str,sortedA))\nprint counter\n\n#def test():\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.5102040816326531,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02260/s412559133.py",
  "f2_idx": "./Project_CodeNet_Python800/p02260/s011521710.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input(\"\"))\nlist1=[i for i in range(1,n+1) if(len(str(i))%2!=0)]\nprint(len(list1))",
  "f2": "def main():\nn = int(input())\nans = 0\nfor i in range(1, n+1):\nx = len(str(i))\nif x % 2:\nans += 1\nprint(ans)\n\nmain()",
  "sim": 0.6451612903225806,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02952/s273243003.py",
  "f2_idx": "./Project_CodeNet_Python800/p02952/s747056035.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\n\nk = 0\n\nwhile k == 0:\nr = raw_input()\nH, W = r.split()\nH = int(H)\nW = int(W)\n\nif H == 0 and W == 0:\nk = 1\nelse:\nfor j in range(H):\nfor i in range(W):\nif i == 0 or i == W-1 or j == 0 or j == H-1:\nsys.stdout.write(\"#\")\nelse:\nsys.stdout.write(\".\")\nprint(\"\")\nprint(\"\")",
  "f2": "while 1:\nH, W = map(int ,raw_input().split())\nif H == 0 and W == 0:\nbreak\nelse:\nfor i in range(H):\nif i == 0:\nprint ('#'*W)\nelif i == H-1:\nprint ('#'*W + '\\n')\nelse:\nprint ('#' + '.'*(W-2) + '#')",
  "sim": 0.5454545454545454,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02404/s095209821.py",
  "f2_idx": "./Project_CodeNet_Python800/p02404/s720657844.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nH = [int(x) for x in input().split()]\n\nif N == 1:\nprint(0)\nelse:\nans = []\nc = 0\nfor i in range(N - 1):\nif H[i] >= H[i + 1]:\nc += 1\nif i == N - 2:\nans.append(c)\nelif H[i] < H[i + 1]:\nans.append(c)\nc = 0\nprint(max(ans))",
  "f2": "def main():\nN = int(input())\nH = list(map(int, input().split()))\n\nnum_lower = [0]*(N)\n\nstep = 0\nh_right = H[-1]\nfor i in range(N-2, -1, -1):\nh = H[i]\nif h >= h_right:\nstep += 1\nelse:\nstep = 0\nnum_lower[i] = step\nh_right = h\n\nprint(max(num_lower))\n\nmain()",
  "sim": 0.5909090909090909,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02923/s860206730.py",
  "f2_idx": "./Project_CodeNet_Python800/p02923/s531508711.py",
  "response": "No"
 },
 {
  "f1": "a = input()\nb = a[::-1]\nc = 0\nfor i in range(int(len(a)/2)):\nif a[i] != b[i]:\nc += 1\nprint(c)",
  "f2": "import math\n\ndef main():\nS = input().rstrip()\nans = 0\nfor i in range(math.ceil(len(S) / 2)):\nif S[i] != S[-(i+1)]:\nans += 1\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.5526315789473685,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02836/s289223699.py",
  "f2_idx": "./Project_CodeNet_Python800/p02836/s659015261.py",
  "response": "Yes"
 },
 {
  "f1": "v = \"aeiou\"\nif input() in v:\nprint(\"vowel\")\nelse:\nprint(\"consonant\")",
  "f2": "boin = ['a','e','i','o','u']\nif input() in boin:\nprint(\"vowel\")\nelse:\nprint(\"consonant\")",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03852/s678307307.py",
  "f2_idx": "./Project_CodeNet_Python800/p03852/s705764329.py",
  "response": "Yes"
 },
 {
  "f1": "X,Y = map(int,input().split())\n\nans = [X]\nwhile 1:\nX *= 2\nif X <= Y:\nans.append(X)\nelse:\nbreak\nprint(len(ans))",
  "f2": "X,Y = map(int,input().split())\n\ncnt = 0\n\nwhile X <= Y:\nX += X\ncnt += 1\n\nprint(cnt)",
  "sim": 0.5517241379310345,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03479/s256369219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03479/s574917736.py",
  "response": "Yes"
 },
 {
  "f1": "#整数値入力 1文字の入力\ndef input_one_number():\nreturn int(input())\n\n#整数値龍力　複数の入力\ndef input_multiple_number():\nreturn map(int, input().split())\n\n#整数値龍力　複数の入力(配列)\ndef input_multiple_number_as_list():\nreturn list(map(int, input().split()))\n\n\nn,m = input_multiple_number()\n\n#UnionFind\nclass UnionFind():\ndef __init__(self, n):\nself.n = n\nself.parents = [-1] * n\n\n#要素xが属するグループの根を返す\ndef find(self, x):\nif self.parents[x] < 0:\nreturn x\nelse:\nself.parents[x] = self.find(self.parents[x])\nreturn self.parents[x]\n\n#要素xが属するグループと要素yが属するグループとを併合する\ndef union(self, x, y):\nx = self.find(x)\ny = self.find(y)\n\nif x == y:\nreturn\n\nif self.parents[x] > self.parents[y]:\nx, y = y, x\n\nself.parents[x] += self.parents[y]\nself.parents[y] = x\n\n#要素xが属するグループのサイズ（要素数）を返す\ndef getGroupSize(self, x):\nreturn -self.parents[self.find(x)]\n\n#要素x, yが同じグループに属するかどうかを返す\ndef isSame(self, x, y):\nreturn self.find(x) == self.find(y)\n\n#要素xが属するグループに属する要素をリストで返す\ndef members(self, x):\nroot = self.find(x)\nreturn [i for i in range(self.n) if self.find(i) == root]\n\n#すべての根の要素をリストで返す\ndef roots(self):\nreturn [i for i, x in enumerate(self.parents) if x < 0]\n\n#グループの数を返す\ndef getNumGroup(self):\nreturn len(self.roots())\n\ndef all_group_members(self):\nreturn {r: self.members(r) for r in self.roots()}\n\ndef __str__(self):\nreturn '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\n\nre = UnionFind(n)\n\nfor _ in range(m):\na,b = input_multiple_number()\nre.union(a-1,b-1)\n\nmmax = 0\nfor nood in re.roots():\ng = re.getGroupSize(nood)\nif mmax < g:\nmmax = g\nprint(mmax)",
  "f2": "#クラスカル法\nclass UnionFind():\ndef __init__(self, n):\nself.n = n\nself.parents = [-1] * n\n\ndef find(self, x): #親を返す\nif self.parents[x] < 0:\nreturn x\nelse:\nself.parents[x] = self.find(self.parents[x])\nreturn self.parents[x]\n\ndef unite(self, x, y): #和集合の生成\nx = self.find(x)\ny = self.find(y)\n\nif x == y:\nreturn\n\nif self.parents[x] > self.parents[y]:\nx, y = y, x\n\nself.parents[x] += self.parents[y]\nself.parents[y] = x\n\ndef size(self, x): #所属する集合の大きさ\nreturn -self.parents[self.find(x)]\n\ndef same(self, x, y): #同じ集合に属しているか判定\nreturn self.find(x) == self.find(y)\n\ndef members(self, x): #同じ集合に属する要素全列挙\nroot = self.find(x)\nreturn [i for i in range(self.n) if self.find(i) == root]\n\ndef roots(self): #集合のリーダー全列挙\nreturn [i for i, x in enumerate(self.parents) if x < 0]\n\ndef group_count(self): #集合の数\nreturn len(self.roots())\n\ndef all_group_members(self): #辞書型,{(リーダーの番号):(その集合の要素全列挙)}\nreturn {r: self.members(r) for r in self.roots()}\n\ndef __str__(self):\nreturn '\\n'.join('{}: {}'.format(r, self.members(r)) for r in self.roots())\n\nn,m=map(int,input().split())\nuf=UnionFind(n)\nfor i in range(m):\na,b=map(int,input().split())\nuf.unite(a-1,b-1)\nprint(-min(uf.parents))",
  "sim": 0.5851063829787234,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02573/s585669816.py",
  "f2_idx": "./Project_CodeNet_Python800/p02573/s483885992.py",
  "response": "Yes"
 },
 {
  "f1": "input()\nK = int(input())\nl = list(map(int,input().split()))\nans = 0\nfor i in range(len(l)):\nif (K - l[i]) <= (l[i] - 0):\nans += (K - l[i]) * 2\nelif (l[i] - 0) < (K - l[i]):\nans += (l[i] - 0) * 2\nprint(ans)",
  "f2": "def resolve():\nn = int(input())\nk = int(input())\npos = list(map(int, input().split()))\n\nans = 0\nfor i in range(n):\nla = abs(pos[i] - 0)\nlb = abs(pos[i] - k)\nif la <= lb:\nans += la*2\nelse:\nans += lb*2\nprint(ans)\nresolve()",
  "sim": 0.65,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03598/s489535047.py",
  "f2_idx": "./Project_CodeNet_Python800/p03598/s312838770.py",
  "response": "Yes"
 },
 {
  "f1": "mod = 10**9+7\nH, W = map(int, input().split())\nG = [input() for i in range(H)]\ndp = [[0]*W for i in range(H)]\ndp[0][0] = 1\nfor i in range(H):\nfor j in range(W):\nif G[i][j] == '.':\nif i - 1 >= 0:\nif j - 1 >= 0:\ndp[i][j] = (dp[i-1][j] + dp[i][j-1])%mod\nelse:\ndp[i][j] = dp[i-1][j]\nelif j - 1 >= 0:\ndp[i][j] = dp[i][j-1]\nprint(dp[H-1][W-1])",
  "f2": "r,c=map(int,input().split())\nmod=10**9+7\ng=[]\nfor _ in range(r):\ng.append(input())\ndp=[[0 for j in range(c)] for i in range(r)]\ndp[0][0]=1\nfor i in range(r):\nfor j in range(c):\nif g[i][j]=='.':\nif i>0:\ndp[i][j]+=dp[i-1][j]%mod\nif j>0:\ndp[i][j]+=dp[i][j-1]%mod\n\n\nprint(dp[-1][-1]%mod)\n",
  "sim": 0.6956521739130435,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03167/s097948319.py",
  "f2_idx": "./Project_CodeNet_Python800/p03167/s545517002.py",
  "response": "Yes"
 },
 {
  "f1": "po=pow(10,9)+7\nn,k=map(int,input().split())\ncc=0\nfor i in range(k,n+2):\ncc+=(n*i-i*(i-1)+1)%po\nprint(cc%po)",
  "f2": "N, K = map(int,input().split())\nans = 0\nwhile K <= N+1:\nans += ((N+1)*(N+2) - (N-K+1)*(N-K+2) - K*(K+1)) // 2 + 1\nK += 1\nprint(ans % (10 ** 9 + 7))",
  "sim": 0.5789473684210527,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02708/s351441251.py",
  "f2_idx": "./Project_CodeNet_Python800/p02708/s229835082.py",
  "response": "Yes"
 },
 {
  "f1": "num = list(map(int, input().split()))\nnum.sort()\n\nx = num[2] * 3 - sum(num)\n\nif x%2 == 0:\nans = int(x/2)\nelse:\nans = int(x//2 + 2)\n\nprint(ans)",
  "f2": "a,b,c=map(int,input().split())\nL=[a,b,c]\nma = max(L)\nmi = min(L)\nif sum(L)%2 == ma%2:\nprint((3*ma-sum(L))//2)\nelse:\nma += 1\nprint((3*(ma)-sum(L))//2)",
  "sim": 0.5609756097560976,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03387/s512155836.py",
  "f2_idx": "./Project_CodeNet_Python800/p03387/s588304214.py",
  "response": "Yes"
 },
 {
  "f1": "x, k, d = map(int, input().split())\n\nx = abs(x)\nif x ==0:\nans = d * (k % 2)\nelif x - d * k  >= 0:\nans = x - d * k\nelse:\nif abs(x - x // d * d) <= abs(x - (x // d + 1) * d):\ndiv = x // d\nelse:\ndiv = x // d + 1\nif (k - div) % 2 == 0:\nans = abs(x - d * div)\nelse:\nans = min(abs(x - d * div + d),abs(x - d * div - d))\nprint(ans)",
  "f2": "X, K, D = map(int, input().split())\nX = abs(X)\ndiv, mod = divmod(X, D)\nif X > D * K:\nans = X - D * K\nelif (K - div) % 2 == 0:\nans = mod\nelse:\nans = D - mod\nprint(ans)",
  "sim": 0.6052631578947368,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02584/s875232862.py",
  "f2_idx": "./Project_CodeNet_Python800/p02584/s202551529.py",
  "response": "Yes"
 },
 {
  "f1": "a = input()\nb = a[::-1]\nc = 0\nfor i in range(int(len(a)/2)):\nif a[i] != b[i]:\nc += 1\nprint(c)",
  "f2": "import sys\ninput = sys.stdin.readline\n\ns = list(input())\n\na = 0\n\n#print(len(s))\n\nfor i in range((len(s) - 1) // 2):\n#print(s[i], s[-2-i])\nif s[i] != s[-2-i]:\na += 1\n\nprint(a)",
  "sim": 0.6,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02836/s289223699.py",
  "f2_idx": "./Project_CodeNet_Python800/p02836/s066946291.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nf = [list(map(int,input().split())) for i in range(n)]\np = [list(map(int,input().split())) for i in range(n)]\nprint(max(sum(p[j][sum(i>>k&1 and f[j][k] for k in range(10))] for j in range(n)) for i in range(1,2**10)))",
  "f2": "N = int(input())\nF=[]\nfor _ in range(N):\nF.append(int(''.join(input().split()), 2))\nP=[]\nfor _ in range(N):\nP.append(list(map(int, input().split())))\n#print(N)\n#print(list(map(bin, F)))\n#print(P)\n\nprofit_list=[]\nfor i in range(1, 2 ** 10):\nprofit=0\nfor k in range(N):\nkaburi = i & F[k]\n#print(bin(i), bin(F[k]), bin(kaburi))\nkaburi_count=0\nfor j in range(10):\nif ((kaburi >> j) & 1):\nkaburi_count+=1\nprofit+=P[k][kaburi_count]\nprofit_list.append(profit)\n#print(profit_list)\nprint(max(profit_list))",
  "sim": 0.5098039215686274,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03503/s890424557.py",
  "f2_idx": "./Project_CodeNet_Python800/p03503/s609409361.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int,input().split()))\nans = []\ncnt = 0\nfor i in range(1,n-1,2):\ncnt += a[i]*2\nans.append(sum(a)-cnt)\nfor i in range(n):\nans.append(a[i]*2-ans[i])\nprint(*ans[:-1])",
  "f2": "def main():\nn = int(input())\nA = list(map(int, input().split()))\nA += A\nans = [0] * n\ns1 = sum(A[:n - 1:2])\ns2 = sum(A[1:n:2])\nfor i in range(n):\nif i % 2 == 0:\ns1 += A[i + n - 1]\nans[i] = s1 - s2\ns1 -= A[i]\nelse:\ns2 += A[i + n - 1]\nans[i] = s2 - s1\ns2 -= A[i]\nprint(' '.join(list(map(str, ans))))\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.5869565217391305,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02984/s746445956.py",
  "f2_idx": "./Project_CodeNet_Python800/p02984/s285075352.py",
  "response": "Yes"
 },
 {
  "f1": "# -*- coding: utf-8 -*-\n\"\"\"\nCreated on Thu May 14 18:16:23 2020\n\n@author: shinba\n\"\"\"\n\ns = input()\n\nstart = s[0]\ncnt1 = 0\n\nfor i in range(1,len(s)):\nif s[i] == start:\ncontinue\ncnt1 += 1\nstart = s[i]\n\nstart = s[-1]\ncnt2 = 0\n\nfor i in range(len(s)-1,-1,-1):\nif s[i] == start:\ncontinue\ncnt2 += 1\nstart = s[i]\n\nprint(min(cnt1,cnt2))",
  "f2": "def main():\nS = input()\nanswer = 0\n\nfor i in range(1,len(S)):\nif S[i-1] != S[i]:\nanswer += 1\n\nprint(answer)\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.5714285714285714,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03945/s473141427.py",
  "f2_idx": "./Project_CodeNet_Python800/p03945/s207315057.py",
  "response": "Yes"
 },
 {
  "f1": "from sys import stdin\nnii=lambda:map(int,stdin.readline().split())\nlnii=lambda:list(map(int,stdin.readline().split()))\n\nn=int(input())\na=lnii()\n\nans=[0 for i in range(n)]\nfor i in a:\ni-=1\nans[i]+=1\n\nfor i in ans:\nprint(i)",
  "f2": "import collections\n\nn = int(input())\na  = list(map(int,input().split()))\nb = collections.Counter(a)\nfor d in range(n):\nprint(b[d+1])",
  "sim": 0.5526315789473685,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02707/s599604531.py",
  "f2_idx": "./Project_CodeNet_Python800/p02707/s419660166.py",
  "response": "Yes"
 },
 {
  "f1": "N, H, W = tuple(map(int, input().split()))\nans = 0\nfor i in range(N):\na, b = tuple(map(int, input().split()))\nif H <= a and W <= b:\nans += 1\nprint(ans)",
  "f2": "#coding:utf-8\n\nn = list(map(int,input().split()))\nalist = [list(map(int,input().split())) for i in range(n[0])]\n\nres = 0\n\nfor i in range(n[0]):\nif n[1] <= alist[i][0] and n[2] <= alist[i][1]:\nres += 1\n\nprint(res)",
  "sim": 0.5833333333333334,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03193/s780460021.py",
  "f2_idx": "./Project_CodeNet_Python800/p03193/s645947188.py",
  "response": "Yes"
 },
 {
  "f1": "import fractions\nn=int(input())\na=list(map(int,input().split()))\nans=fractions.gcd(a[0],a[1])\nfor i in range(2,len(a)):\nans=fractions.gcd(ans,a[i])\nprint(ans)",
  "f2": "import fractions\n\nN = int(input())\nA = list(input().split())\nmonster = list(sorted([int(A[i]) for i in range(N)]))\nans = float('inf')\nMIN = monster[0]\n\nfor i in range(N):\ntmp = monster[i]\nans = min(ans, int(fractions.gcd(tmp, MIN)))\n\nprint(ans)",
  "sim": 0.5945945945945946,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03127/s065938637.py",
  "f2_idx": "./Project_CodeNet_Python800/p03127/s699042968.py",
  "response": "No"
 },
 {
  "f1": "n,m=map(int,input().split())\nl=[]\nr=[]\nfor j in range(m):\ntempl,tempr=map(int,input().split())\nl.append(templ)\nr.append(tempr)\nans=min(r)-max(l)+1\nif ans<0:\nans=0\nprint(ans)",
  "f2": "import numpy as np\nN,M=map(int,input().strip().split())\nLR=np.array([list(map(int,input().strip().split())) for _ in range(M)])\nprint(max(min(LR[:,1])-max(LR[:,0])+1,0))",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03037/s615698126.py",
  "f2_idx": "./Project_CodeNet_Python800/p03037/s416170009.py",
  "response": "Yes"
 },
 {
  "f1": "k,t = map(int,input().split())\nai = [int(i) for i in input().split()]\n\nai.sort(reverse=True)\n\nprint(max(0,ai[0]-(sum(ai)-ai[0])-1))",
  "f2": "k,t=map(int,input().split())\na=list(map(int,input().split()))\nm=max(a)\nn=k-m\nprint(max(m-n-1,0))",
  "sim": 0.5333333333333333,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03958/s462701489.py",
  "f2_idx": "./Project_CodeNet_Python800/p03958/s926618200.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\nans=1e10\nfor i in range(1,n//2+1):\nans=min(ans,sum(map(int,list(str(i))))+sum(map(int,list(str(n-i)))))\nprint(ans)",
  "f2": "n=int(input())\nans=10**18\nfor a in range(1,n):\nb=n-a\ntmp=0\nfor aa in str(a):\ntmp+=int(aa)\nfor bb in str(b):\ntmp+=int(bb)\nans=min(ans,tmp)\nprint(ans)",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03331/s596654415.py",
  "f2_idx": "./Project_CodeNet_Python800/p03331/s914187097.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int, input().split()))\n\na.sort(reverse=True)\npoint_sum = 0\n\nfor i in range(1, n+1):\npoint_sum += a[i*2 - 1]\n\nprint(point_sum)",
  "f2": "#!/usr/bin/env python3\nn, *a = map(int, open(0).read().split())\na.sort()\nprint(sum(a[i] for i in range(n, 3 * n, 2)))",
  "sim": 0.5833333333333334,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03767/s015156443.py",
  "f2_idx": "./Project_CodeNet_Python800/p03767/s090312402.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = [int(x) for x in input().split()]\nans = 'No'\nfor i in range(n):\nif a[i] % 4 == 0:\na[i] = 4\nelif a[i] % 2 == 0:\na[i] = 2\nelse:\na[i] = 1\n\nif a.count(2) != 0:\nif a.count(4) >= a.count(1):\nans = 'Yes'\nelse:\nif a.count(4) + 1 >= a.count(1):\nans = 'Yes'\nprint(ans)",
  "f2": "n = int(input())\na = list(map(int, input().split()))\n\ncnt4 = 0\ncnt2 = 0\nfor i in a:\nif i % 4 == 0:\ncnt4 += 1\nelif i % 2 == 0:\ncnt2 += 1\n\nif cnt4 >= n//2:\nprint('Yes')\nelif 2 * cnt4 >= n - cnt2:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 0.6046511627906976,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03637/s421943253.py",
  "f2_idx": "./Project_CodeNet_Python800/p03637/s019702960.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\ns=input()\nt=input()\nfor i in range(N+1):\nfor j in range(N-i):\nif s[i+j]!=t[j]:\nbreak\nelse:\nprint(N+i)\nbreak",
  "f2": "N = int(input())\n\nS = input()\nT = input()\nx = 0\nfor i in range(N, 0, -1):\nif S[-i:] == T[:i]:\nx = i\nbreak\n\nprint(N*2-x)",
  "sim": 0.5625,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03951/s280300084.py",
  "f2_idx": "./Project_CodeNet_Python800/p03951/s429015061.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nS = input()\nassert len(S) == N\ncount = 0\n\n# j-i = k-jを探す\nfor i in range(0, len(S)-2):\nfor j in range(i+1, len(S)-1):\nk = j + (j - i)\nif k < len(S):\nif S[i] != S[j] and S[j] != S[k] and S[k] != S[i]:\ncount += 1\nnumR = 0\nnumG = 0\nnumB = 0\nfor s in S:\nif s == 'R':\nnumR += 1\nelif s == 'G':\nnumG += 1\nelse:\nnumB += 1\n\nprint(numR * numG * numB - count)",
  "f2": "n = int(input())\ns = input()\n\nfreq = {'R': 0, 'G': 0, 'B': 0}\nfor x in s:\nfreq[x] += 1\n\nans = freq['R'] * freq['G'] * freq['B']\nfor i in range(n-2):\nfor j in range(i+1, n-1):\nk = j + (j-i)\nif k < n and s[i] != s[j] and s[i] != s[k] and s[j] != s[k]:\nans -= 1\n\nprint(ans)",
  "sim": 0.6,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02714/s502113877.py",
  "f2_idx": "./Project_CodeNet_Python800/p02714/s033843075.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nfrom math import ceil\nn, h, *ab = map(int, open(0).read().split())\n\n*c, = map(lambda x: -x, ab[::2])\nd = sorted(c + ab[1::2], key=abs, reverse=True)\nans = 0\nfor x in d:\nif x < 0:\nans += ceil(h / abs(x))\nbreak\n\nh -= x\nans += 1\nif h <= 0:\nbreak\n\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "import sys\n\nn, h = map(int, input().split())\na = [list(map(int, x.split())) for x in sys.stdin.readlines()]\na.sort(reverse=True)\nb = sorted(a, key=lambda x:x[1], reverse=True)\ncnt = 0\nfor i in b:\nif i[1] < a[0][0]:\nbreak\ncnt += 1\nh -= i[1]\nif h <= 0:\nprint(cnt)\nexit()\nprint(cnt + -(-h//a[0][0]))",
  "sim": 0.5238095238095238,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03472/s257502294.py",
  "f2_idx": "./Project_CodeNet_Python800/p03472/s002816419.py",
  "response": "No"
 },
 {
  "f1": "import sys\nsys.setrecursionlimit(10**9)\n\n\nN, Q = map(int, input().split())\nto = [[] for _ in range(N)]\nans = [0] * N\n\nfor _ in range(N - 1):\na, b = map(lambda x:int(x) - 1, input().split())\nto[a].append(b)\nto[b].append(a)\n\n\ndef dfs(v, p=-1):\nglobal ans\nfor nv in to[v]:\nif nv == p:\ncontinue\nans[nv] += ans[v]\ndfs(nv, v)\n\n\ndef main():\nglobal ans\nfor _ in range(Q):\np, x = map(int, input().split())\np -= 1\nans[p] += x\ndfs(0)\nprint(*ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "import sys\nfrom collections import defaultdict as dd\nsys.setrecursionlimit(4100000)\n\ndef dfs(node):\nvisited[node-1] = True\n\nfor next_node in tree[node]:\nif visited[next_node-1]:\ncontinue\ncounter[next_node-1] += counter[node-1]\ndfs(next_node)\n\nN, Q = map(int, input().split())\ntree = dd(list)\nvisited = [False] * N\ncounter = [0] * N\noperation = []\nfor _ in range(N-1):\na, b = map(int, input().split())\ntree[a].append(b)\ntree[b].append(a)\nfor _ in range(Q):\noperation.append(tuple(map(int, input().split())))\n\nfor p, x in operation:\ncounter[p-1] += x\ndfs(1)\nprint(*counter)",
  "sim": 0.5454545454545454,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02936/s626496808.py",
  "f2_idx": "./Project_CodeNet_Python800/p02936/s833659893.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int,input().split()))\nt = ['0'] * n\n\nfor i in range(n):\nt[a[i] - 1] = str(i + 1)\n\nprint(' '.join(t))",
  "f2": "import sys\ninput=sys.stdin.readline\n\nn=int(input())\nlst=list(map(int,input().split()))\nfor i in range(n):\nlst[i]=[lst[i]]\nfor i in range(n):\nlst[i].append(i)\nlst=sorted(lst,key=lambda x:x[0])\nans=[]\nfor i in lst:\nans.append(i[1]+1)\nprint(\" \".join(map(str,ans)))",
  "sim": 0.5476190476190477,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02899/s527180965.py",
  "f2_idx": "./Project_CodeNet_Python800/p02899/s707011025.py",
  "response": "No"
 },
 {
  "f1": "A, B, C = map(int, input().split())\n\nif (A == B and B == C) or (A != B and B != C and A != C):\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "f2": "A = set(map(int,input().split()))\nprint(\"Yes\" if len(A)==2 else \"No\")",
  "sim": 0.64,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02771/s379580554.py",
  "f2_idx": "./Project_CodeNet_Python800/p02771/s452203933.py",
  "response": "Yes"
 },
 {
  "f1": "import collections\n\nn = int(input())\ngraph = [[] for i in range(n + 1)]\nedge = []\nfor i in range(n - 1):\na, b = map(int, input().split())\nedge.append((a, b))\ngraph[a].append(b)\ngraph[b].append(a)\ncolor = {}\nqueue = collections.deque([(1, 0)])\nwhile queue:\ntemp = queue.popleft()\nnum = temp[0]\nprev = temp[1]\nif prev:\ncol = color[(prev, num)]\nelse:\ncol = 0\ncount = 1\nfor i in graph[num]:\na, b = min(i, num), max(i, num)\nif (a, b) in color.keys():\ncontinue\nelse:\nif count == col:\ncolor[(a, b)] = count + 1\ncount += 2\nelse:\ncolor[(a, b)] = count\ncount += 1\nqueue.append((i, num))\nprint(max([len(graph[i]) for i in range(n + 1)]))\nfor i, j in edge:\nprint(color[(i, j)])",
  "f2": "n = int(input())\nbranch = [[] for _ in range(n)]\na, b, inda, indb = [], [], [], []\nfor _ in range(n-1):\ni, j = map(int, input().split())\ni -= 1\nj -= 1\nbranch[i].append(j)\nbranch[j].append(i)\na.append(i)\nb.append(j)\ninda.append(len(branch[i])-1)\nindb.append(len(branch[j])-1)\n\nkind = max([len(i) for i in branch])\nprint(kind)\n\n# DFS\ncolor = [0 for _ in range(n)]\ntodo = [0]\ncolor[0] = 1\nwhile len(todo) > 0:\nnum = todo.pop(-1)\ncol = color[num]\nif col == kind:\ncol = 1\nelse:\ncol = col + 1\nfor i in range(len(branch[num])):\nif color[branch[num][i]] == 0:\ncolor[branch[num][i]] = col\ntodo.append(branch[num][i])\nbranch[num][i] = -col\nif col == kind:\ncol = 1\nelse:\ncol = col + 1\n\n\nfor i in range(n-1):\nif branch[a[i]][inda[i]] < 0:\nprint(-branch[a[i]][inda[i]])\nelse:\nprint(-branch[b[i]][indb[i]])",
  "sim": 0.5555555555555556,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02850/s837720284.py",
  "f2_idx": "./Project_CodeNet_Python800/p02850/s217668344.py",
  "response": "Yes"
 },
 {
  "f1": "import math\na,b,c,d = map(int,input().split())\na-=1\ne = c*d//math.gcd(c,d)\nprint(b-b//c-b//d+b//e-(a-a//c-a//d+a//e))",
  "f2": "import math\na,b,c,d=map(int,input().split())\nn,m,k=0,0,0\n\nif a%c==0:\nn=b//c-a//c+1\nelse:\nn=b//c-a//c\nif a%d==0:\nm=b//d-a//d+1\nelse:\nm=b//d-a//d\ne=(c*d)//math.gcd(c,d)\nif a%e==0:\nk=b//e-a//e+1\nelse:\nk=b//e-a//e\nk=n+m-k\nprint(b-a-k+1)",
  "sim": 0.696969696969697,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02995/s898488359.py",
  "f2_idx": "./Project_CodeNet_Python800/p02995/s659368574.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nAs = list(map(int, input().split()))\nBs = list(map(int, input().split()))\nfrom itertools import accumulate\ncs = [a-b for a,b in zip(As,Bs)]\ncs.sort(reverse=True)\n#負の数を埋めるのに、正の数を何個使うか\np = [0]+[c for c in cs if c > 0]\nm = [c for c in cs if c < 0]\n\n\nans = 0\n\nm_all = sum(m)\nacc = list(accumulate(p))\nans += len(m)\nfor i,p in enumerate(acc):\nif p >= -m_all:\nbreak\nans += i\n\n\nif sum(As) < sum(Bs):\nprint(-1)\nelse:\nprint(ans)",
  "f2": "import heapq\nn = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nans = 0\nasum = sum(a)\nc = []\ncsum = 0\nnum = []\nfor i,j in zip(a,b):\nif i<j:\ni = i + (j-i)\nans += 1\nif i>j:\nheapq.heappush(num, -1*(i-j))\ncsum += i\n\n\nwhile csum>asum and len(num):\ni = heapq.heappop(num)*-1\ncsum -= i\nans += 1\n\nif csum>asum: ans = -1\n\nprint(ans)\n",
  "sim": 0.5396825396825397,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03151/s531131509.py",
  "f2_idx": "./Project_CodeNet_Python800/p03151/s501305624.py",
  "response": "No"
 },
 {
  "f1": "X,Y = map(int,input().split())\n\nans = [X]\nwhile 1:\nX *= 2\nif X <= Y:\nans.append(X)\nelse:\nbreak\nprint(len(ans))",
  "f2": "x, y = map(int, input().split())\nc=0\nwhile(1):\nif y>=x:\nc+=1\nx*=2\nelse:\nbreak\nprint(c)",
  "sim": 0.5625,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03479/s256369219.py",
  "f2_idx": "./Project_CodeNet_Python800/p03479/s206867140.py",
  "response": "Yes"
 },
 {
  "f1": "ma = lambda :map(int,input().split())\nn,u,v = ma()\nu,v = u-1,v-1\ntree = [[] for i in range(n)]\nimport collections\n\nfor i in range(n-1):\na,b = ma()\ntree[a-1].append(b-1)\ntree[b-1].append(a-1)\nque = collections.deque([(v,0)])\nvis = [False]*n\ndist_v = [0]*n\nwhile que:\nnow,c = que.popleft()\nvis[now] = True\ndist_v[now] = c\nfor node in tree[now]:\nif not vis[node]:\nque.append((node,c+1))\nque = collections.deque([(u,0)])\nvis = [False]*n\ndist_u = [0]*n\nwhile que:\nnow,c = que.popleft()\nvis[now] = True\ndist_u[now] = c\nfor node in tree[now]:\nif not vis[node]:\nque.append((node,c+1))\nans = 0\nfor i in range(n):\nif dist_u[i] < dist_v[i]:\nans = max(ans,dist_v[i])\nprint(ans-1)",
  "f2": "from collections import deque\n\nN, U, V = map(int, input().split())\nX = [list(map(int, input().split())) for _ in range(N - 1)]\n\ntree = [[] for _ in range(N + 1)]\nfor a, b in X:\ntree[a].append(b)\ntree[b].append(a)\n\ndef find_dist(s):\ndist = [-1] * (N + 1)\ndist[s] = 0\nq = deque()\nq.append(s)\nwhile q:\nu = q.popleft()\nfor v in tree[u]:\nif dist[v] >= 0:\ncontinue\n\ndist[v] = dist[u] + 1\nq.append(v)\n\nreturn dist\n\n\ndist_u = find_dist(U)\ndist_v = find_dist(V)\n\nans = 0\nfor i in range(1, N + 1):\nif dist_u[i] <= dist_v[i]:\nans = max(ans, dist_v[i] - 1)\n\nprint(ans)\n",
  "sim": 0.5757575757575758,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02834/s256141489.py",
  "f2_idx": "./Project_CodeNet_Python800/p02834/s591611262.py",
  "response": "Yes"
 },
 {
  "f1": "# completed\ndef print_list(ele_list):\nprint(\" \".join(map(str, ele_list)))\n\ndef bubble_sort(ele_list):\nlen_ele_list = len(ele_list)\nnum_swap = 0\nfor i in range(0, len_ele_list):\nfor j in range(len_ele_list-1, i, -1):\nif ele_list[j] < ele_list[j-1]:\nkey = ele_list[j]\nele_list[j] = ele_list[j-1]\nele_list[j-1] = key\nnum_swap += 1\nprint_list(ele_list)\nprint(num_swap)\n\nN = int(input())\nele_list = list(map(int, input().split()))\n\nbubble_sort(ele_list)",
  "f2": "def bubbleSort(A, N):\nflag = True\ncount = 0\nwhile flag:\nflag = 0\nfor j in range(N-1, 0, -1):\nif A[j] < A[j-1]:\ntmp = A[j]\nA[j] = A[j-1]\nA[j-1] = tmp\nflag = 1\ncount += 1\nprint(*A)\nprint(count)\n\n\narr_length = int(input())\narr_num = [int(i) for i in input().split(\" \")]\n\nbubbleSort(arr_num, arr_length)",
  "sim": 0.5416666666666666,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02259/s849360202.py",
  "f2_idx": "./Project_CodeNet_Python800/p02259/s255429630.py",
  "response": "Yes"
 },
 {
  "f1": "def sep():\nreturn map(int,input().strip().split(\" \"))\ndef lis():\nreturn list(sep())\n\na,b=sep()\nfor i in range(1,10005):\nif (i*8)//100==a and (i*10)//100==b:\nprint(i)\nquit()\nprint(-1)",
  "f2": "a,b=map(int,input().split())\nfor i in range(1,5000):\nif(i*8//100==a and i*1//10==b):\nprint(i)\nexit()\nelse:\nprint(-1)",
  "sim": 0.6923076923076923,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02755/s364693699.py",
  "f2_idx": "./Project_CodeNet_Python800/p02755/s999864974.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\ndigit = ''.join(['0',str(n),'b'])\ncost = [0] + [m*10**5+1] * (2**n-1)\nfor i in range(m):\na, b = map(int,input().split())\nc = list(map(int, input().split()))\ncc = 0\nfor j in c:\ncc += 2**(j-1)\nfor j in range(2**n):\njj = j | cc\ncost[jj] = min(cost[jj],cost[j]+a)\nif cost[-1] == m*10**5+1:\nprint(-1)\nelse:\nprint(cost[-1])",
  "f2": "n,m=map(int,input().split())\ninf=10**9\ncost=[inf for i in range(m)]\nfor i in range(m):\na,b=map(int,input().split())\nc=[int(x)-1 for x in input().split()]\ns=0\nfor j in c:\ns|=1<<j\ncost[i]=[s,a]\n#print(cost)\n\ndp=[inf]*(1<<n)\ndp[0]=0\nfor s in range(1<<n):\nfor bit,c in cost:\ndp[s|bit]=min(dp[s|bit], dp[s]+c)\n#print(dp)\nprint(-1 if dp[-1]==inf else dp[-1])\n",
  "sim": 0.6206896551724138,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02901/s951923165.py",
  "f2_idx": "./Project_CodeNet_Python800/p02901/s030064403.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nsys.setrecursionlimit(10**9)\n\nN,M = map(int,input().split())\nG = [[] for _ in [0]*N]\n\nfor _ in [0]*M:\na, b, d = map(int, input().split())\na -= 1\nb -= 1\nG[a].append((b, d))\nG[b].append((a, -d))\n\nX = [None]*N\n\ndef dfs(i, x=0):\nfor j, d in G[i]:\nif X[j] is None:\nX[j] = x+d\ndfs(j, x+d)\nelif X[j] != x+d:\nprint('No')\nexit()\n\nfor i in range(N):\nif X[i] is not None:\ncontinue\nX[i] = 0\ndfs(i)\nprint('Yes')",
  "f2": "N, M = map(int, input().split())\n\nlinks = [[] for _ in range(N + 1)]\nfor _ in range(M):\nL, R, D = map(int, input().split())\nlinks[L].append((R, D))\nlinks[R].append((L, -D))\n\nt = [None] * (N + 1)\nfor i in range(1, N + 1):\nif t[i] is not None:\ncontinue\nt[i] = 0\ns = [i]\nwhile s:\nj = s.pop()\nfor k, l in links[j]:\nif t[k] is None:\nt[k] = t[j] + l\ns.append(k)\nelse:\nif t[k] != t[j] + l:\nprint('No')\nexit()\nprint('Yes')",
  "sim": 0.5714285714285714,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03450/s901742610.py",
  "f2_idx": "./Project_CodeNet_Python800/p03450/s856880757.py",
  "response": "Yes"
 },
 {
  "f1": "from functools import lru_cache\n\n@lru_cache\ndef comb(n, k):\nif k == 0:\nreturn 1\nelif n == k:\nreturn 1\nelse:\nreturn comb(n-1, k) + comb(n-1, k-1)\n\nN, A, B = map(int, input().split())\nvs = sorted(map(int, input().split()), reverse = True)\n\nprint(sum(vs[:A]) / A)\nv_replaceable = vs[A]\n\nn = vs.count(v_replaceable)\na = A - vs.index(v_replaceable)\nb = min(n, B - vs.index(v_replaceable))\n\nif vs[0] == v_replaceable:\n#n個からa~b個を選ぶ選び方が答え。\nprint(sum(comb(n, t) for t in range(a, b+1)))\nelse:\n#n個からa個を選ぶ選び方が答え。\nprint(comb(n, a))",
  "f2": "import math\ndef nCr(n,r):\nreturn (math.factorial(n)//(math.factorial(r)*math.factorial(n-r)))\nN, A, B = map(int,input().split())\nv = sorted(list(map(int,input().split())), reverse = True)\nprint(sum(v[:A])/A)\n\nt = v[A-1]\nm, u = 0, 0\nfor k in range(A):\nif v[k] == t:\nm += 1\nfor k in range(A,N):\nif v[k] == t:\nu += 1\nif m == A:\nans = 0\nfor k in range(A,min(A+u+1,B+1)):\nans += nCr(m+u,k)\nprint(ans)\nelse:\nprint(nCr(m+u,m))",
  "sim": 0.59375,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03776/s360145241.py",
  "f2_idx": "./Project_CodeNet_Python800/p03776/s726902683.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,x,y = map(int,input().split())\nprint(a*b/2,int(x*2==a and y*2==b))",
  "f2": "w,h, x,y = map(int,input().split())\nans = w*h/2\nif w%2==0 and h%2==0:\nif w//2==x and h//2==y:\nprint(ans, 1)\nelse:\nprint(ans, 0)\nelse:\nprint(ans, 0)",
  "sim": 0.5862068965517241,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03001/s802655905.py",
  "f2_idx": "./Project_CodeNet_Python800/p03001/s479252408.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\n\nh = [2,4,5,7,9]\np = [0,1,6,8]\nb = [3]\n\nif h.count(N%10)==1:\nprint('hon')\nif p.count(N%10)==1:\nprint('pon')\nif b.count(N%10)==1:\nprint('bon')",
  "f2": "N = str(input())\ns = int(N[-1])\nif s in [2, 4, 5, 7, 9]:\nprint('hon')\nelif s in [0, 1, 6, 8]:\nprint('pon')\nelse:\nprint('bon')",
  "sim": 0.6153846153846154,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02675/s404221594.py",
  "f2_idx": "./Project_CodeNet_Python800/p02675/s018604765.py",
  "response": "Yes"
 },
 {
  "f1": "T,X =list(map(float,input().split()))\nprint(T/X)",
  "f2": "import sys\nT, X = map(int, sys.stdin.readline().rstrip().split())\nprint(T / X)",
  "sim": 0.55,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03135/s661386084.py",
  "f2_idx": "./Project_CodeNet_Python800/p03135/s896427116.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = [[] for _ in range(n)]\n\nfor i in range(m):\na, b = map(int, input().split())\na -= 1\nb -= 1\ngraph[a].append(b)\ngraph[b].append(a)\n\nque = deque()\nque.append(0)\n\nvisited = [0 for _ in range(n)]\nvisited[0] = 1\nans = [None for _ in range(n)]\n\nprint('Yes')\nwhile len(que) > 0:\nc = que.popleft()\nfor ne in graph[c]:\nif visited[ne] == 1:\ncontinue\nque.append(ne)\nans[ne] = c\n# print(f'ans[{ne}] = {c}')\nvisited[ne] = 1\n\nfor i in range(1, n):\nprint(ans[i] + 1)",
  "f2": "from collections import deque\n\nn,m = map(int, input().split())\n\nconnected = [set() for i in range(n+1)]\n\nfor i in range(m):\na,b = map(int, input().split())\nconnected[a].add(b)\nconnected[b].add(a)\n\ndef bfs(x):\nqueue = deque([x])\nd = [None] * (n+1)\nd[x] = 0\nwhile queue:\nv = queue.popleft()\nfor i in connected[v]:\nif d[i] is None:\nd[i] = v\nqueue.append(i)\nreturn d\n\nprint('Yes')\nans = bfs(1)[2:]\n\nfor i in ans:\nprint(i)",
  "sim": 0.5833333333333334,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02678/s661138400.py",
  "f2_idx": "./Project_CodeNet_Python800/p02678/s643506892.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = list(map(int, input().split()))\nd = {}\nfor a in A:\nfor i in range(a - 1, a + 2):\nd[i] = d.get(i, 0) + 1\nx = sorted(d.values())\nprint(max(x))",
  "f2": "n = int(input())\na = list(map(int, input().split()))\n\nl = [0] * 100002\nfor i in a:\nl[i+1] += 1\nl[i+2] += 1\nl[i] += 1\nprint(max(l))",
  "sim": 0.5897435897435898,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03611/s017544986.py",
  "f2_idx": "./Project_CodeNet_Python800/p03611/s619741865.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\npower=1\nmod=10**9+7\nfor num in range(1,n+1):\npower*=num\npower%=mod\nprint(power)",
  "f2": "N = int(input())\n\nmod = int(1e9)+7\n\nans = 1\nfor i in range(1,N+1):\nans = (ans*i)%mod\n\n\nprint(ans)",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03796/s757384709.py",
  "f2_idx": "./Project_CodeNet_Python800/p03796/s943047242.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\nn = int(input())\na = list(map(int,input().split()))\nres = 0.0\nfor i in a:\nres += 1/i\nprint(1/res)\n\nif __name__ == '__main__':\nmain()",
  "f2": "n=int(input())\na=list(map(int,input().split()))\nans=0.0\nfor i in range(n):\nans=ans+1.0/a[i]\nans=1.0/ans\nprint(ans)",
  "sim": 0.5588235294117647,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02934/s544772141.py",
  "f2_idx": "./Project_CodeNet_Python800/p02934/s998939656.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nt = list(map(int, input().split()))\nm = int(input())\np = [[]] * m\nx = [[]] * m\nans = 0\nfor i in range(n):\nans += t[i]\nfor i in range(m):\np[i], x[i] = map(int, input().split())\nprint(ans - t[p[i]-1] + x[i])",
  "f2": "n=int(input())\nl=[0]+list(map(int,input().split()))\nans=sum(l)\nfor i in range(int(input())):\na,s=map(int,input().split())\nprint(ans-l[a]+s)",
  "sim": 0.6764705882352942,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03845/s889522288.py",
  "f2_idx": "./Project_CodeNet_Python800/p03845/s106104684.py",
  "response": "Yes"
 },
 {
  "f1": "print('Yes' if input() in ['hi'*i for i in range(1,6)] else 'No')",
  "f2": "s=input()\nif len(s)&1:\nprint('No')\nexit()\nfor i in list(s[i*2:i*2+2] for i in range(len(s)//2)):\nif i!='hi':\nprint('No')\nexit()\nprint('Yes')",
  "sim": 0.5333333333333333,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02747/s339666590.py",
  "f2_idx": "./Project_CodeNet_Python800/p02747/s196142405.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\ns=input()\nprint(\"Yes\" if s.count(\"R\")>s.count(\"B\") else \"No\")",
  "f2": "import sys\n\ninput = sys.stdin.readline\n\n\ndef main():\nN = int(input())\ns = input().rstrip()\n\nn_R = s.count(\"R\")\nn_B = s.count(\"B\")\nif n_R > n_B:\nans = \"Yes\"\nelse:\nans = \"No\"\n\nprint(ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.5483870967741935,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03080/s539112152.py",
  "f2_idx": "./Project_CodeNet_Python800/p03080/s938201159.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\n\ndef solve():\nN, T = map(int, input().split())\nab_l = [[0, 0] for _ in range(N)]\nfor i in range(N):\nab_l[i][0], ab_l[i][1] = map(int, input().split())\nab_l.sort()\ndp = np.zeros(T, dtype=int)\nans = 0\n\nfor a, b in ab_l:\nans = max(ans, dp[-1] + b)\ndp[a:] = np.maximum(dp[a:], dp[:-a]+b)\n\nprint(ans)\n\n\nif __name__ == '__main__':\nsolve()",
  "f2": "N,T = map(int,input().split())\ntlist=[0]*N\nvlist=[0]*N\ntvlist=[[0,0]]*N\ndp=[[0]*T for i in range(N+1)]\n\nfor i in range(N):\ntvlist[i] = list(map(int,input().split()))\ntvlist.sort(key=lambda x: x[0])\nfor i in range(N):\ntlist[i] = tvlist[i][0]\nvlist[i] = tvlist[i][1]\n\nfor i in range(N):\nfor t in range(T):\nif t>=tlist[i]:\ndp[i+1][t] = max(dp[i][t],dp[i][t-tlist[i]]+vlist[i])\nelse:\ndp[i+1][t] = dp[i][t]\n\nans=0\nfor i in range(N):\nans = max(ans,dp[i][T-1]+vlist[i])\n\nprint(ans)",
  "sim": 0.509090909090909,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02863/s204812010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02863/s447679515.py",
  "response": "Yes"
 },
 {
  "f1": "h,w,d=map(int,input().split())\na=[ [ [] for j in range(int(h*w/d+1)) ] for i in range(d) ]\na1=[ [ [] for j in range(int(h*w/d+1)) ] for i in range(d) ]\nfor i in range(h):\ni+=1\ntmp=list(map(int,input().split()))\nfor j in range(w):\nnum=tmp[j]\nj+=1\na[num%d][int( (num-1)/d)]=[i,j]\nfor i in range(len(a)):\na1[i][0]=0\nfor j in range(len(a[i])-1):\nj=j+1\nif a[i][j]!=[]:\na1[i][j]=a1[i][j-1]+abs(a[i][j][0]-a[i][j-1][0])+abs(a[i][j][1]-a[i][j-1][1])\n\nq=int(input())\nfor i in range(q):\nl,r=map(int,input().split())\nprint(a1[l%d][int((r-1)/d)]-a1[l%d][int((l-1)/d)])",
  "f2": "h,w,d=map(int,input().split())\nind={}\nfor i in range(h):\nl=list(map(int,input().split()))\n\nfor j in range(w):\nind[l[j]]=(i,j)\ntable=[0]*((((h*w)//d).bit_length())*h*w)\nnow=1\nfor i in range(1,h*w-d+1):\na,s=ind[i]\nde,f=ind[i+d]\ntable[i-1+d]=abs(a-de)+abs(s-f)\nstep=2\nfor i in range(1,((h*w)//d).bit_length()):\nfor j in range(1,h*w-step*d+1):\ntable[j-1+step*d+i*h*w]=table[j-1+d*step//2+(i-1)*h*w]+table[j-1+d*step+(i-1)*h*w]\nstep*=2\n#print(*[table[k*h*w:k*w*h+h*w]for k in range(((h*w)//d).bit_length())],sep=\"\\n\")\nq=int(input())\nfor i in range(q):\nl,r=map(int,input().split())\ntimes=(r-l)//d\ncost=0\nnow=1\nkata=0\nwhile times:\nif times%2:\nl+=d*now\ncost+=table[l-1+kata*h*w]\n\ntimes//=2\nnow*=2\nkata+=1\nprint(cost)",
  "sim": 0.5833333333333334,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03426/s701249113.py",
  "f2_idx": "./Project_CodeNet_Python800/p03426/s471719402.py",
  "response": "No"
 },
 {
  "f1": "N, *A = map(int, open(0).read().split())\nA.sort(reverse=True)\nans = A[0]\nfor i in range(2, N):\nans += A[i // 2]\nprint(ans)",
  "f2": "n = int(input())\nA = list(map(int, input().split()))\nA.sort(reverse=True)\nA2 = [A[0]]\nfor a in A[1:]:\nA2.extend([a, a])\nans = 0\nfor a in A2[:n-1]:\nans += a\nprint(ans)",
  "sim": 0.5675675675675675,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02615/s731726978.py",
  "f2_idx": "./Project_CodeNet_Python800/p02615/s150128761.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\nS=input()\nans=S.count(\"W\")\nans1=-10\nfor i in range(N):\nif S[i]==\"W\":\nans-=1\nif i!=0:\nif S[i-1]==\"E\":\nans+=1\nans1=max(ans,ans1)\nprint(N-1-ans1)",
  "f2": "input()\nS = input()\n\nans = ans_cur = S.count(\"E\")\nfor c in S:\nif c == \"E\":\nans_cur -= 1\nelse:\nans_cur += 1\nans = ans if ans <= ans_cur else ans_cur\nprint(ans)",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03339/s665173524.py",
  "f2_idx": "./Project_CodeNet_Python800/p03339/s573950654.py",
  "response": "Yes"
 },
 {
  "f1": "p,q,r=map(int,input().split())\nn=max(p,q,r)\nprint(p+q+r-n)",
  "f2": "def solve():\np, q, r = map(int, input().split())\nprint(min(p+q, q+r, p+r))\n\nif __name__ == '__main__':\nsolve()",
  "sim": 0.56,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03011/s989291171.py",
  "f2_idx": "./Project_CodeNet_Python800/p03011/s190033900.py",
  "response": "No"
 },
 {
  "f1": "def main():\nn, m = map(int, input().split())\ncount = [0] * n\nfor _ in range(m):\na, b = map(int, input().split())\ncount[a-1] += 1\ncount[b-1] += 1\n\nprint(*count, sep=\"\\n\")\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "import sys\n\ninput = sys.stdin.readline\n\ndef main():\nN, M = map(int, input().split())\nm = [0]*N\nfor _ in range(M):\na, b = map(int, input().split())\nm[a-1] += 1\nm[b-1] += 1\nfor i in range(N):\nprint(m[i])\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.6976744186046512,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03720/s040957939.py",
  "f2_idx": "./Project_CodeNet_Python800/p03720/s633254003.py",
  "response": "Yes"
 },
 {
  "f1": "MOD = 10**9 + 7\nfac = [1 for k in range(200010)]\ninv = [1 for k in range(200010)]\nfinv = [1 for k in range(200010)]\nfor k in range(2,200010):\nfac[k] = (fac[k-1]*k)%MOD\ninv[k] = (MOD - inv[MOD%k] * (MOD // k))%MOD\nfinv[k] = (finv[k - 1] * inv[k]) % MOD;\ndef nCr(n,r):\nreturn (fac[n]*finv[r]*finv[n-r])%MOD\n\nN, K = map(int,input().split())\nA = sorted(list(map(int,input().split())))\nm = 0\nfor k in range(N-K+1):\nm += A[k]*nCr(N-k-1,K-1)\nm %= MOD\nA = A[::-1]\nM = 0\nfor k in range(N-K+1):\nM += A[k]*nCr(N-k-1,K-1)\nM %= MOD\nprint(M-m if M>=m else M-m+MOD)",
  "f2": "n,k=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\n\nmod=10**9+7\n\nMAX_N=n+5\nfac = [1,1] + [0]*MAX_N\nfinv = [1,1] + [0]*MAX_N\ninv = [0,1] + [0]*MAX_N\nfor i in range(2,MAX_N):\nfac[i] = fac[i-1] * i % mod\ninv[i] = mod - inv[mod % i] * (mod // i) % mod\nfinv[i] = finv[i-1] * inv[i] % mod\n\ndef nCk(n,k):\nif n<k:\nreturn 0\nif n<0 or k<0:\nreturn 0\nreturn fac[n] * (finv[k] * finv[n-k] % mod) % mod\n\nmax_x=0\nfor i in range(k-1,n):\nmax_x+=a[i]*nCk(i,k-1)\nmax_x%=mod\n\nmin_x=0\nfor i in range(n-k+1):\nmin_x+=a[i]*nCk(n-i-1,k-1)\nmin_x%=mod\n\nprint((max_x-min_x)%mod)",
  "sim": 0.6190476190476191,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02804/s323129278.py",
  "f2_idx": "./Project_CodeNet_Python800/p02804/s774516867.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\nl=list(map(int,input().split()))\nc=0\nfor i in range(1,n-1):\nm=min(l[i],l[i-1],l[i+1])\nx=max(l[i],l[i-1],l[i+1])\nif(m!=l[i] and x!=l[i]):\nc+=1\nprint(c)",
  "f2": "n = int(input())\nplist = list(map(int, input().split()))\n\nans = 0\n\nfor i in range(1, n-1):\nif plist[i-1] < plist[i] < plist[i+1]:\nans += 1\nelif plist[i-1] > plist[i] > plist[i+1]:\nans += 1\n\nprint(ans)",
  "sim": 0.6578947368421053,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02988/s561599887.py",
  "f2_idx": "./Project_CodeNet_Python800/p02988/s065627801.py",
  "response": "Yes"
 },
 {
  "f1": "def main():\n\nN = int(input())\nA = list(map(int, input().split()))\nv1 = 0\nv2 = 0\ni, j = 0, 0\nans = 0\n# print(A)\nwhile i < N:\n\nwhile i < N and v1 + A[i] == v2 ^ A[i]:\nv1 += A[i]\nv2 ^= A[i]\ni += 1\n\nif i < N:\nv1 += A[i]\nv2 ^= A[i]\nwhile j < i and v1!= v2:\nv1 -= A[j]\nv2 ^= A[j]\nans += i-j\nj += 1\ni += 1\nans += (i-j)*(i-j+1)//2\nreturn ans\n\nif __name__ == '__main__':\nprint(main())",
  "f2": "N = int(input())\nA = list(map(int, input().split()))\n\nans = 0\nS = 0\nX = 0\nend = -1\n\nfor i in range(N):\nwhile end < N-1:\nend += 1\nS += A[end]\nX ^= A[end]\nif S != X:\nS -= A[end]\nX ^= A[end]\nend -= 1\nbreak\nans += end - i + 1\nS -= A[i]\nX ^= A[i]\n\nprint(ans)",
  "sim": 0.5686274509803921,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03340/s169616135.py",
  "f2_idx": "./Project_CodeNet_Python800/p03340/s754047125.py",
  "response": "Yes"
 },
 {
  "f1": "N,A,B = map(int,input().split())\nd,m = divmod(N,A+B)\nprint(d*A + min(A,m))",
  "f2": "# -*= coding: utf-8 -*-\n\nN, A, B = map(int, input().split())\nif A == 0:\nprint(0)\nexit()\nx = N // (A+B)\nx = x * A\n\ny = N % (A+B)\nif y >= A:\ny = A\n\nprint(x + y)",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02754/s252414692.py",
  "f2_idx": "./Project_CodeNet_Python800/p02754/s541102288.py",
  "response": "Yes"
 },
 {
  "f1": "# AtCoder\nA = int(input())\nB = int(input())\nC = int(input())\nD = int(input())\n\nt = min(A, B)\nb = min(C, D)\nprint(t+b)",
  "f2": "print(min(int(input()),int(input()))+min(int(input()),int(input())))",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03399/s200420471.py",
  "f2_idx": "./Project_CodeNet_Python800/p03399/s641031409.py",
  "response": "Yes"
 },
 {
  "f1": "n = set(map(int,input().split()))\nif n == set([1,4,7,9]):\nprint(\"YES\")\nelse:\nprint(\"NO\")",
  "f2": "n1,n2,n3,n4=map(int,input().split());ans=[n1,n2,n3,n4];ans.sort()\nprint(\"YES\" if ans==[1,4,7,9] else \"NO\")",
  "sim": 0.6774193548387096,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03149/s530406242.py",
  "f2_idx": "./Project_CodeNet_Python800/p03149/s607123370.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = sys.stdin.readline\nfrom collections import *\nfrom bisect import *\n\ns = input()[:-1]\nt = input()[:-1]\nidx = defaultdict(list)\n\nfor i in range(len(s)):\nidx[s[i]].append(i)\n\nnow = -1\ncnt = 0\n\nfor i in range(len(t)):\nif t[i] not in idx:\nprint(-1)\nexit()\n\nmark = bisect_right(idx[t[i]], now)\n\nif mark==len(idx[t[i]]):\nnow = idx[t[i]][0]\ncnt += 1\nelse:\nnow = idx[t[i]][mark]\n\nprint(len(s)*cnt+now+1)",
  "f2": "from collections import defaultdict\nfrom bisect import bisect_left\n\n\ndef solve(s, t):\ndd = defaultdict(list)\nfor i, c in enumerate(s):\ndd[c].append(i)\ninv = 0\nindex = 0\nfor c in t:\nx = bisect_left(dd[c], index)\nif x == len(dd[c]):\ninv += 1\nif not dd[c]:\nreturn -1\nindex = dd[c][0] + 1\nelse:\nindex = dd[c][x] + 1\nreturn len(s) * inv + index\n\n\ndef main():\ns = input()\nt = input()\nprint(solve(s, t))\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.5892857142857143,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02937/s468601142.py",
  "f2_idx": "./Project_CodeNet_Python800/p02937/s643437632.py",
  "response": "Yes"
 },
 {
  "f1": "from sys import stdin\nfrom math import ceil\ninp = lambda : stdin.readline().strip()\n\nn, x, t = [int(x) for x in inp().split()]\nprint(ceil(n/x)*t)",
  "f2": "import math\n\nn, x, t = map(int, input().split())\n\ncount = math.ceil(n / x)\n\ntime = t * count\n\nprint(time)",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02576/s132534776.py",
  "f2_idx": "./Project_CodeNet_Python800/p02576/s146126088.py",
  "response": "Yes"
 },
 {
  "f1": "def gcd(a,b):\nif b==0:\nreturn a\nc=a%b\nreturn gcd(b,c)\nx,y=map(int,input().split())\nif x<y:\nx,y=y,x\nm=gcd(x,y)\nprint(m)",
  "f2": "x, y = sorted(list(map(int, input().split())), reverse=True)\nwhile 1:\nif x % y == 0:\nprint(y)\nbreak\nelse:\na = y\nb = x % y\nx = a\ny = b",
  "sim": 0.5757575757575758,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02256/s737110542.py",
  "f2_idx": "./Project_CodeNet_Python800/p02256/s809072452.py",
  "response": "Yes"
 },
 {
  "f1": "N,M,C=map(int,input().split())\nB=list(map(int,input().split()))\nA=[]\nfor i in range(N):\nA.append(list(map(int,input().split())))\nD=[]\nfor i in range(N):\nD.append(0)\nfor i in range(N):\nfor j in range(M):\nD[i]+=A[i][j]*B[j]\nD[i]+=C\ne=0\nfor i in range(len(D)):\nif D[i]>0:\ne+=1\nprint(e)",
  "f2": "import numpy as np\n\nN, M, C = map(int, input().split())\nB = np.array(list(map(int, input().split())))\nA = np.array([])\ncount = 0\nfor _ in range(N):\nA = np.append(A, list(map(int, input().split())))\nA = A.reshape(N, M)\nfor i in A.dot(B) + C:\nif i > 0:\ncount += 1\nprint(count)",
  "sim": 0.6590909090909091,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03102/s439139090.py",
  "f2_idx": "./Project_CodeNet_Python800/p03102/s897479550.py",
  "response": "Yes"
 },
 {
  "f1": "N, K = map(int, input().split())\n\nif K == 0 :\nans = N**2\nelse :\nans = 0\nfor b in range(K+1, N+1) :\nmaxQ = N // b\nans += (b - K) * maxQ\nans += max(N - K - (maxQ * b) + 1, 0)\n\nprint(ans)",
  "f2": "def main():\nn,k=map(int,input().split())\nr=0\nfor q in range(n+1):\nif q==0:\nfor b in range(1,n+1):r+=max(min(b,k)-1,0)\nelse:\nfor b in range(1,n//q+1):r+=min(k,n-q*b+1,b)\nprint(n*n-r)\n\nif __name__==\"__main__\":\nmain()",
  "sim": 0.6341463414634146,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03418/s464412243.py",
  "f2_idx": "./Project_CodeNet_Python800/p03418/s542742152.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\na = list(map(int,input().split()))\nans = []\ncnt = 0\nfor i in range(1,n-1,2):\ncnt += a[i]*2\nans.append(sum(a)-cnt)\nfor i in range(n):\nans.append(a[i]*2-ans[i])\nprint(*ans[:-1])",
  "f2": "n = int(input())\na = list(map(int, input().split()))\ns = sum(a)\nres = s\nfor i in range(n):\nif i%2 == 1:\nres -= 2*a[i]\nans = []\nans.append(str(res))\ntmp = res\nfor i in range(n-1):\nnow = 2*a[i] - tmp\nans.append(str(now))\ntmp = now\nprint(\" \".join(ans))",
  "sim": 0.6585365853658537,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p02984/s746445956.py",
  "f2_idx": "./Project_CodeNet_Python800/p02984/s292616084.py",
  "response": "Yes"
 },
 {
  "f1": "x, y = input().split()\nif x == y:\nprint(\"=\")\nelif x < y:\nprint(\"<\")\nelif x > y:\nprint(\">\")",
  "f2": "x,y = map(format, input().split())\n\nif x == y:\nprint('=')\nelif x<y:\nprint('<')\nelse:\nprint('>')",
  "sim": 0.6,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03547/s655314312.py",
  "f2_idx": "./Project_CodeNet_Python800/p03547/s118897684.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = [0] + [int(input()) for _ in range(N)]\n\nans = 0\nfor i in range(1, N + 1):\ncnt = A[i-1] + A[i]\nif cnt % 2 == 1 and cnt > 1:\nA[i-1],A[i] = 0,1\nelif cnt % 2 == 0:\nA[i] = 0\nans += cnt // 2\n\nprint(ans)",
  "f2": "import sys\n\nsys.setrecursionlimit(10 ** 8)\n\ninput = sys.stdin.readline\n\n\ndef main():\nN = int(input())\nA = [int(input()) for _ in range(N)]\n\nans = 0\namari = 0\nfor a in A:\nif amari == 0:\namari = a % 2\nans += a // 2\nelse:\nans += min(amari, a)\na = max(0, a - amari)\nans += a // 2\namari = a % 2\n\nprint(ans)\n\n\n\n\n\nif __name__ == '__main__':\nmain()\n",
  "sim": 0.5,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p04020/s663532151.py",
  "f2_idx": "./Project_CodeNet_Python800/p04020/s926405133.py",
  "response": "No"
 },
 {
  "f1": "# coding: utf-8\n\ndef main():\na, b, c = map(int, input().split())\nans = 0\n\nif a == b and b == c and a % 2 == 0:\nans = -1\nelse:\nwhile a % 2 == 0 and b % 2 == 0 and c % 2 == 0:\nd = b / 2 + c / 2\ne = c / 2 + a / 2\nf = a / 2 + b / 2\na, b, c = d, e, f\nans += 1\n\nprint(ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "A, B, C = map(int, input().split())\nif A % 2 == 0 and A == B and B == C:\nprint(-1)\nexit()\n\ncount = 0\nwhile (A % 2, B % 2, C % 2) == (0, 0, 0):\nA, B, C = (B + C) // 2, (A + C) // 2, (A + B) // 2\ncount += 1\n\nprint(count)",
  "sim": 0.5238095238095238,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03723/s576152778.py",
  "f2_idx": "./Project_CodeNet_Python800/p03723/s497702484.py",
  "response": "Yes"
 },
 {
  "f1": "N = int(input())\nA = list(map(int, input().split()))\nave = sum(A) / len(A)\ndiff = float('inf')\nans = None\nfor i, a in enumerate(A):\nif abs(a - ave) < diff:\ndiff = abs(a - ave)\nans = i\nprint(ans)",
  "f2": "n=int(input())\na=list(map(int,input().split()))\nv=sum(a)/n\nd=1000\nt=0\nfor i in range(n):\nif abs(v-a[i])<d:\nd=abs(v-a[i])\nt=i\nprint(t)",
  "sim": 0.5365853658536586,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03214/s831321314.py",
  "f2_idx": "./Project_CodeNet_Python800/p03214/s170023602.py",
  "response": "Yes"
 },
 {
  "f1": "A, B, C = input().split()\nif A[len(A)-1:len(A)] == B[0:1] and B[len(B)-1:len(B)] == C[0:1]:\nprint('YES')\nelse:\nprint('NO')",
  "f2": "\ndef resolve():\na, b, c = input().split()\nprint('YES' if a[-1] == b[0] and b[-1] == c[0] else 'NO')\n\nif __name__ == \"__main__\":\nresolve()",
  "sim": 0.6451612903225806,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03729/s078723160.py",
  "f2_idx": "./Project_CodeNet_Python800/p03729/s340929436.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\nPY = [list(map(int, input().split())) for _ in range(m)]\n\nPY_sort = sorted(PY, key=lambda x: x[1])\nPY_sort.sort(key=lambda x: x[0])\n\nID = {}\ni, p = 1, PY_sort[0][0]\nfor v in PY_sort:\nif v[0] != p:\ni, p = 1, v[0]\nid = \"%06d%06d\"%(p, i)\nID[v[1]] = id\ni += 1\n\nfor p, y in PY:\nprint(ID[y])",
  "f2": "n, m = map(int, input().split())\ncity = []\n\nfor i in range(m):\na = list(map(int, input().split()))+[i]\ncity.append(a)\ncity.sort(key=lambda x: x[1])\n\ncount = [1 for _ in range(n)]\nfor k in range(m):\ncity[k].append(count[city[k][0]-1])\ncount[city[k][0]-1] += 1\ncity.sort(key=lambda x: x[2])\n\nfor i in city:\nprint(str(i[0]).zfill(6)+str(i[-1]).zfill(6))",
  "sim": 0.5283018867924528,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03221/s394606272.py",
  "f2_idx": "./Project_CodeNet_Python800/p03221/s575469425.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\nf = [list(map(int,input().split())) for i in range(n)]\np = [list(map(int,input().split())) for i in range(n)]\nprint(max(sum(p[j][sum(i>>k&1 and f[j][k] for k in range(10))] for j in range(n)) for i in range(1,2**10)))",
  "f2": "N = int(input())\nF = [list(map(int, input().split())) for _ in range(N)]\nP = [list(map(int, input().split())) for _ in range(N)]\nans = -9999999999\nfor i in range(1, 2 ** 10):\ns = 0\nfor j in range(N):\ncnt = 0\nfor k in range(10):\nif i >> k & 1 and F[j][k] == 1:\ncnt += 1\ns += P[j][cnt]\nans = max(ans, s)\nprint(ans)",
  "sim": 0.6,
  "type": "MT3",
  "f1_idx": "./Project_CodeNet_Python800/p03503/s890424557.py",
  "f2_idx": "./Project_CodeNet_Python800/p03503/s098207953.py",
  "response": "Yes"
 },
 {
  "f1": "input1 = list(map(int,input().split()))\nK = input1[0]\nX = input1[1]\nif K * 500 >= X:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "f2": "k, x = map(int, open(0).read().split())\ntotal = 500 * k\nif total >= x:\nprint('Yes')\nelse:\nprint('No')",
  "sim": 0.48484848484848486,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02811/s781672107.py",
  "f2_idx": "./Project_CodeNet_Python800/p02811/s953813936.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nfrom collections import Counter\n\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nns = lambda: readline().rstrip() # input string\nni = lambda: int(readline().rstrip()) # input int\nnm = lambda: map(int, readline().split()) # input multiple int\nnl = lambda: list(map(int, readline().split())) # input multiple int to list\n\nn = ni()\nv = nl()\nodd = Counter(v[0::2])\neven = Counter(v[1::2])\nodd[\"$\"] = 0\neven[\"#\"] = 0\nans = 0\nif odd.most_common()[0][0] == even.most_common()[0][0]:\nif odd.most_common()[1][1] > even.most_common()[1][1]:\nans = n - odd.most_common()[1][1] - even.most_common()[0][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[1][1]\nelse:\nans = n - odd.most_common()[0][1] - even.most_common()[0][1]\n\"\"\"if len(odd) == 1:\npass\nelse:\nfor v in odd.values():\nmax_odd = max(max_odd, v)\nans += len(odd) - max_odd\n\nif len(even) == 1:\npass\nelse:\nfor v in even.values():\nmax_even = max(max_even, v)\nans += len(even) - max_even\"\"\"\n\nprint(ans)",
  "f2": "import collections\n\nN = int(input())\nV = list(map(int, input().split()))\n\neven = V[::2]\nodd = V[1::2]\n\neven_c = collections.Counter(even)\nodd_c = collections.Counter(odd)\n\neven_max1_num = 0\neven_max1_cnt = 0\neven_max2_num = 0\neven_max2_cnt = 0\nfor k, v in even_c.items():\nif v > even_max1_cnt:\neven_max2_cnt = even_max1_cnt\neven_max2_num = even_max1_num\neven_max1_cnt = v\neven_max1_num = k\nelif v > even_max2_cnt:\neven_max2_cnt = v\neven_max2_num = k\n\nodd_max1_num = 0\nodd_max1_cnt = 0\nodd_max2_num = 0\nodd_max2_cnt = 0\nfor k, v in odd_c.items():\nif v > odd_max1_cnt:\nodd_max2_cnt = odd_max1_cnt\nodd_max2_num = odd_max1_num\nodd_max1_cnt = v\nodd_max1_num = k\nelif v > odd_max2_cnt:\nodd_max2_cnt = v\nodd_max2_num = k\n\nans = 0\nif even_max1_num == odd_max1_num:\nif even_max1_cnt == odd_max1_cnt:\nif even_max2_cnt > odd_max2_cnt:\nans = N-(even_max2_cnt+odd_max1_cnt)\nelse:\nans = N-(even_max1_cnt+odd_max2_cnt)\nelif even_max1_cnt > odd_max1_cnt:\nans = N-(even_max1_cnt+odd_max2_cnt)\nelse:\nans = N-(even_max2_cnt+odd_max1_cnt)\nelse:\nans = N-(even_max1_cnt+odd_max1_cnt)\nprint(ans)",
  "sim": 0.3918918918918919,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03244/s317758416.py",
  "f2_idx": "./Project_CodeNet_Python800/p03244/s394746779.py",
  "response": "Yes"
 },
 {
  "f1": "import re\na = input()\nmo = re.search(r'[a-z]', a)\nif mo is None:\nprint('A')\nelse:\nprint('a')",
  "f2": "x=input()\nx=ord(x)\nif (x<=90)and(x>=60):\nprint(\"A\")\nelif (x>=97)and(x<=122):\nprint(\"a\")",
  "sim": 0.21212121212121213,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02627/s987934398.py",
  "f2_idx": "./Project_CodeNet_Python800/p02627/s396972105.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ninput = sys.stdin.buffer.readline\n\n#sys.setrecursionlimit(10**9)\n#from functools import lru_cache\n\ndef RD(): return input().rstrip().decode()\ndef II(): return int(input())\ndef FI(): return int(input())\ndef MI(): return map(int,input().split())\ndef MF(): return map(float,input().split())\ndef LI(): return list(map(int,input().split()))\ndef LF(): return list(map(float,input().split()))\ndef TI(): return tuple(map(int,input().split()))\n# rstrip().decode()\n\nimport bisect\nfrom collections import deque\n\ndef main():\nn=II()\nA=[II() for _ in range(n)]\n\nQ=deque()\nQ.append(A[0])\n\nfor i in A[1:]:\nx=bisect.bisect_left(Q,i)\nif x==0:\nQ.appendleft(i)\nelse:\nQ[x-1]=i\nprint(len(Q))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "#!/usr/bin/env python3\nfrom collections import deque\nfrom bisect import bisect_left\n\ndef main():\nN, *A = map(int, open(0))\n# 方針: 色ごとに最大値をリストで保持する\n# 新しく色を追加しないといけない時は持っている全ての数字より小さい時->先頭追加なのでdequeがいい\n# dequeをbisectで二分探索できるんだ...\nq = deque([])\nfor i in range(N):\nd = bisect_left(q,A[i])\nif d == 0:\nq.appendleft(A[i])\nelse:\nq[d-1] = A[i]\nprint(len(q))\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.4788732394366197,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02973/s279759620.py",
  "f2_idx": "./Project_CodeNet_Python800/p02973/s523902742.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split(\",\")\nprint(' '.join(s))",
  "f2": "a,b,c = map(str,input().split(','))\nprint(a,b,c)",
  "sim": 0.3888888888888889,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03834/s473676790.py",
  "response": "No"
 },
 {
  "f1": "from itertools import product\nA,B,C,D = list(input())\nfor x in product((\"+\",\"-\"),repeat=3):\nif eval(A+x[0]+B+x[1]+C+x[2]+D)==7:\nprint(A+x[0]+B+x[1]+C+x[2]+D+\"=7\")\nbreak",
  "f2": "a,b,c,d=input()\ns='+-'\nfor p in s:\nfor q in s:\nfor r in s:\nf=a+p+b+q+c+r+d\nif eval(f)==7:print(f+'=7');exit()",
  "sim": 0.2916666666666667,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03545/s356355871.py",
  "f2_idx": "./Project_CodeNet_Python800/p03545/s190561243.py",
  "response": "Yes"
 },
 {
  "f1": "# import itertools\n# import math\nimport sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n\nX = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\n# A = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\nfor a in range(-130, 130):\nfor b in range(-130, 130):\n_ = a ** 5 - b ** 5\nif _ == X:\nprint(a, b)\nsys.exit()",
  "f2": "import math\n\ndef main():\nX=int(input())\n\nfor a in range(-120,120):\nflag=0\nfor b in range(-120,120):\nif pow(a,5)-pow(b,5)==X:\nprint(\"{} {}\".format(a,b))\nflag=1\nbreak\nif flag==1:\nbreak\n\nif __name__==\"__main__\":\nmain()",
  "sim": 0.3225806451612903,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02690/s850830328.py",
  "f2_idx": "./Project_CodeNet_Python800/p02690/s450480884.py",
  "response": "Yes"
 },
 {
  "f1": "X = int(input())\nx = X//100\nif X > x*105 :\nprint('0')\nelif X <= x*105 :\nprint('1')",
  "f2": "n=int(input())\noh=n//100\nte=n%100\nif oh*5<te:\nprint(0)\nelse:\nprint(1)",
  "sim": 0.39285714285714285,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02843/s928291490.py",
  "f2_idx": "./Project_CodeNet_Python800/p02843/s848016317.py",
  "response": "No"
 },
 {
  "f1": "#!/usr/bin/env python3\nimport sys\n# sys.setrecursionlimit(10000000)\nINF = 1<<32\n\n\nfrom bisect import bisect_left, bisect_right\n\ndef solve(N: int, M: int, A: \"List[int]\"):\n\ndef binary_search(left: int, right: int):\ns = 0\nc = 0\nmi = INF\n\nwhile right-left > 1 or c < M:\n# print(\"test: \", left, \" \", right)\nmid = (left+right)//2\n# print(\"mid: \", mid)\n# mid以上の価値の握手の個数を求める\n# s = []\ns = 0\nc = 0\nmi = INF\nfor i in range(N):\np = bisect_left(A, mid-A[i])\nif p != N:\nmi = min(mi, A[i]+A[p])\n# print(A[i], A[p:], aq[N]-aq[p],  A[i]*(N-p))\ns += aq[N]-aq[p]\ns += A[i]*(N-p)\nc += N-p\n\n# mid以上の握手の個数がM以上か否か\nif c > M:\nleft = mid\n\nelse:\nright = mid\n\nif c > M:\ns -= (c-M)*mi\n\nreturn s\n\nA.sort()\naq = [0] * (N+1)\nfor i in range(N):\naq[i+1] = aq[i] + A[i]\n\nprint(binary_search(1, A[-1]*2))\n\nreturn\n\n\n\ndef main():\ndef iterate_tokens():\nfor line in sys.stdin:\nfor word in line.split():\nyield word\ntokens = iterate_tokens()\nN = int(next(tokens))  # type: int\nM = int(next(tokens))  # type: int\nA = [int(next(tokens)) for _ in range(N)]  # type: \"List[int]\"\nsolve(N, M, A)\n\nif __name__ == '__main__':\nmain()",
  "f2": "from bisect import bisect_left\ndef check(x):\ncnt=0\nl=n\nr=n\nfor i in range(n):\nwhile True:\nif l==0:\nbreak\nif a[l-1]<x-a[i]:\nbreak\nl-=1\ncnt+=(r-l)\nreturn cnt>=m\n\nn,m=map(int,input().split())\na=list(map(int,input().split()))\na.sort()\nok=0\nng=2*10**5+10\n# 幸福度が上位m個に入る最小のAx+Ayを二分探索する。\nwhile abs(ok-ng)>1:\nmid=(ok+ng)//2\nif check(mid):\nok=mid\nelse:\nng=mid\n\nru=[0]*(n+1)\nfor i in range(n):\nru[i+1]=ru[i]+a[i]\n\nans=0\ncnt=0\nr=n\n# 幸福度が上位m個に入るAx+Ayの最小値のみm個の個数制限から溢れてしまう場合があるので別に考える\nok=ok+1 # Ax+Ayの最小値より大きな値を先に処理するために最小値+1をする。\nfor i in range(n):\n# 最小値以外の処理\nl=bisect_left(a,ok-a[i])\ncnt+=r-l\nans+=(r-l)*a[i]+(ru[r]-ru[l])\nans+=(ok-1)*(m-cnt) # 最小値の処理\nprint(ans)",
  "sim": 0.35514018691588783,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02821/s729094757.py",
  "f2_idx": "./Project_CodeNet_Python800/p02821/s651124408.py",
  "response": "Yes"
 },
 {
  "f1": "k,t = map(int,input().split())\nai = [int(i) for i in input().split()]\n\nai.sort(reverse=True)\n\nprint(max(0,ai[0]-(sum(ai)-ai[0])-1))",
  "f2": "import sys\nsys.setrecursionlimit(10**6)\nfrom math import floor,ceil,sqrt,factorial,log\nfrom heapq import heappop, heappush, heappushpop\nfrom collections import Counter,defaultdict,deque\nfrom itertools import accumulate,permutations,combinations,product,combinations_with_replacement\nfrom bisect import bisect_left,bisect_right\nfrom copy import deepcopy\nfrom operator import itemgetter\nfrom fractions import gcd\nmod = 10 ** 9 + 7\ninf = float('inf')\nninf = -float('inf')\n\n#整数input\ndef ii(): return int(sys.stdin.readline().rstrip()) #int(input())\ndef mii(): return map(int,sys.stdin.readline().rstrip().split())\ndef limii(): return list(mii()) #list(map(int,input().split()))\ndef lin(n:int): return [ii() for _ in range(n)]\ndef llint(n: int): return [limii() for _ in range(n)]\n#文字列input\ndef ss(): return sys.stdin.readline().rstrip() #input()\ndef mss(): return sys.stdin.readline().rstrip().split()\ndef limss(): return list(mss()) #list(input().split())\ndef lst(n:int): return [ss() for _ in range(n)]\ndef llstr(n: int): return [limss() for _ in range(n)]\n\n#本当に貪欲法か？ DP法では？？\n#本当に貪欲法か？ DP法では？？\n#本当に貪欲法か？ DP法では？？\nk,t=mii()\narr=sorted(limii(),reverse=True)\n\nif t==1:\nprint(k-1)\nexit()\nif arr[0]-1 <=sum(arr[1:]):\nprint(0)\nelse:\nprint(arr[0]-sum(arr[1:])-1)",
  "sim": 0.20192307692307693,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03958/s462701489.py",
  "f2_idx": "./Project_CodeNet_Python800/p03958/s974642077.py",
  "response": "No"
 },
 {
  "f1": "N = int(input())\nA = list(map(int, input().split()))\n\nB = [a-1 for a in A]\nC = [a+1 for a in A]\n\n\ndef Base_10_to_n(X, n):\nif (int(X/n)):\nreturn Base_10_to_n(int(X/n), n)+str(X%n)\nreturn str(X%n)\n\ncount = 0\nfor i in range(3**N):\ni3 = Base_10_to_n(i, 3).zfill(N)\nPick = []\nfor j in range(N):\nif i3[j] == '0':\nPick.append(A[j])\nelif i3[j] == '1':\nPick.append(B[j])\nelif i3[j] == '2':\nPick.append(C[j])\n#    print(i3, ':', Pick)\nif any([p%2 == 0 for p in Pick]):\ncount += 1\nprint(count)",
  "f2": "n = int(input())\nA = list(map(int, input().split()))\n\ncount = 1\nfor a in A:\ncount *= 2 if a % 2 == 0 else 1\nprint(3 ** n - count)",
  "sim": 0.48214285714285715,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03568/s206066557.py",
  "f2_idx": "./Project_CodeNet_Python800/p03568/s272804435.py",
  "response": "No"
 },
 {
  "f1": "H,W = map(int,input().split())\nA = [None for _ in range(H)]\nfor i in range(H):\nA[i] = input()\n\ncount = 0\n\nfor i in range(H):\nfor j in range(W):\nif A[i][j] == '#':\ncount += 1\n\nif count == H+W-1:\nprint('Possible')\nelse:\nprint('Impossible')",
  "f2": "def dfs(cnt=0, y=0, x=0):\nif y == H-1 and x == W-1:\nif S == cnt+1:\nglobal naraba\nnaraba = True\nreturn\nfor dy, dx in [(1, 0), (0, 1)]:\nny, nx = y+dy, x+dx\nif 0 <= ny < H and 0 <= nx < W and A[ny][nx] == \"#\" and not V[ny][nx]:\nV[ny][nx] = True\ndfs(cnt+1, ny, nx)\nV[ny][nx] = False\n\n\nif __name__ == \"__main__\":\nH, W = map(int, input().split())\nA = [list(input()) for _ in range(H)]\nV = [[False]*W for _ in range(H)]\nS = 0\nfor a in A:\nS += a.count(\"#\")\nV[0][0] = True\nnaraba = False\ndfs()\nif naraba:\nprint(\"Possible\")\nelse:\nprint(\"Impossible\")",
  "sim": 0.4603174603174603,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03937/s523655257.py",
  "f2_idx": "./Project_CodeNet_Python800/p03937/s128074190.py",
  "response": "No"
 },
 {
  "f1": "A,B,C = map(int,input().split())\nif A%2 == B%2 == C%2 ==1:\nprint(A*B*C//max(A,B,C))\nelse:\nprint(0)",
  "f2": "A, B, C = map(int, input().split())\n\nimport math\n\nAsmall = math.floor(A/2)\nAbig = A- Asmall\nBsmall = math.floor(B/2)\nBbig = B- Bsmall\nCsmall = math.floor(C/2)\nCbig = C- Csmall\n\nprint(min((Cbig-Csmall)*A*B, (Abig-Asmall)*C*B, (Bbig-Bsmall)*A*C))",
  "sim": 0.4166666666666667,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p04005/s024852955.py",
  "f2_idx": "./Project_CodeNet_Python800/p04005/s357176361.py",
  "response": "No"
 },
 {
  "f1": "n = int(input())\na = list(map(int, input().split()))\n\n# a[0]^a[1]^a[2] == 0\n# a[1]^a[2]^a[3] == 0\n# すなわち a[0] == a[3] と出来れば良い\n\n# 1)すべて0\n# 2) ある値が2n/3, 0がn/3\n# 3) 3つの値がそれぞれn/3ずつ\nb = list(set(a))\nkind = len(b)\nif kind == 1 and a[0] == 0:\nprint('Yes')\nexit()\nelif kind == 2 and a.count(0) == n//3 and n % 3 == 0:\nprint('Yes')\nexit()\nelif kind == 3:\nif a.count(b[0]) == a.count(b[1]) == a.count(b[2]) == n/3 and b[0] ^ b[1] ^ b[2] == 0:\nprint('Yes')\nexit()\nprint('No')",
  "f2": "from collections import Counter\nN = int(input())\nA = list(map(int, input().split()))\n\nc = Counter(A)\nn = len(c)\nif ((n == 1 and c[0] > 0)\nor (n == 2 and c[0] == N//3)):\nprint('Yes')\nelif n == 3:\nx, y, z = c.keys()\nif x ^ y ^ z == 0 and all(n == N // 3 for n in c.values()):\nprint('Yes')\nelse:\nprint('No')\nelse:\nprint('No')",
  "sim": 0.4666666666666667,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02975/s608946849.py",
  "f2_idx": "./Project_CodeNet_Python800/p02975/s976578326.py",
  "response": "Yes"
 },
 {
  "f1": "for i in range(1, 10):\nfor j in range(1, 10):\nprint(f'{i}x{j}={i * j}')\n",
  "f2": "for i in range(10):\nfor j in range(10):\nif(i > 0 and j > 0):\nprint(str(i) + 'x' + str(j) + '=' + str(i*j))",
  "sim": 0.43478260869565216,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p00000/s553234398.py",
  "f2_idx": "./Project_CodeNet_Python800/p00000/s834172138.py",
  "response": "Yes"
 },
 {
  "f1": "rp = [ele for ele in input().split()]\nop = ['+','-','*']\nstack = []\nfor ele in rp:\nif ele not in op:\n# ele is number\nstack.append(eval(ele))\nelse:\n# ele is operator\nnum_2 = stack.pop()\nnum_1 = stack.pop()\nif ele == '+':\nstack.append(num_1 + num_2)\nelif ele == '-':\nstack.append(num_1 - num_2)\nelse:\n# ele == '*'\nstack.append(num_1 * num_2)\nprint(stack[0])",
  "f2": "import sys\n\nERROR_INPUT = 'input is invalid'\nOPECODE = ['+', '-', '*']\nSTACK = []\n\n\ndef main():\ninp = get_input()\nprint(calc_stack(li=inp))\n\n\ndef calc_stack(li):\nif li[0] in OPECODE:\nans = calc(left=STACK[-2], right=STACK[-1], ope=li[0])\n\ndel li[0]\nif not li:\nreturn ans\n\nSTACK.pop()\nSTACK.pop()\nSTACK.append(ans)\n\nreturn calc_stack(li=li)\n\nelse:\nSTACK.append(int(li[0]))\ndel li[0]\nreturn calc_stack(li=li)\n\n\ndef calc(left, right, ope):\nif ope == '+':\nreturn left + right\nelif ope == '-':\nreturn left - right\nelif ope == '*':\nreturn left * right\n\n\ndef get_input():\ninp = input().split(' ')\nopecode_count = 0\noperand_count = 0\n\nfor i in inp:\nif i in OPECODE:\nopecode_count += 1\nelif int(i) < 0 or int(i) > 10**6:\nprint(ERROR_INPUT)\nsys.exit(1)\nelse:\noperand_count += 1\n\nif opecode_count < 1 or opecode_count > 100:\nprint(ERROR_INPUT)\nsys.exit(1)\n\nif operand_count < 2 or operand_count > 100:\nprint(ERROR_INPUT)\nsys.exit(1)\n\nreturn inp\n\n\nmain()",
  "sim": 0.375,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02263/s885602482.py",
  "f2_idx": "./Project_CodeNet_Python800/p02263/s772642336.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\ns = list(map(ord, list(input())))\nfor i in range(len(s)):\ns[i] += n\nif s[i] > ord('Z'): s[i] -= 26\nprint(\"\".join(map(chr,s)))",
  "f2": "import string\nn = int(input())\ns = input()\n\nl = string.ascii_uppercase\nans = [l[(l.index(i) + n ) % len(l)] for i in s]\nprint(''.join(ans))",
  "sim": 0.41025641025641024,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02848/s966263703.py",
  "f2_idx": "./Project_CodeNet_Python800/p02848/s670837693.py",
  "response": "Yes"
 },
 {
  "f1": "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n# import sympy\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nA.insert(0, 0)\nB = [0] * (N + 1)\n\nfor i in range(N, 0, -1):\nj = 1\ncnt = 0\nwhile(i * j <= N):\ncnt += B[i * j]\nj += 1\nflg = cnt % 2\nif A[i] != flg:\nB[i] = 1\n\n# print(B)\nprint(sum(B))\nfor i, b in enumerate(B):\nif b == 1:\nprint(i)",
  "f2": "n = int(input())\na = list(map(int, input().split()))\na = [0] + a\nl = [0]*(n + 1)\n\nfor i in range(n, 0, -1):\nif i > 0 - -n//2:\nl[i] = a[i]\nelse:\nif a[i] != sum(l[i::i])%2:\nl[i] = 1\n\nprint(l.count(1))\n\nfor i in range(1, n + 1):\nif l[i] == 1:\nprint(i)",
  "sim": 0.31868131868131866,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02972/s980458520.py",
  "f2_idx": "./Project_CodeNet_Python800/p02972/s446613775.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(raw_input())\nminv = int(raw_input())\nmaxv = -1*10**9\n\nfor j in range(n-1):\na = int(raw_input())\nb = a- minv\nif maxv < b:\nmaxv = b\nif minv > a:\nminv = a\n\nprint maxv",
  "f2": "#coding: utf-8\n#ALDS1_1D\nimport sys\n\nn=int(raw_input())\nminv=float(\"inf\")\nmaxv=float(\"-inf\")\nfor i in xrange(1,n+1):\nr=int(raw_input())\nmaxv=max(maxv,r-minv)\nminv=min(minv,r)\n\nprint maxv",
  "sim": 0.358974358974359,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02258/s221500135.py",
  "f2_idx": "./Project_CodeNet_Python800/p02258/s020442645.py",
  "response": "Yes"
 },
 {
  "f1": "print('YNEOS'[int(input().replace(' ',''))%4!=0::2])",
  "f2": "a,b,c=map(int,input().split())\nnum=a*100+b*10+c\nprint(\"YES\" if num%4==0 else \"NO\")",
  "sim": 0.2857142857142857,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03693/s844926557.py",
  "f2_idx": "./Project_CodeNet_Python800/p03693/s617701620.py",
  "response": "Yes"
 },
 {
  "f1": "n=int(input())\nans=1e10\nfor i in range(1,n//2+1):\nans=min(ans,sum(map(int,list(str(i))))+sum(map(int,list(str(n-i)))))\nprint(ans)",
  "f2": "n = int(input())\nabsum = []\nfor a in range(1,n//2+1):\nb = n-a\nasum = 0\nbsum = 0\nalen = len(str(a))\nblen = len(str(b))\nfor j in range(alen):\na0 = (a//(10**j)) % 10\nasum = asum + a0\nfor k in range(blen):\nb0 = (b//(10**k)) % 10\nbsum = bsum + b0\nabsum.append(asum+bsum)\nprint(min(absum))",
  "sim": 0.4318181818181818,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03331/s596654415.py",
  "f2_idx": "./Project_CodeNet_Python800/p03331/s616254712.py",
  "response": "Yes"
 },
 {
  "f1": "n,m,x = map(int, input().split())\n\nN=[]\nNI=[]\nfor i in range(n) :\nN = list(map(str, input().split()))\nNI.append(N)\n\nans=-1\n\nfor i in range(1<<n) :\nA=[0]*(m+1)\nfor j in range(n) :\n# print(NI[j])\nif (1<<j)&i :\nA=[x+int(y) for(x,y)in zip(A,NI[j])]\n# print(A)\na = A[0]\ndel A[0]\nif min(A)<x :\na=-1\nelif ans==-1:\nans = a\nelif ans>a :\nans = a\nprint(ans)",
  "f2": "import numpy as np\n\n\ndef main() -> None:\nn, m, x = map(int, input().split())\nbooks = [tuple(map(int, input().split())) for _ in range(n)]\n\nis_able = False\nanswer = float('inf')\nfor i in range(2**n):\nmoney = 0\nskills = np.zeros(m)\nfor j in range(n):\nif ((i >> j) & 1):\nmoney += books[j][0]\nskills += books[j][1:]\nif x <= skills.min():\nis_able = True\nanswer = min(answer, money)\n\nprint(answer if is_able else -1)\nreturn\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.3684210526315789,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02683/s059228066.py",
  "f2_idx": "./Project_CodeNet_Python800/p02683/s144686632.py",
  "response": "Yes"
 },
 {
  "f1": "def II(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\nN=II()\nA=LI()\ncnt=[0]*((10**6)+1)\nfor elem in A:\ncnt[elem]+=1\nunique=[]\nfor i in range((10**6)+1):\nif cnt[i]==1:\nunique.append(i)\ncnt=[0]*((10**6)+1)\nA=list(set(A))\nfor elem in A:\nfor m in range(elem*2,10**6+1,elem):\ncnt[m]=1\nans=0\nfor i in unique:\nif cnt[i]==0:\nans+=1\nprint(ans)",
  "f2": "import sys\nread = sys.stdin.read\nreadlines = sys.stdin.readlines\ndef main():\nn, *a = map(int, read().split())\na.sort()\na = tuple(a)\nTorF = [0] * (a[-1] + 1)\nfor ae in a:\nTorF[ae] = 1\nfor i1 in range(n - 1):\na1 = a[i1]\nif TorF[a1]:\nm = a[-1] // a1 + 1\nfor i2 in range(2, m):\nTorF[a1 * i2] = 0\nif a[i1 + 1] == a[i1]:\nTorF[a[i1]] = 0\nr = sum(TorF)\nprint(r)\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.375,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02642/s363098278.py",
  "f2_idx": "./Project_CodeNet_Python800/p02642/s038403244.py",
  "response": "Yes"
 },
 {
  "f1": "# 入力\nN = int(input())\n\n# pfacから次数がn以上の素数の数を返す\ndef p_deg_le(pfac, n):\nret = 0\nfor p_deg in pfac:\nif p_deg[1] >= n: ret += 1\nelse: break\nreturn ret\n\n\n# 100までの素数\nP = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n\n# N!を素因数分解\npfac = {} # N!の素因数分解\nfor i in range(1, N + 1):\nfor p in P:\nwhile i % p == 0:\nif p in pfac:   pfac[p] += 1\nelse:           pfac[p] = 1\ni //= p\n\n# 次数の多い素数が前にくるようソート\npfac = sorted(pfac.items(), reverse = True, key = lambda x : x[1])\n\nfact = 1\nfor p_deg in pfac:\nfact *= p_deg[0] ** p_deg[1]\n\n\n# 約数が75 = 3 * 5 * 5個あるN!の約数は以下のいずれかの形のq\n# q = p1^74, q = p1^24 * p2^2, q = p1^14 * p2^4,\n# q = p1^4 * p2^4 * p3^2\np_deg = {}\nfor deg in (2, 4, 14, 24, 74):\np_deg[deg] = p_deg_le(pfac, deg)\n\n# q = p1^4 * p2^4 * p3^2\nans = (p_deg[4] * (p_deg[4] - 1) // 2) * (p_deg[2] - 2)\n# q = p1^14 * p2^4\nans += p_deg[14] * (p_deg[4] - 1)\n# q = p1^24 * p2^2\nans += p_deg[24] * (p_deg[2] - 1)\n# q = p1^74\nans += p_deg[74]\n\nprint(ans)",
  "f2": "from collections import defaultdict\nimport itertools\n\ndef pfact(m):\npf = {}\nfor i in range(2,int(m**0.5)+1):\nwhile m%i == 0:\npf[i] = pf.get(i,0) + 1\nm //= i\nif m>1 : pf[m]=1\nreturn pf\n\nn = int(input())\n\nplist = defaultdict(lambda: 0)\nfor i in range(2, n+1):\nfor j, k in pfact(i).items():\nplist[j] += k\n\ndef makediv(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn lower_divisors + upper_divisors[::-1]\n\nshichigo = set(makediv(75))\nshichigo.remove(1)\n\nthelist = [j+1 for j in plist.values()]\nthelist.sort()\n\nansdict = {\n3: 0,\n5: 0,\n15: 0,\n25: 0,\n75: 0\n}\n\nfor cnt, i in enumerate(thelist):\nfor j in range(i+1):\nif j in shichigo:\nansdict[j] += 1\n\n\"\"\"\n75\n= 5*15\n= 3*25\n= 3*5*5\n\"\"\"\n\nans = 0\nans += ansdict[75]\nans += ansdict[15]*(ansdict[5]-1)\nans += ansdict[25]*(ansdict[3]-1)\nans += ansdict[5]*(ansdict[5]-1)*(ansdict[3]-2)//2\nprint(ans)",
  "sim": 0.3046875,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03213/s980143995.py",
  "f2_idx": "./Project_CodeNet_Python800/p03213/s185197649.py",
  "response": "No"
 },
 {
  "f1": "###template###\nimport sys\ndef input(): return sys.stdin.readline().rstrip()\ndef mi(): return map(int, input().split())\n###template###\n\nN = int(input())\nA = input()\nB = input()\nC = input()\n\nans = 0\nfor a, b, c in zip(A, B, C):\nans += len(set((a,b,c)))-1\n\nprint(ans)\n",
  "f2": "def slove():\nimport sys\ninput = sys.stdin.readline\nn = int(input().rstrip('\\n'))\na = str(input().rstrip('\\n'))\nb = str(input().rstrip('\\n'))\nc = str(input().rstrip('\\n'))\ncnt = 0\nfor i in range(n):\nif a[i] == b[i] == c[i]:\ncontinue\nelif a[i] == b[i]:\ncnt += 1\nelif b[i] == c[i]:\ncnt += 1\nelif a[i] == c[i]:\ncnt += 1\nelse:\ncnt += 2\nprint(cnt)\n\n\nif __name__ == '__main__':\nslove()",
  "sim": 0.4074074074074074,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03140/s596788052.py",
  "f2_idx": "./Project_CodeNet_Python800/p03140/s736558633.py",
  "response": "Yes"
 },
 {
  "f1": "k = int(input())\nif k %2 == 0:\nprint(int(k*k/2/2))\nelif k%2 ==1:\nprint(int((k//2 + 1)*(k//2)))",
  "f2": "def main():\nk=int(input())\nk1 = len([i for i in range(k) if i % 2 == 0])\nprint(k1*(k-k1))\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.4375,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03264/s551836378.py",
  "f2_idx": "./Project_CodeNet_Python800/p03264/s714256140.py",
  "response": "No"
 },
 {
  "f1": "#!/usr/bin/python3\n\nimport sys\n\ndef input():\nreturn sys.stdin.readline().rstrip('\\n')\n\n#S = input()\nA1,A2,A3 = list(map(int,input().split()))\n\nif A1+A2+A3 < 22:\nprint('win')\nelse:\nprint('bust')",
  "f2": "a, a1, a2 = map(int,input().split())\n\nif a + a1 + a2 >= 22:\nprint('bust')\nelse:\nprint('win')",
  "sim": 0.4722222222222222,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02835/s468849056.py",
  "f2_idx": "./Project_CodeNet_Python800/p02835/s394817344.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\n\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\nsys.setrecursionlimit(10 ** 9)\nINF = 1 << 60\nMOD = 1000000007\n\n\ndef main():\nN, M = map(int, readline().split())\n\nif N > M:\nN, M = M, N\n\nif M == 1:\nans = 1\nelif N == 1:\nans = M - 2\nelse:\nans = (N - 2) * (M - 2)\n\nprint(ans)\nreturn\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "def main():\nn, m = map(int, input().split())\nif (n, m) == (1, 1):\nprint(1)\nexit()\n\nif n == 1 or m == 1:\nans = max(0, max(n, m) - 2)\nprint(ans)\nreturn\nelse:\nx = max(0, n - 2)\ny = max(0, m - 2)\nans = x * y\nprint(ans)\nreturn\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.45098039215686275,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03417/s469617516.py",
  "f2_idx": "./Project_CodeNet_Python800/p03417/s488180427.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nN = int(input())\nH = list(map(int, input().split()))\n\nans = 0\npre = 0\nfor i in H:\nif pre < i:\nans += i-pre\n\npre = i\n\nprint(ans)\n\n\nresolve()",
  "f2": "def readinput():\nn=int(input())\nh=list(map(int,input().split()))\nreturn n,h\n\ndef main(n,h):\ncount=0\nhmax=max(h)\nfor i in range(hmax):\nj=0\nmizuyari=False\nfor j in range(n):\nif h[j]>0:\nif mizuyari==False:\nmizuyari=True\ncount+=1\nh[j]-=1\nelse:\nmizuyari=False\nreturn count\n\nif __name__=='__main__':\nn,h=readinput()\nans=main(n,h)\nprint(ans)",
  "sim": 0.4166666666666667,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03147/s034400392.py",
  "f2_idx": "./Project_CodeNet_Python800/p03147/s960845931.py",
  "response": "No"
 },
 {
  "f1": "length = int(input())\ntarg = [int(n) for n in input().split(' ')]\nfor l in range(length):\nfor m in range(l):\nif targ[l - m] < targ[l - m - 1]:\ndisp = targ[l-m -1]\ntarg[l-m-1] = targ[l-m]\ntarg[l-m] = disp\nprint(\" \".join([str(n) for n in targ]))",
  "f2": "n = int(input())\nline = input()\narr = line.split(\" \")\nnums = []\nfor c in range(n):\nnums.append(int(arr[c]))\n\ndef trace(n_list):\nn_list_str = \"\"\nfor num in n_list:\nn_list_str += str(num)\nn_list_str += \" \"\nprint(n_list_str.rstrip(\" \"))\n\nprint(line)\nfor i in range(1, n):\nv = nums[i]\nj = i-1\nwhile j >= 0 and nums[j] > v:\nnums[j+1] = nums[j]\nj -= 1\nnums[j+1] = v\ntrace(nums)",
  "sim": 0.36538461538461536,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02255/s289322600.py",
  "f2_idx": "./Project_CodeNet_Python800/p02255/s619871904.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nf = False\nfor i in range(len(s)):\nfor j in range(i,len(s)):\nif s[:i]+s[j:] == \"keyence\":\nf = True\nprint(\"YES\" if f else \"NO\")",
  "f2": "def main():\nimport sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(10**7)\nfrom collections import Counter, deque\nfrom collections import defaultdict\nfrom itertools import combinations, permutations, accumulate, groupby, product\nfrom bisect import bisect_left,bisect_right\nfrom heapq import heapify, heappop, heappush\nfrom math import floor, ceil,pi,factorial\nfrom operator import itemgetter\ndef I(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\ndef LI2(): return [int(input()) for i in range(n)]\ndef MXI(): return [[LI()]for i in range(n)]\ndef SI(): return input().rstrip()\ndef printns(x): print('\\n'.join(x))\ndef printni(x): print('\\n'.join(list(map(str,x))))\ninf = 10**17\nmod = 10**9 + 7\n#main code here!\ns=SI()\nn=len(s)\nfor i in range(8):\ns1=s[:i]\ns2=s[n+i-7:]\n\nif s1+s2==\"keyence\":\nprint(\"YES\")\nexit()\nprint(\"NO\")\n\n\n\n\n\n\n\n\n\nif __name__==\"__main__\":\nmain()",
  "sim": 0.22580645161290322,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03150/s477275876.py",
  "f2_idx": "./Project_CodeNet_Python800/p03150/s331122487.py",
  "response": "Yes"
 },
 {
  "f1": "s=input()\nans=100\nfor i in [chr(97+i)for i in range(26)]:\na=b=0\nfor j in s:\nif i!=j:\na+=1\nelse:\na=0\nb=max(b,a)\nans=min(ans,b)\nprint(ans)",
  "f2": "s = input()\nss = set(s)\n# print(ss)\nans = float('inf')\nfor si in ss:\ncnt = 0\ncopy_s = list(s)\n# print(copy_s)\nwhile len(set(copy_s)) != 1:\n# copy_s.pop()\ncnt += 1\nfor i in range(len(copy_s)-1):\nif copy_s[i+1] == si:\ncopy_s[i] = si\ncopy_s.pop()\nans = min(ans, cnt)\n\nprint(ans)",
  "sim": 0.4583333333333333,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03687/s899100223.py",
  "f2_idx": "./Project_CodeNet_Python800/p03687/s660544496.py",
  "response": "No"
 },
 {
  "f1": "s=input()\nt=input()\n\nS=[]\nT=[]\nfor a in s:\nS.append(a)\nfor a in t:\nT.append(a)\nS.sort()\nT.sort(reverse=True)\n\n\ns2=0\nt2=0\nans=\"No\"\nfor i in range(min(len(S),len(T))):\ns2=s2*256+ord(S[i])\nt2=t2*256+ord(T[i])\nif s2<t2 :\nans=\"Yes\"\nelif s2==t2 :\nif len(s)<len(t) :\nans=\"Yes\"\nprint(ans)",
  "f2": "s = sorted(input())\nt = sorted(input(),reverse=True)\n\nts = [t, s]\nif ts != sorted(ts):\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.37209302325581395,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03486/s469259809.py",
  "f2_idx": "./Project_CodeNet_Python800/p03486/s096289014.py",
  "response": "No"
 },
 {
  "f1": "N = int(input())\nx = int(N**(0.5)) + 1\nwhile True:\nif N % x == 0:\nprint((x-1)+((N//x)-1))\nbreak\nx -= 1",
  "f2": "#nの約数を列挙する関数\nimport math\ndef n_div(n):\ndiv_list = []\nimport math\nfor i in range(1, math.ceil(math.sqrt(n))+1):\nif n % i ==0:\ndiv_list.append(i)\nif i*i ==n:\ncontinue\ndiv_list.append(n//i)\ndiv_list.sort()\nreturn div_list\n\nn = int(input())\nlr = n_div(n)\n#print(lr)\nif len(lr) % 2==0:\na = len(lr)/2\na = int(a)\nans = lr[a]+lr[a-1]-2\nelse:\na = math.floor(len(lr)/2)\n#print(a)\nans = lr[a]*2  -2\n\nprint(ans)",
  "sim": 0.2727272727272727,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02881/s172872039.py",
  "f2_idx": "./Project_CodeNet_Python800/p02881/s184548697.py",
  "response": "No"
 },
 {
  "f1": "from collections import Counter\n\nS = list(input())\nC = Counter(S)\nif len(S) == 1:\nprint('YES')\nexit()\n\"\"\"\n条件を考えてみる\n一種類の字しかない時は回文\n２種類の時も，長さが２より大きい時は回文\n同じ文字をに連続で並べないといけない時に回文になる。\n\nある文字が他の文字よりも2つ以上多い時には回文になる。\n\"\"\"\n\nL = C.values()\nif len(L) <= 1:\nprint('NO')\nelif len(L) == 2 and len(S) > 2:\nprint('NO')\nelif max(L) - min(L) >= 2:\nprint('NO')\nelse:\nprint('YES')",
  "f2": "def main():\ns = input()\ncount = {\"a\": 0, \"b\": 0, \"c\": 0}\nfor ss in s:\ncount[ss] += 1\ncount = list(count.values())\ncount.sort()\nprint(\"YES\" if count[-1] - count[0] <= 1 else \"NO\")\n\n\nif __name__ == '__main__':\nmain()\n",
  "sim": 0.2127659574468085,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03524/s139462631.py",
  "f2_idx": "./Project_CodeNet_Python800/p03524/s347025543.py",
  "response": "No"
 },
 {
  "f1": "a,b=map(int,input().split())\nn=[a,b,a+b]\nif len([i for i in n if i%3==0])>0:\nprint('Possible')\nelse:\nprint('Impossible')",
  "f2": "import sys\nimport itertools\nsys.setrecursionlimit(1000000000)\nfrom heapq import heapify,heappop,heappush,heappushpop\nimport math\nimport collections\n\n\na,b = map(int,input().split())\nif (a+b)%3 == 0:\nprint(\"Possible\")\nelif a%3 == 0:\nprint(\"Possible\")\nelif b%3 == 0:\nprint(\"Possible\")\nelse:\nprint(\"Impossible\")",
  "sim": 0.43478260869565216,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03657/s804805583.py",
  "f2_idx": "./Project_CodeNet_Python800/p03657/s392289078.py",
  "response": "Yes"
 },
 {
  "f1": "\"\"\"\nA\n>\nB\nのときGREATER、\nA\n<\nB\nのときLESS、\nA\n=\nB\nのときEQUALと出力せよ。\n\n\"\"\"\nA,B=map(int,open(0).read().split())\nif A>B:ans=\"GREATER\"\nif A<B:ans=\"LESS\"\nif A==B:ans=\"EQUAL\"\nprint(ans)",
  "f2": "A = input()\nB = input()\nif len(A) > len(B):\nans = 'GREATER'\nelif len(A) < len(B):\nans = 'LESS'\nelif len(A) == len(B):\nans = 'EQUAL'\nfor i in range(len(A)):\nif int(A[i]) > int(B[i]):\nans = 'GREATER'\nbreak\nelif int(A[i]) < int(B[i]):\nans = 'LESS'\nbreak\nprint(ans)",
  "sim": 0.35135135135135137,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03738/s824713222.py",
  "f2_idx": "./Project_CodeNet_Python800/p03738/s656028233.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split(\",\")\nprint(' '.join(s))",
  "f2": "def main():\nstr =input()\nprint(str.replace(',',' '))\n\nmain()",
  "sim": 0.3888888888888889,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03834/s558368673.py",
  "response": "Yes"
 },
 {
  "f1": "#!/usr/bin/env python3\nimport sys\nsys.setrecursionlimit(10**8)\nINF = float(\"inf\")\n\nMOD = 1000000007  # type: int\n\n\nclass Combination(object):\n\ndef __init__(self, N, mod=MOD):\nfac, finv, inv = [0]*(N+1), [0]*(N+1), [0]*(N+1)\nfac[:2] = 1, 1\nfinv[:2] = 1, 1\ninv[1] = 1\nfor i in range(2, N+1):\nfac[i] = fac[i-1]*i % mod\ninv[i] = -inv[mod % i]*(mod//i) % mod\nfinv[i] = finv[i-1]*inv[i] % mod\nself.N = N\nself.MOD = mod\nself.fac = fac\nself.finv = finv\nself.inv = inv\n\ndef __call__(self, n, k):\nif n < k:\nreturn 0\nif n < 0 or k < 0:\nreturn 0\nfac = self.fac\nfinv = self.finv\nmod = self.MOD\nreturn fac[n] * (finv[k]*finv[n-k] % mod) % mod\n\n\ndef solve(H: int, W: int, A: int, B: int):\n\ncmb = Combination(H+W+1, MOD)\n\nans = 0\nfor i in range(B, W):\nbuf = cmb(H-A-1+i, i)\nbuf *= cmb(A+W-i-2, W-i-1)\nbuf %= MOD\nans += buf\nans %= MOD\nprint(ans)\n\nreturn\n\n\ndef main():\n\ndef iterate_tokens():\nfor line in sys.stdin:\nfor word in line.split():\nyield word\ntokens = iterate_tokens()\nH = int(next(tokens))  # type: int\nW = int(next(tokens))  # type: int\nA = int(next(tokens))  # type: int\nB = int(next(tokens))  # type: int\nsolve(H, W, A, B)\n\n\nif __name__ == '__main__':\nmain()",
  "f2": "h, w, a, b = map(int, input().split())\n###############\n# 二項係数テンプレート\n# 出力制限\nmod = 10 ** 9 + 7\nMAX_N = 2 * 10 ** 5\nfactorial = [1] * MAX_N\n#事前に階乗テーブルを用意\ndef calc_factorial():\nfor i in range(1, MAX_N):\nfactorial[i] = i * factorial[i - 1] % mod\n\ndef comb(n, k):\na = factorial[n] % mod\nb = (factorial[k] * factorial[n - k]) % mod\nb_ = pow(b, mod - 2, mod)\nreturn (a * b_) % mod\n\n\n# 階乗を用意\ncalc_factorial()\n#########\n\n# 全体の組み合わせを計算する\n# h-1(高さ)+w-1(横幅)から、h-1(高さ)個取り出す組み合わせ\nall = comb(h + w - 2, h - 1)\nsub = 0\nfor j in range(1, b + 1):\nsub += comb(h - a - 1 + j - 1, j - 1) * comb(a - 1 + w - j, w - j)\nsub = sub % mod\nif all - sub <= 0:\nprint(all - sub + mod)\nelse:\nprint(all - sub)",
  "sim": 0.2980769230769231,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p04046/s711753237.py",
  "f2_idx": "./Project_CodeNet_Python800/p04046/s324373899.py",
  "response": "Yes"
 },
 {
  "f1": "p,q,r=map(int,input().split())\nn=max(p,q,r)\nprint(p+q+r-n)",
  "f2": "#https://atcoder.jp/contests/abc129/tasks/abc129_a\nN_List = sorted(list(map(int,input().split())))\nprint(sum(N_List[:2]))\n",
  "sim": 0.38461538461538464,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03011/s989291171.py",
  "f2_idx": "./Project_CodeNet_Python800/p03011/s209847484.py",
  "response": "Yes"
 },
 {
  "f1": "from math import factorial\nn,p=map(int,input().split())\na=list(map(int,input().split()))\na1=[]\na0=[]\n\nfor i in a:\nif i%2==1:\na1.append(i)\nelse:\na0.append(i)\n\na1c=len(a1)\na0c=len(a0)\n#print(a1)\n#print(a0)\nans1=0\nfor i in range(a0c+1):\nans1+=factorial(a0c) / factorial(i) / factorial(a0c - i)\n#print(ans1)\nans2=0\nif p==1:\nfor i in range(1,a1c+1,2):\nans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\n\nelse:\nfor i in range(0,a1c+1,2):\nans2+=factorial(a1c) / factorial(i) / factorial(a1c - i)\n\nprint(int(ans2*ans1))",
  "f2": "N, P = map(int, input().split())\nA = list(map(int, input().split()))\neven = 0\nodd = 0\nfor i in range(N):\nif A[i]%2==0:\neven += 1\nelse:\nodd += 1\nif odd>=1:\nans = pow(2,even+odd-1)\nelif P==0:\nans = pow(2,even)\nelse:\nans = 0\nprint(ans)",
  "sim": 0.49122807017543857,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03665/s691889875.py",
  "f2_idx": "./Project_CodeNet_Python800/p03665/s581178261.py",
  "response": "No"
 },
 {
  "f1": "from sys import stdin\nfrom math import ceil\ninp = lambda : stdin.readline().strip()\n\nn, x, t = [int(x) for x in inp().split()]\nprint(ceil(n/x)*t)",
  "f2": "def main(N,X,T):\ncount=0\nans = 0\nwhile count < N:\ncount += X\nans += T\nreturn ans\n\nN,X,T=map(int, input().split())\nprint(main(N,X,T))",
  "sim": 0.21428571428571427,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02576/s132534776.py",
  "f2_idx": "./Project_CodeNet_Python800/p02576/s601652705.py",
  "response": "Yes"
 },
 {
  "f1": "#b\n\nN,T = map(int,input().split())\nCT=[None]*N\nfor i in range(N):\nCT[i] = list( map(int,input().split()) )\n\nintime = [ct[0] for ct in CT if ct[1]<=T]\nif len(intime)==0:\nprint(\"TLE\")\nelse:\nprint(min(intime))",
  "f2": "import sys\n\nreadline = sys.stdin.readline\nMOD = 10 ** 9 + 7\nINF = float('INF')\nsys.setrecursionlimit(10 ** 5)\n\n\ndef main():\nN, T = map(int, readline().split())\nans = INF\n\nfor _ in range(N):\nc, t = map(int, readline().split())\nif t <= T:\nans = min(ans, c)\n\nif ans == INF:\nprint(\"TLE\")\nelse:\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.3620689655172414,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03239/s282537131.py",
  "f2_idx": "./Project_CodeNet_Python800/p03239/s388922951.py",
  "response": "Yes"
 },
 {
  "f1": "X = int(input())\nx = X//100\nif X > x*105 :\nprint('0')\nelif X <= x*105 :\nprint('1')",
  "f2": "n=int(input())\nx=n%100\ny=n//100\nif(y*5>=x):\nprint(\"1\")\nelse:\nprint(0)",
  "sim": 0.4444444444444444,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02843/s928291490.py",
  "f2_idx": "./Project_CodeNet_Python800/p02843/s236123415.py",
  "response": "No"
 },
 {
  "f1": "import sys\nsys.setrecursionlimit(10**7)\ninput = sys.stdin.readline\n\ns = input()\n\nif int(s[0:4]) <= 2019:\nif int(s[5:7]) <= 4:\nif int(s[8:]) <= 30:\nprint(\"Heisei\")\nexit()\n\nprint(\"TBD\")",
  "f2": "t=20190430\ns=input()\n\nif int(s.replace('/', '')) > t:\nprint(\"TBD\")\nelse:\nprint(\"Heisei\")",
  "sim": 0.3157894736842105,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03109/s362038949.py",
  "f2_idx": "./Project_CodeNet_Python800/p03109/s018999909.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nt = input()\n\nfor i in range(len(s) - len(t) + 1)[::-1]:\ncnt = 0\nq = 0\nfor j in range(len(t))[::-1]:\nif s[i + j] == '?':\nq += 1\nelif s[i + j] == t[j]:\ncnt += 1\n\nif cnt == len(t) - q:\nidx = i\ns = s[:idx] + t + s[idx + len(t):]\nfor k in range(len(s)):\nif s[k] == '?':\ns = s[:k] + 'a' + s[k + 1:]\nprint(s)\nbreak\nelse:\nprint('UNRESTORABLE')",
  "f2": "S = list(input())\nT = list(input())\nNS,NT = len(S),len(T)\nouts = []\nif NS>=NT:\nfor i in range(NS-NT+1):\nflag = 0\nfor j in range(NT):\nif S[i+j]==T[j] or S[i+j]==\"?\":\ncontinue\nelse:\nflag = 1\nbreak\nif flag==0:\nout = [\"a\"]*NS\nfor j in range(NT):\nout[i+j]=T[j]\nfor j in range(NS):\nif S[j]!=\"?\":\nout[j]=S[j]\nouts.append(\"\".join(out))\n\nif len(outs) == 0:\nprint(\"UNRESTORABLE\")\nelse:\nprint(outs[-1])",
  "sim": 0.4074074074074074,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03565/s494339732.py",
  "f2_idx": "./Project_CodeNet_Python800/p03565/s784182064.py",
  "response": "Yes"
 },
 {
  "f1": "a,b=map(int,input().split())\ns=input().split(\"-\")\nprint(\"Yes\" if len(s)==2 and len(s[0])==a and len(s[1])==b else \"No\")",
  "f2": "#Postal Code\nA,B=map(int,input().split())\nd=[\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"]\nS=input()\ntotal=0\nfor i in range(A):\nif S[i] in d:\npass\nelse:\ntotal=1\nS=S[A:]\nif S[0]!=\"-\":\ntotal=1\nS=S[1:]\nfor i in range(B):\nif S[i] in d:\npass\nelse:\ntotal=1\nif total==1:\nprint(\"No\")\nelse:\nprint(\"Yes\")",
  "sim": 0.40816326530612246,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03474/s098649846.py",
  "f2_idx": "./Project_CodeNet_Python800/p03474/s567154487.py",
  "response": "Yes"
 },
 {
  "f1": "a,b,x=map(int,input().split())\n\nq1,r1=divmod(a,x)\nq2,_=divmod(b,x)\n\nprint(q2-q1+(r1==0))",
  "f2": "import numpy as np\nimport math\nimport sys\ndef sinput(): return sys.stdin.readline()\ndef iinput(): return int(sinput())\ndef imap(): return map(int, sinput().split())\ndef fmap(): return map(float, sinput().split())\ndef iarr(): return list(imap())\ndef farr(): return list(fmap())\ndef sarr(): return sinput().split()\n\na, b, x = imap()\nans = (b//x) - (a//x)\nif a % x == 0: ans += 1\nprint(ans)",
  "sim": 0.3125,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03861/s935190491.py",
  "f2_idx": "./Project_CodeNet_Python800/p03861/s356217759.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\nimport math\n\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n\ndef ok(x):\nb = [i % x for i in a]\nb.sort(reverse=True)\nt = int(sum(b) / x)\nif t == 0:\nreturn True\nreturn True if sum(b[t:]) <= k else False\n\n\ns = sum(a)\nsqs = int(math.sqrt(s))\nans = 1\nfor x in range(1, sqs + 1):\nif s % x != 0:\ncontinue\nif ok(x):\nans = max(ans, x)\nif ok(int(s / x)):\nans = max(ans, int(s / x))\n\nprint(ans)",
  "f2": "n,k,*a=map(int,open(0).read().split())\ns=sum(a)\nb=[]\nfor i in range(1,30000):b+=[s//i,i]*(s%i<1)\nm=1\nfor i in b:c=sorted(j%i for j in a);m=max(m,i*(sum(c[:-sum(c)//i])<=k))\nprint(m)",
  "sim": 0.421875,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02955/s833103055.py",
  "f2_idx": "./Project_CodeNet_Python800/p02955/s122775545.py",
  "response": "Yes"
 },
 {
  "f1": "def resolve():\nS = input()\ns = [ \"P\" if i ==\"P\" else \"D\"   for i in S]\nprint(\"\".join(s))\nresolve()",
  "f2": "T=input()\n\nprint(T.replace('?','D'))",
  "sim": 0.21428571428571427,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02664/s991265447.py",
  "f2_idx": "./Project_CodeNet_Python800/p02664/s165518712.py",
  "response": "No"
 },
 {
  "f1": "H, W = list(map(int, input().split()))\nC = [None] * (2 * H)\nfor i in range(0, 2 * H, 2):\nC[i] = input()\nC[i + 1] = C[i]\nfor c in C:\nprint(c)",
  "f2": "#!/usr/bin/env python3\n\nfrom typing import List\n\n\ndef main():\nargs = input().split()\nH = int(args[0])\nW = int(args[1])\n\nresult: List[str] = []\nfor row in range(H):\nrowStr = input()\nresult.append(rowStr)\nresult.append(rowStr)\n\nfor item in result:\nprint(item)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.391304347826087,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03853/s214073563.py",
  "f2_idx": "./Project_CodeNet_Python800/p03853/s885520996.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(raw_input())\nlst = []\n#store all the cards\nfor i in [\"S\",\"H\",\"C\",\"D\"]:\nfor j in xrange(1,14):\nlst.append(\"{0} {1}\".format(i,j))\n#discard the given cards\nfor i in range(n):\na = raw_input()\nlst.remove(a)\n#print the result\nfor i in range(len(lst)):\nprint lst[i]",
  "f2": "all_set = ['S ' + str(i) for i in range(1, 14)] + ['H ' + str(i) for i in range(1, 14)] + ['C ' + str(i) for i in range(1, 14)] + ['D ' + str(i) for i in range(1, 14)]\nr = int(input())\n\nfor _ in range(r):\nx = input()\nif x in all_set:\ndel all_set[all_set.index(x)]\n\nfor i in all_set:\nprint(i)",
  "sim": 0.3333333333333333,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02408/s908180705.py",
  "f2_idx": "./Project_CodeNet_Python800/p02408/s111691402.py",
  "response": "Yes"
 },
 {
  "f1": "n, k = map(int, input().split())\na = [int(i) for i in input().split()]\nfor j in range(min(k, 42)):\nbit = [0 for _ in range(n)]\nfor i in range(n):\nbit[max(i - a[i], 0)] += 1\nif i + a[i] + 1 < n:\nbit[i + a[i] + 1] -= 1\nresult = [bit[0]]\nfor i in range(n - 1):\nresult.append(bit[i + 1] + result[-1])\na = result\nprint(' '.join(list(map(str, a))))",
  "f2": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random,resource\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\n\ndef main():\nn,k = LI()\na = LI()\n\nfor kk in range(k):\nr = [0] * (n+1)\nfor i in range(n):\nc = a[i]\nr[max(0, i - c)] += 1\nr[min(n, i + c + 1)] -= 1\n\nif r[0] == n and r[n] == -n:\na = [n] * n\nbreak\n\nt = 0\nfor i in range(n):\nt += r[i]\na[i] = t\n\nreturn JA(a, \" \")\n\n\nprint(main())\n\n",
  "sim": 0.3018867924528302,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02647/s958344396.py",
  "f2_idx": "./Project_CodeNet_Python800/p02647/s349731386.py",
  "response": "Yes"
 },
 {
  "f1": "int=int(input())\ny=int*int*int\nprint(y)",
  "f2": "i = int(raw_input())\nprint(i ** 3)",
  "sim": 0.4166666666666667,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02388/s893261437.py",
  "f2_idx": "./Project_CodeNet_Python800/p02388/s554648199.py",
  "response": "Yes"
 },
 {
  "f1": "s = input()\nn = 0\nm = 0\nfor i in range(0, len(s)):\nif s[i] == 'C':\nn = 1\nbreak\nfor j in range (i, len(s)):\nif s[j] == 'F':\nm = 1\nbreak\nif n == 1 and m == 1:\nprint('Yes')\nelse:\nprint('No')",
  "f2": "s = list(input())\n\nc = False\nf = False\nfor i in range(len(s)):\nif s[i]==\"C\":\nc = True\nif c and s[i]==\"F\":\nf = True\n\nif c and f:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.47368421052631576,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03957/s844979285.py",
  "f2_idx": "./Project_CodeNet_Python800/p03957/s976452867.py",
  "response": "Yes"
 },
 {
  "f1": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\ndef inv(x):\nreturn pow(x, mod2 - 2, mod2)\n\ncms = 10**6\ncm = [0] * cms\n\ndef comb_init():\ncm[0] = 1\nfor i in range(1, cms):\ncm[i] = cm[i-1] * i % mod2\n\ndef comb(a, b):\nreturn (cm[a] * inv(cm[a-b]) % mod2) * inv(cm[b]) % mod2\n\ndef main():\nn,m,k = LI()\ncomb_init()\n\na = [0] * n\na[0] = m\nfor i in range(1,n):\na[i] = a[i-1] * (m-1) % mod2\n\nr = 0\nfor i in range(k+1):\nr += a[n-i-1] * comb(n-1, i)\nr %= mod2\n\nreturn r\n\nprint(main())\n\n\n",
  "f2": "import sys, re\nfrom collections import deque, defaultdict, Counter\nfrom math import ceil, sqrt, hypot, factorial, pi, sin, cos, tan, asin, acos, atan, radians, degrees, log2, gcd\nfrom itertools import accumulate, permutations, combinations, combinations_with_replacement, product, groupby\nfrom operator import itemgetter, mul\nfrom copy import deepcopy\nfrom string import ascii_lowercase, ascii_uppercase, digits\nfrom bisect import bisect, bisect_left\nfrom heapq import heappush, heappop\nfrom functools import reduce\ndef input(): return sys.stdin.readline().strip()\ndef INT(): return int(input())\ndef MAP(): return map(int, input().split())\ndef LIST(): return list(map(int, input().split()))\ndef ZIP(n): return zip(*(MAP() for _ in range(n)))\nsys.setrecursionlimit(10 ** 9)\nINF = float('inf')\nmod =  998244353\n\ndef power(x, n, p):\nans = 1\nwhile n:\nif n%2:\nans = ans*x%p\nx = x*x%p\nn >>= 1\nreturn ans\n\nlim = 2*10**5\nfact = [1]*(lim+1)\nfor n in range(1, lim+1):\nfact[n] = n*fact[n-1]%mod\n\nfact_inv = [1]*(lim+1)\nfact_inv[lim] = power(fact[lim], mod-2, mod)\nfor n in range(lim, 0, -1):\nfact_inv[n-1] = n*fact_inv[n]%mod\n\ndef C(n, r):\nreturn (fact[n]*fact_inv[r]%mod)*fact_inv[n-r]%mod\n\n\nN, M, K = MAP()\n\nans = 0\nfor i in range(K+1):\na = M*power(M-1, N-1-i, mod)%mod*C(N-1, i)%mod\nans = (ans+a)%mod\n\nprint(ans)",
  "sim": 0.32075471698113206,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02685/s023032736.py",
  "f2_idx": "./Project_CodeNet_Python800/p02685/s705215511.py",
  "response": "Yes"
 },
 {
  "f1": "s = input().split(\",\")\nprint(' '.join(s))",
  "f2": "a,b,c = input().split(',')\n\nprint(a,b,c,sep=' ')",
  "sim": 0.47058823529411764,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03834/s839285071.py",
  "f2_idx": "./Project_CodeNet_Python800/p03834/s140743843.py",
  "response": "No"
 },
 {
  "f1": "a = map(int, raw_input().split())\na.sort()\nfor i in range(len(a)):\nprint a[i],",
  "f2": "import sys\n\nx=sys.stdin.readline()\n\narr=x.split()\n\narrInt=list()\n#print(arr, type(arr))\nfor i in arr:\n# print(i)\narrInt.append(int(i))\n\n#print(arrInt,type(arrInt))\narrInt.sort()\nprint(' '.join(map(str,arrInt)))\n\n\n",
  "sim": 0.4,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02393/s175819222.py",
  "f2_idx": "./Project_CodeNet_Python800/p02393/s501576687.py",
  "response": "Yes"
 },
 {
  "f1": "h,w=map(int,input().split())\na=[list(input()) for i in range(h)]\nb=a\nfor i in range(h):\nfor j in range(w):\nif a[i][j]!=\"#\":\nb[i][j]=a[i][max(0,j-1):min(w,j+2)].count(\"#\")\nif i!=0:\nb[i][j]+=a[i-1][max(0,j-1):min(w,j+2)].count(\"#\")\nif i!=h-1:\nb[i][j]+=a[i+1][max(0,j-1):min(w,j+2)].count(\"#\")\nfor i in range(h):\nprint(\"\".join(str(j) for j in b[i]))",
  "f2": "h, w = map(int, input().split())\ns = [list(input()) for _ in range(h)]\n\ndi = [1, -1, 0, 0, 1, -1, 1, -1]\ndj = [0, 0, 1, -1, 1, -1, -1, 1]\n\nfor i in range(h):\nfor j in range(w):\nif s[i][j] == '#':\ncontinue\ncnt = 0\nfor ii, jj in zip(di, dj):\nni = i + ii\nnj = j + jj\nif 0 <= ni < h and 0 <= nj < w:\nif s[ni][nj] == '#':\ncnt += 1\ns[i][j] = chr(ord('0') + cnt)\n\nfor x in s:\nprint(''.join(x))",
  "sim": 0.4745762711864407,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03574/s263457388.py",
  "f2_idx": "./Project_CodeNet_Python800/p03574/s833304500.py",
  "response": "Yes"
 },
 {
  "f1": "n = int(input())\n\nst_t = 0\nst_x = 0\nst_y = 0\nli_in = list()\nfor i in range(n):\nli_in.append(list(map(int, input().split())))\n\n\nfor t, x, y in li_in:\ntime = t - st_t\ndiff_x = abs(x - st_x)\ndiff_y = abs(y - st_y)\n\nif diff_x + diff_y > time:\nprint('No')\nexit(0)\nelif diff_x + diff_y == time:\nst_t = t\nst_x = x\nst_y = y\ncontinue\n# elif diff_x + diff_y < t:\nelse:\nif (time - (diff_x + diff_y)) % 2 == 0:\nst_t = t\nst_x = x\nst_y = y\ncontinue\nelse:\nprint('No')\nexit(0)\nelse:\nprint('Yes')",
  "f2": "N = int(input())\ntpr, xpr, ypr = 0, 0, 0\ncount = 0\nfor i in range(N):\nt, x, y = map(int, input().split())\nd = abs(x-xpr) + abs(y-ypr)\nn = ((t-tpr) - d) / 2\nif n >= 0 and n % 1 == 0:\ncount += 1\ntpr, xpr, ypr = t, x, y\nif count == N:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.49122807017543857,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03457/s348971750.py",
  "f2_idx": "./Project_CodeNet_Python800/p03457/s369708731.py",
  "response": "Yes"
 },
 {
  "f1": "def myAnswer(N:int) -> int:\nN -=1\nreturn N * (N + 1) // 2\n\ndef modelAnswer():\nreturn\ndef main():\nN = int(input())\nprint(myAnswer(N))\nif __name__ == '__main__':\nmain()",
  "f2": "n=int(input());print(int(n*(n-1)//2))",
  "sim": 0.37037037037037035,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02924/s108456015.py",
  "f2_idx": "./Project_CodeNet_Python800/p02924/s952476164.py",
  "response": "Yes"
 },
 {
  "f1": "import math,string,itertools,fractions,heapq,collections,re,array,bisect,sys,copy,functools\nimport time,random\n\nsys.setrecursionlimit(10**7)\ninf = 10**20\neps = 1.0 / 10**10\nmod = 10**9+7\nmod2 = 998244353\ndd = [(-1,0),(0,1),(1,0),(0,-1)]\nddn = [(-1,0),(-1,1),(0,1),(1,1),(1,0),(1,-1),(0,-1),(-1,-1)]\n\ndef LI(): return list(map(int, sys.stdin.readline().split()))\ndef LLI(): return [list(map(int, l.split())) for l in sys.stdin.readlines()]\ndef LI_(): return [int(x)-1 for x in sys.stdin.readline().split()]\ndef LF(): return [float(x) for x in sys.stdin.readline().split()]\ndef LS(): return sys.stdin.readline().split()\ndef I(): return int(sys.stdin.readline())\ndef F(): return float(sys.stdin.readline())\ndef S(): return input()\ndef pf(s): return print(s, flush=True)\ndef pe(s): return print(str(s), file=sys.stderr)\ndef JA(a, sep): return sep.join(map(str, a))\ndef JAA(a, s, t): return s.join(t.join(map(str, b)) for b in a)\n\ndef inv(x):\nreturn pow(x, mod2 - 2, mod2)\n\ncms = 10**6\ncm = [0] * cms\n\ndef comb_init():\ncm[0] = 1\nfor i in range(1, cms):\ncm[i] = cm[i-1] * i % mod2\n\ndef comb(a, b):\nreturn (cm[a] * inv(cm[a-b]) % mod2) * inv(cm[b]) % mod2\n\ndef main():\nn,m,k = LI()\ncomb_init()\n\na = [0] * n\na[0] = m\nfor i in range(1,n):\na[i] = a[i-1] * (m-1) % mod2\n\nr = 0\nfor i in range(k+1):\nr += a[n-i-1] * comb(n-1, i)\nr %= mod2\n\nreturn r\n\nprint(main())\n\n\n",
  "f2": "#abc167_e\nn,m,k = map(int,input().split())\n\nmod = 998244353\n\nans = 0\n\n#precalculation of the factorial\n#fact[i] = i!\nnum = n\nfact = [0] * num\nfact[0] = 1\nfor i in range(1,num):\nfact[i] = (fact[i-1] * i) % mod\n\n\n#precalculation of the (M-1)**i\n#M_pow[i] = (M-1)^i\nM_pow = [0] * num\nM_pow[0] = 1\nfor i in range(1,num):\nM_pow[i] = (M_pow[i-1] * (m-1)) % mod\n\n\nfor i in range(k+1):\nf = M_pow[n-i-1] * pow(fact[i]*fact[n-i-1], mod-2, mod)\nans += f % mod\n\nans *= m * fact[n-1]\nprint(ans % mod)",
  "sim": 0.27927927927927926,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02685/s023032736.py",
  "f2_idx": "./Project_CodeNet_Python800/p02685/s314503183.py",
  "response": "Yes"
 },
 {
  "f1": "N=int(input())\ns=input()\nprint(\"Yes\" if s.count(\"R\")>s.count(\"B\") else \"No\")",
  "f2": "n = int(input())\ns = input()\nr,b = 0,0\nfor i in range(n):\nif s[i] == \"R\":\nr += 1\nelse:\nb += 1\nif r > b:\nprint(\"Yes\")\nelse:\nprint(\"No\")",
  "sim": 0.40625,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03080/s539112152.py",
  "f2_idx": "./Project_CodeNet_Python800/p03080/s799955772.py",
  "response": "Yes"
 },
 {
  "f1": "from collections import deque\n\nN,X,Y= map(int,input().split())\n\nroot = [[] for i in range(N)]\nfor i in range(N-1):\nroot[i].append(i+1)\nroot[i+1].append(i)\n\nroot[X-1].append(Y-1)\nroot[Y-1].append(X-1)\n\nans = [0]*(N-1)\n\nfor i in range(N):\nstack=deque([i])\ncheck = [-1]*N\ncheck[i] = 0\n\nwhile len(stack)>0:\nv = stack.popleft()\nfor i in root[v]:\nif check[i] == -1:\ncheck[i]=check[v]+1\nstack.append(i)\n#print(check)\nfor ch in check:\nif ch > 0:\nans[ch-1] += 1\n\nfor aa in ans:\nprint(aa//2)",
  "f2": "n,x,y=map(int,input().split())\nk=[0]\nk*=(n-1)\nz=x-y\nfor i in range(1,n+1):\nfor j in range(i+1,n+1):\nans1=j-i\nans2=abs(x-i)+abs(y-j)+1\nans3=abs(x-j)+abs(y-i)+1\nans=min(ans1,ans2,ans3)\nk[ans-1]+=1\n\nfor i in range(n-1):\nprint(k[i])",
  "sim": 0.3898305084745763,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02726/s867498656.py",
  "f2_idx": "./Project_CodeNet_Python800/p02726/s932769419.py",
  "response": "No"
 },
 {
  "f1": "N, A, B, C, D = list(map(int, input().split()))\nS = input()\n\nA -= 1\nB -= 1\nC -= 1\nD -= 1\n\nright_end = max(C, D)\nS = S[A:right_end+1]\n\nans = True\nif A < B < C < D:\nif S.count('##'):\nans = False\nelif A < C < B < D:\nif S[A:C+1].count('##') or S[B:D+1].count('##'):\nans = False\nelse:\nif S.count('##'):\nans = False\nelif S[B:D+2].count('...'):\npass\nelif S[B-1:B+2] == '...':\npass\nelse:\nans = False\n\nif ans:\nprint('Yes')\nelse:\nprint('No')\n\n# print(S)\n# print(iwaiwa)\n# print(S[B-1:B+2])",
  "f2": "import sys\ninput = sys.stdin.readline\nsys.setrecursionlimit(250000)\n\n\ndef read():\nN, A, B, C, D = map(int, input().strip().split())\nS = input().strip()\nreturn N, A-1, B-1, C-1, D-1, S\n\n\ndef check_reachable(N, S, start):\nreachable = [False for s in S]\nreachable[start] = True\n\ndef _bfs(x):\nfor d in [1, 2]:\nnx = x + d\nif 0 <= nx < N and not reachable[nx] and S[nx] == \".\":\nreachable[nx] = True\n_bfs(nx)\n\n_bfs(start)\nreturn reachable\n\n\ndef solve(N, A, B, C, D, S):\nr1 = check_reachable(N, S, A)\nr2 = check_reachable(N, S, B)\nif r1[B] and r2[D]:\nif C < D:\nreturn \"Yes\"\nelse:\nfor i in range(B, D+1):\nif r2[i] and 0 <= i-1 < N and 0 <= i+1 < N and r1[i-1] and r1[i+1]:\nreturn \"Yes\"\nreturn \"No\"\n\n\n\nif __name__ == '__main__':\ninputs = read()\nprint(solve(*inputs))",
  "sim": 0.35802469135802467,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03017/s922223606.py",
  "f2_idx": "./Project_CodeNet_Python800/p03017/s293339417.py",
  "response": "No"
 },
 {
  "f1": "\ndef main():\na = int(input())\nprint((a+a**2+a**3))\n\nif __name__ == \"__main__\":\nmain()",
  "f2": "a = int(input())\nans = a*(1+a*(1+a))\nprint(ans)",
  "sim": 0.38095238095238093,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02621/s329894529.py",
  "f2_idx": "./Project_CodeNet_Python800/p02621/s271299907.py",
  "response": "Yes"
 },
 {
  "f1": "n, m = map(int, input().split())\nPY = [list(map(int, input().split())) for _ in range(m)]\n\nPY_sort = sorted(PY, key=lambda x: x[1])\nPY_sort.sort(key=lambda x: x[0])\n\nID = {}\ni, p = 1, PY_sort[0][0]\nfor v in PY_sort:\nif v[0] != p:\ni, p = 1, v[0]\nid = \"%06d%06d\"%(p, i)\nID[v[1]] = id\ni += 1\n\nfor p, y in PY:\nprint(ID[y])",
  "f2": "n,m=map(int, input().split())\nalist=[]\nfor i in range(m):\np,y=map(int, input().split())\nalist.append([i+1,p,y])\nalist.sort(key=lambda x: x[2])\nblist=[0]*(n+1)\nans=[0]*m\nfor i in range(m):\nblist[alist[i][1]]+=1\nans1='0'*(6-len(str(alist[i][1])))\nans2=str(alist[i][1])\nans3='0'*(6-len(str(blist[alist[i][1]])))\nans4=str(blist[alist[i][1]])\nans[alist[i][0]-1]=ans1+ans2+ans3+ans4\nfor i in range(m):\nprint(ans[i])",
  "sim": 0.4827586206896552,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03221/s394606272.py",
  "f2_idx": "./Project_CodeNet_Python800/p03221/s268559062.py",
  "response": "Yes"
 },
 {
  "f1": "###template###\nimport sys\ndef input(): return sys.stdin.readline().rstrip()\ndef mi(): return map(int, input().split())\n###template###\n\nN = int(input())\nA = input()\nB = input()\nC = input()\n\nans = 0\nfor a, b, c in zip(A, B, C):\nans += len(set((a,b,c)))-1\n\nprint(ans)\n",
  "f2": "N=int(input())\nA=list(input())\nB=list(input())\nC=list(input())\n\nanswer=0\nfor i in range(N):\na=A[i]\nb=B[i]\nc=C[i]\n\nif a==b==c:\ncontinue\nelif a==b or b==c or c==a:\nanswer+=1\nelse:\nanswer+=2\n\nprint(answer)",
  "sim": 0.38,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03140/s596788052.py",
  "f2_idx": "./Project_CodeNet_Python800/p03140/s421102674.py",
  "response": "Yes"
 },
 {
  "f1": "def gcd(x,y):\nif y == 0:\nreturn x\nelse:\nreturn gcd(y,x%y)\n\nn , k = map(int,input().split())\na = list(map(int,input().split()))\nfl = \"\"\n\nif k > max(a):\nfl = \"IMPOSSIBLE\"\n\nelse:\ng = a[0]\nfor i in range(n-1):\ng = gcd( g , a[i+1] )\n\nif k % g == 0:\nfl = \"POSSIBLE\"\nelse:\nfl = \"IMPOSSIBLE\"\n\nprint(fl)",
  "f2": "N,K,*A=map(int,open(0).read().split())\nfrom math import*\nc=A[0]\nfor a in A:\nc=gcd(c,a)\nprint('IM'*(K%c>0 or K>max(A))+'POSSIBLE')",
  "sim": 0.3888888888888889,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03651/s575230278.py",
  "f2_idx": "./Project_CodeNet_Python800/p03651/s976111237.py",
  "response": "Yes"
 },
 {
  "f1": "# -*- coding: utf-8 -*-\nimport numpy as np\nimport sys\nfrom collections import deque\nfrom collections import defaultdict\nimport heapq\nimport collections\nimport itertools\nimport bisect\n\nsys.setrecursionlimit(10**6)\ndef zz():\nreturn list(map(int, sys.stdin.readline().split()))\n\n\ndef z():\nreturn int(sys.stdin.readline())\n\n\ndef S():\nreturn sys.stdin.readline()\n\n\ndef C(line):\nreturn [sys.stdin.readline() for _ in range(line)]\n\n\nN=z()\nA = zz()\nA.append(0)\ndiff = [0]*N\nprev = 0\nA_ = [0]\nA_.extend(A)\nsum_ = 0\nfor i in range(len(A_)-1):\nsum_ += abs(A_[i] - A_[i + 1])\n\nfor i in (range(1,N+1)):\nsub = abs(A_[i]-A_[i-1]) + abs(A_[i] - A_[i+1])\nadd = abs(A_[i - 1] - A_[i + 1])\nprint(sum_ + add - sub)",
  "f2": "n=int(input())\nl=[0]+list(map(int,input().split()))+[0]\ns=sum(abs(l[i+1]-l[i]) for i in range(n+1))\nfor i in range(n):\na,b,c=l[i:i+3]\nprint(s-abs(b-a)-abs(c-b)+abs(c-a))",
  "sim": 0.30985915492957744,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03401/s913547551.py",
  "f2_idx": "./Project_CodeNet_Python800/p03401/s051035267.py",
  "response": "Yes"
 },
 {
  "f1": "def solve(n):\nif n % 2 == 0:\nreturn n // 2 - 1\nelse:\nreturn (n - 1) // 2\n\n\ndef main():\nn = int(input())\nres = solve(n)\nprint(res)\n\n\ndef test():\nassert solve(4) == 1\nassert solve(999999) == 499999\n\n\nif __name__ == \"__main__\":\ntest()\nmain()",
  "f2": "num = int(input())\nnumList = list(range(0, num))\nlistLength = len(numList)\ncounter = 0\n\n#print(numList)\n\nm = [0] * 10000000\n\nfor i in range(0, listLength):\nm[numList[i]]\nm[numList[i]] += 1\n\nsecondCount = 0\n\nfor i in range(0, listLength):\nsecondCount += m[num - numList[i]]\nif (num - numList[i] == numList[i]):\nsecondCount -= 1\n\nprint(int(secondCount / 2))",
  "sim": 0.26,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02865/s080419216.py",
  "f2_idx": "./Project_CodeNet_Python800/p02865/s927096417.py",
  "response": "No"
 },
 {
  "f1": "from collections import deque\nn=int(input())\na=[0]*n\nfor i in range(n):\na[i]=int(input())\na.sort()\nans1=0\nd1=deque([a[0]])\nl1=1\nr1=n-1\nwhile l1<=r1:\nd1.appendleft(a[r1])\nr1-=1\nif l1<=r1:\nd1.append(a[r1])\nr1-=1\nif l1<=r1:\nd1.appendleft(a[l1])\nl1+=1\nif l1<=r1:\nd1.append(a[l1])\nl1+=1\nd1_l=list(d1)\nans2=0\nd2=deque([a[n-1]])\nl2=0\nr2=n-2\nwhile l2<=r2:\nd2.appendleft(a[l2])\nl2+=1\nif l2<=r2:\nd2.append(a[l2])\nl2+=1\nif l2<=r2:\nd2.appendleft(a[r2])\nr2-=1\nif l2<=r2:\nd2.append(a[r2])\nr2-=1\nd2_l=list(d2)\nfor i in range(n-1):\nans1+=abs(d1_l[i]-d1_l[i+1])\nfor i in range(n-1):\nans2+=abs(d2_l[i]-d2_l[i+1])\nprint(max(ans1,ans2))",
  "f2": "import bisect, collections, copy, heapq, itertools, math, string, sys\ninput = lambda: sys.stdin.readline().rstrip()\nsys.setrecursionlimit(10**7)\nINF = float('inf')\ndef I(): return int(input())\ndef F(): return float(input())\ndef SS(): return input()\ndef LI(): return [int(x) for x in input().split()]\ndef LI_(): return [int(x)-1 for x in input().split()]\ndef LF(): return [float(x) for x in input().split()]\ndef LSS(): return input().split()\n\ndef resolve():\nN = I()\nA = [I() for _ in range(N)]\nA.sort()\n\nif N % 2 == 0:\nans = (2 * sum(A[N//2:]) - A[N//2]) - (2 * sum(A[:N//2]) - A[N//2-1])\nprint(ans)\nelse:\nans0 = 2 * sum(A[N//2+1:]) - (2 * sum(A[:N//2+1]) - A[N//2-1] - A[N//2])\nans1 = (2 * sum(A[N//2:]) - A[N//2] - A[N//2+1]) - 2 * sum(A[:N//2])\nprint(max(ans0, ans1))\n\nif __name__ == '__main__':\nresolve()",
  "sim": 0.28888888888888886,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03229/s077310211.py",
  "f2_idx": "./Project_CodeNet_Python800/p03229/s291859118.py",
  "response": "No"
 },
 {
  "f1": "a,b,x=map(int,input().split())\n\nq1,r1=divmod(a,x)\nq2,_=divmod(b,x)\n\nprint(q2-q1+(r1==0))",
  "f2": "def main():\nA, B, X = map(int, input().split())\nans = B // X - (A - 1) // X\nprint(ans)\n\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.35294117647058826,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03861/s935190491.py",
  "f2_idx": "./Project_CodeNet_Python800/p03861/s863764510.py",
  "response": "Yes"
 },
 {
  "f1": "N,M=map(int,input().split())\nP=10**9+7\ndef factorization(n):\narr = []\ntemp = n\nfor i in range(2, int(-(-n**0.5//1))+1):\nif temp%i==0:\ncnt=0\nwhile temp%i==0:\ncnt+=1\ntemp //= i\narr.append([i, cnt])\n\nif temp!=1:\narr.append([temp, 1])\n\nif arr==[]:\narr.append([n, 1])\n\nreturn arr\na=factorization(M)\nans=1\nfor x in a:\nc=1\nfor i in range(x[1]):\nc*=(N+x[1]-i-1)\nfor i in range(x[1]):\nc//=(i+1)\nans*=c\nans=ans%P\nif M==1:\nans=1\nprint(ans)",
  "f2": "import sys\nread = sys.stdin.read\nreadline = sys.stdin.readline\nreadlines = sys.stdin.readlines\n\nMOD = 10**9+7\n\nfac = [1, 1]     # 元テーブル\nf_inv = [1, 1]   # 逆元テーブル\ninv = [0, 1]     # 逆元テーブル計算用テーブル\ndef prepare(n, mod):\nfor i in range(2, n+1):\nfac.append((fac[-1] * i) % mod)\n\n\ndef cmb(n, r, mod):\nif n < 0 or r < 0:\nreturn 0\nif r > n:\nreturn 0\n\nreturn fac[n] * pow(fac[r],MOD-2,MOD) * pow(fac[n-r],MOD-2,MOD) % mod\n\n\ndef prime_factorization(n):\nd = []\ni, e = 2, 0  # factor, exponent\nwhile i * i <= n:\nwhile n % i == 0:\nn //= i\ne += 1\nif e > 0:\nd.append((i, e))\ni += 1\ne = 0\nif n > 1:\nd.append((n, 1))\nreturn d\n\n\ndef main():\nN,M = map(int, readline().split())\n\nprepare(N+100, MOD)\nd = prime_factorization(M)\n\nans = 1\nfor i, e in d:\nans *= cmb(N-1+e, e, MOD)\nans %= MOD\n\nprint(ans)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.46987951807228917,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03253/s459008367.py",
  "f2_idx": "./Project_CodeNet_Python800/p03253/s213127805.py",
  "response": "Yes"
 },
 {
  "f1": "# import itertools\n# import math\n# import sys\n# sys.setrecursionlimit(500*500)\n# import numpy as np\n# import heapq\n# from collections import deque\n# import sympy\n\nN = int(input())\n# S = input()\n# n, *a = map(int, open(0))\n# N, M = map(int, input().split())\nA = list(map(int, input().split()))\n# B = list(map(int, input().split()))\n# tree = [[] for _ in range(N + 1)]\n# B_C = [list(map(int,input().split())) for _ in range(M)]\n# S = input()\n\n# B_C = sorted(B_C, reverse=True, key=lambda x:x[1])\n# all_cases = list(itertools.permutations(P))\n# a = list(itertools.combinations_with_replacement(range(1, M + 1), N))\n# itertools.product((0,1), repeat=n)\n\n# A = np.array(A)\n# cum_A = np.cumsum(A)\n# cum_A = np.insert(cum_A, 0, 0)\n\n# def dfs(tree, s):\n#     for l in tree[s]:\n#         if depth[l[0]] == -1:\n#             depth[l[0]] = depth[s] + l[1]\n#             dfs(tree, l[0])\n# dfs(tree, 1)\n\n# def factorization(n):\n#     arr = []\n#     temp = n\n#     for i in range(2, int(-(-n**0.5//1))+1):\n#         if temp%i==0:\n#             cnt=0\n#             while temp%i==0:\n#                 cnt+=1\n#                 temp //= i\n#             arr.append([i, cnt])\n#     if temp!=1:\n#         arr.append([temp, 1])\n#     if arr==[]:\n#         arr.append([n, 1])\n#     return arr\n\nA.insert(0, 0)\nB = [0] * (N + 1)\n\nfor i in range(N, 0, -1):\nj = 1\ncnt = 0\nwhile(i * j <= N):\ncnt += B[i * j]\nj += 1\nflg = cnt % 2\nif A[i] != flg:\nB[i] = 1\n\n# print(B)\nprint(sum(B))\nfor i, b in enumerate(B):\nif b == 1:\nprint(i)",
  "f2": "kosuu = int(input())\ndp = list(map(int,input().split()))\nans = []\ndef make_divisors(n):\nlower_divisors , upper_divisors = [], []\ni = 1\nwhile i*i <= n:\nif n % i == 0:\nlower_divisors.append(i)\nif i != n // i:\nupper_divisors.append(n//i)\ni += 1\nreturn set((lower_divisors + upper_divisors[::-1])[:-1])\nfor i in range(kosuu):\nhako = kosuu - i\nif dp[hako-1] == 1:\nfor j in make_divisors(hako):\ndp[j-1] ^= 1\nans.append(str(hako))\nprint(len(ans))\nprint(' '.join(ans))",
  "sim": 0.30392156862745096,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02972/s980458520.py",
  "f2_idx": "./Project_CodeNet_Python800/p02972/s961258302.py",
  "response": "Yes"
 },
 {
  "f1": "from bisect import bisect_right\nN,K = map(int,input().split())\nV = list(map(int,input().split()))\ncmax = -10**9\nfor x in range(K+1):\nfor y in range(K-x+1):\nA = V[:x]\nif y==0:\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nif y<=N-x:\nA += V[-y:]\nA = sorted(A)\nind = bisect_right(A,0)\nif ind>=K-x-y:\ncnt = sum(A[K-x-y:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nelse:\nA = sorted(V[:])\nind = bisect_right(A,0)\nif ind>=K-N:\ncnt = sum(A[K-N:])\nelse:\ncnt = sum(A[ind:])\ncmax = max(cmax,cnt)\nprint(cmax)",
  "f2": "import bisect\n\n\nn, k = map(int, input().split())\nv = list(map(int, input().split()))\n\nres = 0\nfor toru in range(0, min(k, n) + 1):\ntumeru = k - toru\nfor migi in range(0, toru + 1):\nhidari = toru - migi\nans = v[0:hidari] + v[n - migi:n]\nans = sorted(ans)\nind = bisect.bisect_left(ans, 0)\nres = max((sum(ans) - sum(ans[0:min(ind, tumeru)])), res)\nprint(res)",
  "sim": 0.47368421052631576,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03032/s890432043.py",
  "f2_idx": "./Project_CodeNet_Python800/p03032/s710074325.py",
  "response": "Yes"
 },
 {
  "f1": "def II(): return int(input())\ndef MI(): return map(int, input().split())\ndef LI(): return list(map(int, input().split()))\n\nN=II()\nA=LI()\ncnt=[0]*((10**6)+1)\nfor elem in A:\ncnt[elem]+=1\nunique=[]\nfor i in range((10**6)+1):\nif cnt[i]==1:\nunique.append(i)\ncnt=[0]*((10**6)+1)\nA=list(set(A))\nfor elem in A:\nfor m in range(elem*2,10**6+1,elem):\ncnt[m]=1\nans=0\nfor i in unique:\nif cnt[i]==0:\nans+=1\nprint(ans)",
  "f2": "#!python3\n\nimport sys\niim = lambda: map(int, sys.stdin.readline().rstrip().split())\n\ndef resolve():\nit = map(int, sys.stdin.read().split())\nN = next(it)\nA = [next(it) for i in range(N)]\n\nif N == 1:\nprint(1)\nreturn\n\nax = max(A)+1\ndp = [0]*ax\nfor ai in A:\nda = dp[ai]\nif da > 1:\ncontinue\ndp[ai] += 1\nif da == 0:\nfor aj in range(2*ai, ax, ai):\ndp[aj] = 2\nans = 0\nfor ai in A:\nif dp[ai] == 1:\nans += 1\nprint(ans)\n\n\nif __name__ == \"__main__\":\nresolve()",
  "sim": 0.4461538461538462,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02642/s363098278.py",
  "f2_idx": "./Project_CodeNet_Python800/p02642/s695619165.py",
  "response": "Yes"
 },
 {
  "f1": "rp = [ele for ele in input().split()]\nop = ['+','-','*']\nstack = []\nfor ele in rp:\nif ele not in op:\n# ele is number\nstack.append(eval(ele))\nelse:\n# ele is operator\nnum_2 = stack.pop()\nnum_1 = stack.pop()\nif ele == '+':\nstack.append(num_1 + num_2)\nelif ele == '-':\nstack.append(num_1 - num_2)\nelse:\n# ele == '*'\nstack.append(num_1 * num_2)\nprint(stack[0])",
  "f2": "class Stack:\ndef __init__(self, stack = None):\nif type(stack) is type([]):\nself.stack = stack\nself.top = len(stack)\nelse:\nself.stack = []\nself.top = 0\n\ndef isEmpty(self):\nreturn self.top == 0\n\ndef isFull(self):\nreturn self.top >= MAX - 1\n\ndef push(self, e):\nif len(self.stack) != (self.top):\nself.stack[self.top] = e\nelse:\nself.stack.append(e)\nself.top += 1\n\ndef pop(self):\nself.top -= 1\nreturn self.stack[self.top]\n\nS = input().split(\" \")\n\noperators = [\"+\", \"-\", \"*\"]\n\n\nstack = Stack()\nfor s in S:\nif s in operators:\na = stack.pop()\nb = stack.pop()\n#         print(\"%d %s %d\"%(a, s, b))\nresult = eval(\"%d %s %d\"%(b, s, a))\nstack.push(result)\nelse:\nstack.push(int(s))\nprint (stack.pop())",
  "sim": 0.3055555555555556,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02263/s885602482.py",
  "f2_idx": "./Project_CodeNet_Python800/p02263/s719034915.py",
  "response": "Yes"
 },
 {
  "f1": "def Int():\nreturn int(input())\ndef Ints():\nreturn map(int,input().split())\ndef IntList():\nreturn list(Ints())\ndef IntMat(N):\nreturn [IntList() for i in range(N)]\n\nimport sys\nsys.setrecursionlimit(4100000)\nrl = sys.stdin.readline\n\nH1,M1,H2,M2,K = Ints()\n\nS = (H2-H1)*60+(M2-M1)\n\nprint(S-K)",
  "f2": "\nh1,m1,h2,m2,k = map(int,input().split())\n\na = 60*(h2-h1)\nb = m2-m1\n##起きている合計時間\nc = a+b\n##勉強開始時間の最遅時間\nd = c-k\nprint(d)",
  "sim": 0.2641509433962264,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02663/s270893737.py",
  "f2_idx": "./Project_CodeNet_Python800/p02663/s176515060.py",
  "response": "Yes"
 },
 {
  "f1": "import numpy as np\n\n\ndef solve():\nN, T = map(int, input().split())\nab_l = [[0, 0] for _ in range(N)]\nfor i in range(N):\nab_l[i][0], ab_l[i][1] = map(int, input().split())\nab_l.sort()\ndp = np.zeros(T, dtype=int)\nans = 0\n\nfor a, b in ab_l:\nans = max(ans, dp[-1] + b)\ndp[a:] = np.maximum(dp[a:], dp[:-a]+b)\n\nprint(ans)\n\n\nif __name__ == '__main__':\nsolve()",
  "f2": "#import sys\n#import numpy as np\nimport math\n#from fractions import Fraction\nimport itertools\nfrom collections import deque\nfrom collections import Counter\nimport heapq\n#from fractions  import gcd\n#input=sys.stdin.readline\nimport bisect\nn,t=map(int,input().split())\nd1=[[0]*t for i in range(n+1)]\nd2=[[0]*t for i in range(n+1)]\n\nab=[list(map(int,input().split())) for _ in range(n)]\n\nfor i in range(1,n+1):\na=ab[i-1][0]\nb=ab[i-1][1]\nfor j in range(t):\nif j<a:\nd1[i][j]=d1[i-1][j]\nelse:\nd1[i][j]=max(d1[i][j],d1[i-1][j],d1[i-1][j-a]+b)\na,b=ab[n-i]\nfor j in range(t):\nif j<a:\nd2[n-i][j]=d2[n-i+1][j]\nelse:\nd2[n-i][j]=max(d2[n-i][j],d2[n-i+1][j],d2[n-i+1][j-a]+b)\nans=0\nfor i in range(1,n+1):\nb=ab[i-1][1]\nfor j in range(t):\nans=max(ans,b+d1[i-1][j]+d2[i][t-1-j])\nprint(ans)",
  "sim": 0.417910447761194,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02863/s204812010.py",
  "f2_idx": "./Project_CodeNet_Python800/p02863/s315881590.py",
  "response": "No"
 },
 {
  "f1": "N, K = map(int, input().split())\n*A, = map(int, input().split())\n*F, = map(int, input().split())\nA, F = sorted(A), sorted(F, reverse=True)\n\ndef cond(x):\nk = 0\nfor a, f in zip(A, F): k += max(a - (x // f), 0)\nreturn True if k <= K else False\n\nMIN = -1\nMAX = 10**12 + 1\nleft, right = MIN, MAX # search range\nwhile right - left > 1:\nmid = (left + right) // 2\nif cond(mid): right = mid\nelse: left = mid\nprint(right)",
  "f2": "import sys\nfrom collections import deque\nimport bisect\nimport copy\nimport heapq\nimport itertools\nimport math\ninput = sys.stdin.readline\nsys.setrecursionlimit(1000000)\nmod = 10 ** 9 + 7\n\ndef read_values(): return map(int, input().split())\ndef read_index(): return map(lambda x: int(x) - 1, input().split())\ndef read_list(): return list(read_values())\ndef read_lists(N): return [read_list() for n in range(N)]\n\n\ndef cal(A, F, m):\nres = 0\nfor a, f in zip(A, F):\nc = m // f\nres += max(0, a - c)\nreturn res\n\n\ndef main():\nN, K = read_values()\nA = read_list()\nF = read_list()\nA.sort()\nF.sort(reverse=True)\n\nl = 0\nr = 10 ** 12\nwhile l < r:\nm = (l + r) // 2\nif cal(A, F, m) > K:\nl = m + 1\nelse:\nr = m\n\nprint(r)\n\n\nif __name__ == \"__main__\":\nmain()",
  "sim": 0.43956043956043955,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02883/s128761130.py",
  "f2_idx": "./Project_CodeNet_Python800/p02883/s696588997.py",
  "response": "Yes"
 },
 {
  "f1": "import sys\ndef input(): return sys.stdin.readline().strip()\ndef mapint(): return map(int, input().split())\nsys.setrecursionlimit(10**9)\n\nN = int(input())\nAs = list(mapint())\nHALF = sum(As)/2\n\nfrom itertools import accumulate\nfrom bisect import bisect_left\ncum = list(accumulate(As))\nidx = bisect_left(cum, HALF)\nL = abs(sum(As[:idx])-sum(As[idx:]))\nR = abs(sum(As[:idx+1])-sum(As[idx+1:]))\nprint(min(L, R))",
  "f2": "import sys, math, re\nfrom functools import lru_cache\nfrom collections import defaultdict\nsys.setrecursionlimit(500000)\nMOD = 10**9+7\n\ndef input():\nreturn sys.stdin.readline()[:-1]\n\ndef mi():\nreturn map(int, input().split())\n\ndef ii():\nreturn int(input())\n\ndef i2(n):\ntmp = [list(mi()) for i in range(n)]\nreturn [list(i) for i in zip(*tmp)]\n\n\ndef main():\nN = ii()\nA = list(mi())\ns = sum(A)\nt = 0\nm = math.inf\nfor i in range(N):\nt += A[i]\nm = min(m, abs(s-2*t))\n\nprint(m)\n\nif __name__ == '__main__':\nmain()",
  "sim": 0.4230769230769231,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p02854/s686033791.py",
  "f2_idx": "./Project_CodeNet_Python800/p02854/s178310151.py",
  "response": "No"
 },
 {
  "f1": "n, k = map(int, input().split())\ns = input()\n\nnums = []\nnow = 1 # 今見ている数\ncnt = 0 # nowが並んでいる個数\nfor i in range(n):\nif s[i] == str(now):\ncnt += 1\nelse:\nnums.append(cnt) # 切り替わりで追加\nnow = 1 - now # 0と1を切り替える\ncnt = 1 # 新しいものをカウントし始める\n# 最後\nif cnt != 0:\nnums.append(cnt)\n\n# 調整\nif len(nums) % 2 == 0:\nnums.append(0)\n\nadd = 2 * k + 1\n\n# 累積和を作る\nacc = [0] * (len(nums) + 1)\nfor i in range(len(nums)):\nacc[i + 1] = acc[i] + nums[i]\n\nres = 0\n# 偶数番目だけ見る\nfor i in range(0, len(nums), 2):\n# [left, right)\nleft = i\nright = min(i + add, len(nums))\ntmp = acc[right] - acc[left]\nres = max(res, tmp)\n\nprint(res)",
  "f2": "def main():\nN, K = [int(x) for x in input().split(\" \")]\nS = list(input())\ncnt = [0] # idx = 0, 2, 4 ... -> handstand\na = 0\nfor i in range(len(S)):\nif S[i] == \"0\":\nif a % 2 == 0:\na += 1\ncnt.append(1)\nelse:\ncnt[-1] += 1\nelif S[i] == \"1\":\nif a % 2 == 0:\ncnt[-1] += 1\nelse:\na += 1\ncnt.append(1)\nif S[-1] == \"0\":\ncnt.append(0)\n\nif K >= (len(cnt) - 1) / 2:\nprint(N)\nreturn 0\n\nT = [sum(cnt[:(2 * K + 1)])]\nfor i in range(0, len(cnt) - 2 * K - 2, 2):\nT.append(T[-1] - cnt[i] - cnt[i + 1] + cnt[i + 2 * K + 1] + cnt[i + 2 * K + 2])\nprint(max(T))\n\nmain()",
  "sim": 0.4189189189189189,
  "type": "T4",
  "f1_idx": "./Project_CodeNet_Python800/p03074/s644282851.py",
  "f2_idx": "./Project_CodeNet_Python800/p03074/s157149880.py",
  "response": "Yes"
 }
]